{"result":[{"scriptId":"12","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":9499,"endOffset":9570,"count":133}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":9575,"endOffset":9624,"count":585}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9629,"endOffset":9674,"count":107}],"isBlockCoverage":true},{"functionName":"desc.value","ranges":[{"startOffset":11239,"endOffset":11306,"count":26}],"isBlockCoverage":true},{"functionName":"SafeMap","ranges":[{"startOffset":11964,"endOffset":11992,"count":297}],"isBlockCoverage":false},{"functionName":"SafeWeakMap","ranges":[{"startOffset":12136,"endOffset":12164,"count":1}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":12293,"endOffset":12321,"count":299}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":12745,"endOffset":12801,"count":2}],"isBlockCoverage":true},{"functionName":"SafePromise","ranges":[{"startOffset":13140,"endOffset":13182,"count":510}],"isBlockCoverage":true},{"functionName":"primordials.SafePromisePrototypeFinally","ranges":[{"startOffset":13686,"endOffset":13960,"count":85}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13831,"endOffset":13955,"count":85}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13861,"endOffset":13910,"count":85}],"isBlockCoverage":true},{"functionName":"primordials.SafePromiseAllReturnArrayLike","ranges":[{"startOffset":15280,"endOffset":15836,"count":105}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15315,"endOffset":15835,"count":105},{"startOffset":15485,"endOffset":15504,"count":50},{"startOffset":15577,"endOffset":15831,"count":179},{"startOffset":15615,"endOffset":15638,"count":0},{"startOffset":15831,"endOffset":15834,"count":179}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15706,"endOffset":15815,"count":179},{"startOffset":15788,"endOffset":15807,"count":55}],"isBlockCoverage":true},{"functionName":"primordials.SafePromiseAllReturnVoid","ranges":[{"startOffset":16178,"endOffset":16580,"count":213}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16213,"endOffset":16579,"count":213},{"startOffset":16310,"endOffset":16320,"count":103},{"startOffset":16367,"endOffset":16575,"count":358},{"startOffset":16405,"endOffset":16428,"count":179},{"startOffset":16429,"endOffset":16442,"count":179},{"startOffset":16575,"endOffset":16578,"count":358}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16496,"endOffset":16559,"count":358},{"startOffset":16541,"endOffset":16551,"count":110}],"isBlockCoverage":true}]},{"scriptId":"15","url":"node:internal/bootstrap/realm","functions":[{"functionName":"internalBinding","ranges":[{"startOffset":5789,"endOffset":6051,"count":132}],"isBlockCoverage":false},{"functionName":"getOwn","ranges":[{"startOffset":6211,"endOffset":6365,"count":5165},{"startOffset":6347,"endOffset":6362,"count":0}],"isBlockCoverage":true},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":8874,"endOffset":8949,"count":236}],"isBlockCoverage":true},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":8960,"endOffset":9054,"count":1067}],"isBlockCoverage":true},{"functionName":"getCanBeRequiredByUsersWithoutSchemeList","ranges":[{"startOffset":9317,"endOffset":9426,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeRequirableId","ranges":[{"startOffset":9437,"endOffset":9782,"count":680},{"startOffset":9513,"endOffset":9675,"count":0},{"startOffset":9731,"endOffset":9755,"count":104},{"startOffset":9755,"endOffset":9781,"count":576}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":9940,"endOffset":10652,"count":118},{"startOffset":10021,"endOffset":10213,"count":0},{"startOffset":10277,"endOffset":10574,"count":19},{"startOffset":10536,"endOffset":10540,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":10656,"endOffset":11418,"count":132},{"startOffset":10694,"endOffset":10713,"count":113},{"startOffset":10713,"endOffset":11417,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11155,"endOffset":11258,"count":19}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":11714,"endOffset":12058,"count":137},{"startOffset":11833,"endOffset":12048,"count":5165},{"startOffset":11910,"endOffset":11919,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":12062,"endOffset":12884,"count":3006}],"isBlockCoverage":false},{"functionName":"requireBuiltin","ranges":[{"startOffset":13079,"endOffset":13444,"count":2890}],"isBlockCoverage":false}]},{"scriptId":"16","url":"node:internal/errors","functions":[{"functionName":"isErrorStackTraceLimitWritable","ranges":[{"startOffset":5751,"endOffset":6258,"count":516},{"startOffset":5981,"endOffset":6004,"count":0},{"startOffset":6105,"endOffset":6148,"count":0},{"startOffset":6227,"endOffset":6255,"count":0}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":10461,"endOffset":11463,"count":172}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":11208,"endOffset":11286,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":11628,"endOffset":11893,"count":9}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":12515,"endOffset":13388,"count":172},{"startOffset":12928,"endOffset":13387,"count":0}],"isBlockCoverage":true},{"functionName":"captureLargerStackTrace","ranges":[{"startOffset":13748,"endOffset":14150,"count":172}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48656,"endOffset":48809,"count":172}],"isBlockCoverage":true}]},{"scriptId":"17","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3721,"endOffset":3783,"count":145}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3789,"endOffset":3859,"count":2}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4967,"endOffset":5234,"count":6},{"startOffset":5095,"endOffset":5233,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5686,"endOffset":5717,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8780,"endOffset":8942,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9044,"endOffset":9240,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12549,"endOffset":12599,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13587,"endOffset":13623,"count":181}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":14526,"endOffset":14561,"count":5}],"isBlockCoverage":true}]},{"scriptId":"18","url":"node:internal/timers","functions":[{"functionName":"","ranges":[{"startOffset":4448,"endOffset":4473,"count":1}],"isBlockCoverage":true},{"functionName":"initAsyncResource","ranges":[{"startOffset":5610,"endOffset":5888,"count":9},{"startOffset":5836,"endOffset":5886,"count":0}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":5994,"endOffset":7040,"count":8},{"startOffset":6142,"endOffset":6494,"count":0},{"startOffset":6851,"endOffset":6858,"count":2},{"startOffset":6859,"endOffset":6865,"count":6}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":7434,"endOffset":7573,"count":4}],"isBlockCoverage":true},{"functionName":"TimersList","ranges":[{"startOffset":7782,"endOffset":8088,"count":5}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":8663,"endOffset":8844,"count":1},{"startOffset":8706,"endOffset":8781,"count":0}],"isBlockCoverage":true},{"functionName":"incRefCount","ranges":[{"startOffset":9465,"endOffset":9547,"count":8},{"startOffset":9524,"endOffset":9545,"count":6}],"isBlockCoverage":true},{"functionName":"decRefCount","ranges":[{"startOffset":9549,"endOffset":9632,"count":8},{"startOffset":9608,"endOffset":9630,"count":6}],"isBlockCoverage":true},{"functionName":"insert","ranges":[{"startOffset":10715,"endOffset":11366,"count":13},{"startOffset":11038,"endOffset":11339,"count":5},{"startOffset":11273,"endOffset":11335,"count":3}],"isBlockCoverage":true},{"functionName":"compareTimersLists","ranges":[{"startOffset":12223,"endOffset":12428,"count":14},{"startOffset":12325,"endOffset":12405,"count":0}],"isBlockCoverage":true},{"functionName":"setPosition","ranges":[{"startOffset":12430,"endOffset":12501,"count":15}],"isBlockCoverage":true},{"functionName":"processImmediate","ranges":[{"startOffset":12815,"endOffset":14748,"count":1},{"startOffset":12894,"endOffset":12918,"count":0},{"startOffset":13355,"endOffset":13370,"count":0},{"startOffset":13687,"endOffset":13783,"count":0},{"startOffset":14320,"endOffset":14345,"count":0},{"startOffset":14503,"endOffset":14524,"count":0},{"startOffset":14675,"endOffset":14704,"count":0}],"isBlockCoverage":true},{"functionName":"processTimers","ranges":[{"startOffset":14753,"endOffset":15243,"count":9},{"startOffset":14953,"endOffset":15225,"count":14},{"startOffset":14984,"endOffset":15089,"count":7},{"startOffset":15067,"endOffset":15080,"count":0},{"startOffset":15089,"endOffset":15127,"count":7},{"startOffset":15127,"endOffset":15142,"count":0},{"startOffset":15142,"endOffset":15225,"count":7},{"startOffset":15225,"endOffset":15242,"count":2}],"isBlockCoverage":true},{"functionName":"listOnTimeout","ranges":[{"startOffset":15247,"endOffset":17729,"count":7},{"startOffset":15450,"endOffset":17184,"count":15},{"startOffset":15671,"endOffset":15899,"count":6},{"startOffset":15899,"endOffset":15939,"count":9},{"startOffset":15939,"endOffset":15954,"count":2},{"startOffset":15954,"endOffset":16000,"count":7},{"startOffset":16000,"endOffset":16156,"count":9},{"startOffset":16156,"endOffset":16391,"count":0},{"startOffset":16391,"endOffset":16510,"count":9},{"startOffset":16510,"endOffset":16532,"count":5},{"startOffset":16532,"endOffset":16646,"count":9},{"startOffset":16646,"endOffset":16714,"count":0},{"startOffset":16723,"endOffset":17151,"count":9},{"startOffset":16759,"endOffset":16787,"count":5},{"startOffset":16789,"endOffset":16898,"count":5},{"startOffset":16898,"endOffset":17143,"count":4},{"startOffset":17046,"endOffset":17063,"count":0},{"startOffset":17112,"endOffset":17133,"count":0},{"startOffset":17151,"endOffset":17184,"count":9},{"startOffset":17184,"endOffset":17725,"count":1}],"isBlockCoverage":true},{"functionName":"Immediate","ranges":[{"startOffset":17811,"endOffset":18133,"count":1}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":18137,"endOffset":18310,"count":1}],"isBlockCoverage":true}]},{"scriptId":"19","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14460,"endOffset":14530,"count":148}],"isBlockCoverage":true},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":14905,"endOffset":15195,"count":148},{"startOffset":15161,"endOffset":15194,"count":0}],"isBlockCoverage":true},{"functionName":"defaultTriggerAsyncIdScope","ranges":[{"startOffset":15512,"endOffset":16005,"count":2},{"startOffset":15622,"endOffset":15653,"count":0}],"isBlockCoverage":true},{"functionName":"hasHooks","ranges":[{"startOffset":16007,"endOffset":16070,"count":743}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16072,"endOffset":16131,"count":149}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16133,"endOffset":16188,"count":148}],"isBlockCoverage":true},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16249,"endOffset":16310,"count":148}],"isBlockCoverage":true},{"functionName":"emitBeforeScript","ranges":[{"startOffset":16801,"endOffset":16977,"count":149},{"startOffset":16949,"endOffset":16975,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":16980,"endOffset":17100,"count":149},{"startOffset":17044,"endOffset":17069,"count":0}],"isBlockCoverage":true},{"functionName":"pushAsyncContext","ranges":[{"startOffset":17445,"endOffset":18015,"count":149},{"startOffset":17665,"endOffset":17715,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":18080,"endOffset":18691,"count":149},{"startOffset":18196,"endOffset":18209,"count":0},{"startOffset":18288,"endOffset":18394,"count":0}],"isBlockCoverage":true}]},{"scriptId":"20","url":"node:internal/validators","functions":[{"functionName":"isUint32","ranges":[{"startOffset":946,"endOffset":1008,"count":242}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1629,"endOffset":1940,"count":322},{"startOffset":1722,"endOffset":1890,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2186,"endOffset":2567,"count":474},{"startOffset":2306,"endOffset":2360,"count":0},{"startOffset":2400,"endOffset":2454,"count":0},{"startOffset":2497,"endOffset":2563,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2811,"endOffset":3274,"count":476},{"startOffset":2983,"endOffset":3051,"count":0},{"startOffset":3085,"endOffset":3153,"count":0},{"startOffset":3190,"endOffset":3270,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3512,"endOffset":3944,"count":322},{"startOffset":3582,"endOffset":3646,"count":0},{"startOffset":3678,"endOffset":3742,"count":0},{"startOffset":3766,"endOffset":3769,"count":0},{"startOffset":3866,"endOffset":3942,"count":0}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":4097,"endOffset":4229,"count":5140}],"isBlockCoverage":false},{"functionName":"validateNumber","ranges":[{"startOffset":4430,"endOffset":4898,"count":329},{"startOffset":4528,"endOffset":4582,"count":0},{"startOffset":4603,"endOffset":4617,"count":0},{"startOffset":4635,"endOffset":4649,"count":0},{"startOffset":4690,"endOffset":4711,"count":0},{"startOffset":4714,"endOffset":4896,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5084,"endOffset":5417,"count":4},{"startOffset":5155,"endOffset":5415,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5228,"endOffset":5289,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoolean","ranges":[{"startOffset":5573,"endOffset":5708,"count":1},{"startOffset":5651,"endOffset":5706,"count":0}],"isBlockCoverage":true},{"functionName":"getOwnPropertyValueOrDefault","ranges":[{"startOffset":5820,"endOffset":6001,"count":39},{"startOffset":5913,"endOffset":5960,"count":24},{"startOffset":5961,"endOffset":5979,"count":22},{"startOffset":5980,"endOffset":5998,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6266,"endOffset":6821,"count":13},{"startOffset":6571,"endOffset":6588,"count":11},{"startOffset":6614,"endOffset":6636,"count":5},{"startOffset":6676,"endOffset":6746,"count":0},{"startOffset":6749,"endOffset":6817,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7775,"endOffset":8053,"count":2},{"startOffset":7837,"endOffset":7900,"count":0},{"startOffset":7933,"endOffset":8051,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9948,"endOffset":10178,"count":237},{"startOffset":10013,"endOffset":10176,"count":0}],"isBlockCoverage":true},{"functionName":"validatePort","ranges":[{"startOffset":10838,"endOffset":11217,"count":1},{"startOffset":10933,"endOffset":10960,"count":0},{"startOffset":10997,"endOffset":11038,"count":0},{"startOffset":11117,"endOffset":11130,"count":0},{"startOffset":11133,"endOffset":11196,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11385,"endOffset":11602,"count":2},{"startOffset":11432,"endOffset":11528,"count":0},{"startOffset":11530,"endOffset":11600,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11802,"endOffset":11918,"count":311}],"isBlockCoverage":false}]},{"scriptId":"21","url":"node:internal/util","functions":[{"functionName":"toUSVString","ranges":[{"startOffset":1754,"endOffset":2066,"count":134},{"startOffset":2023,"endOffset":2065,"count":0}],"isBlockCoverage":true},{"functionName":"getDeprecationWarningEmitter","ranges":[{"startOffset":2660,"endOffset":3309,"count":31}],"isBlockCoverage":false},{"functionName":"shouldEmitWarning","ranges":[{"startOffset":2759,"endOffset":2769,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2806,"endOffset":3306,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":4058,"endOffset":5056,"count":31}],"isBlockCoverage":false},{"functionName":"deprecated","ranges":[{"startOffset":4482,"endOffset":4668,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":5326,"endOffset":5400,"count":4},{"startOffset":5372,"endOffset":5398,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":5579,"endOffset":5710,"count":244},{"startOffset":5649,"endOffset":5667,"count":3},{"startOffset":5669,"endOffset":5683,"count":243},{"startOffset":5683,"endOffset":5709,"count":1}],"isBlockCoverage":true},{"functionName":"slowCases","ranges":[{"startOffset":5712,"endOffset":7463,"count":1},{"startOffset":5766,"endOffset":6010,"count":0},{"startOffset":6015,"endOffset":6145,"count":0},{"startOffset":6150,"endOffset":6554,"count":0},{"startOffset":6595,"endOffset":6611,"count":0},{"startOffset":6639,"endOffset":6658,"count":0},{"startOffset":6676,"endOffset":6768,"count":0},{"startOffset":6770,"endOffset":6914,"count":0},{"startOffset":6916,"endOffset":6945,"count":0},{"startOffset":6950,"endOffset":7096,"count":0},{"startOffset":7101,"endOffset":7248,"count":0},{"startOffset":7253,"endOffset":7407,"count":0},{"startOffset":7412,"endOffset":7457,"count":0}],"isBlockCoverage":true},{"functionName":"cachedResult","ranges":[{"startOffset":8074,"endOffset":8230,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8125,"endOffset":8227,"count":0}],"isBlockCoverage":false},{"functionName":"getCWDURL","ranges":[{"startOffset":10196,"endOffset":10706,"count":1},{"startOffset":10524,"endOffset":10573,"count":0}],"isBlockCoverage":true},{"functionName":"promisify","ranges":[{"startOffset":11072,"endOffset":12933,"count":22},{"startOffset":11192,"endOffset":11248,"count":1},{"startOffset":11335,"endOffset":11612,"count":1},{"startOffset":11612,"endOffset":12719,"count":21},{"startOffset":12719,"endOffset":12881,"count":78},{"startOffset":12881,"endOffset":12932,"count":21}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":11812,"endOffset":12331,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11858,"endOffset":12325,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11912,"endOffset":12275,"count":1},{"startOffset":11951,"endOffset":11992,"count":0},{"startOffset":12033,"endOffset":12053,"count":0},{"startOffset":12055,"endOffset":12220,"count":0}],"isBlockCoverage":true},{"functionName":"spliceOne","ranges":[{"startOffset":13491,"endOffset":13618,"count":6},{"startOffset":13572,"endOffset":13602,"count":2}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":14940,"endOffset":15113,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14997,"endOffset":15110,"count":2},{"startOffset":15033,"endOffset":15040,"count":0}],"isBlockCoverage":true},{"functionName":"defineOperation","ranges":[{"startOffset":15607,"endOffset":15808,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":16301,"endOffset":16444,"count":12}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":16547,"endOffset":16743,"count":12}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17222,"endOffset":17373,"count":4},{"startOffset":17263,"endOffset":17294,"count":0}],"isBlockCoverage":true},{"functionName":"setOwnProperty","ranges":[{"startOffset":18868,"endOffset":19058,"count":425}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21160,"endOffset":21288,"count":1326},{"startOffset":21204,"endOffset":21266,"count":3}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":21416,"endOffset":22093,"count":1},{"startOffset":21886,"endOffset":22063,"count":0}],"isBlockCoverage":true}]},{"scriptId":"22","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":464,"endOffset":598,"count":1205},{"startOffset":521,"endOffset":575,"count":1}],"isBlockCoverage":true},{"functionName":"getAliasesFromBinding","ranges":[{"startOffset":600,"endOffset":731,"count":1}],"isBlockCoverage":true},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":733,"endOffset":877,"count":1}],"isBlockCoverage":true},{"functionName":"refreshOptions","ranges":[{"startOffset":879,"endOffset":960,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":962,"endOffset":1228,"count":1204},{"startOffset":1084,"endOffset":1185,"count":5},{"startOffset":1185,"endOffset":1225,"count":1199}],"isBlockCoverage":true},{"functionName":"getAllowUnauthorized","ranges":[{"startOffset":1230,"endOffset":1695,"count":1},{"startOffset":1367,"endOffset":1393,"count":0},{"startOffset":1395,"endOffset":1665,"count":0}],"isBlockCoverage":true},{"functionName":"get options","ranges":[{"startOffset":1718,"endOffset":1776,"count":1}],"isBlockCoverage":true},{"functionName":"get aliases","ranges":[{"startOffset":1780,"endOffset":1835,"count":1}],"isBlockCoverage":true}]},{"scriptId":"23","url":"node:internal/util/types","functions":[{"functionName":"isUint8Array","ranges":[{"startOffset":236,"endOffset":342,"count":772}],"isBlockCoverage":true},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1232,"endOffset":1344,"count":5}],"isBlockCoverage":true}]},{"scriptId":"24","url":"node:internal/linkedlist","functions":[{"functionName":"peek","ranges":[{"startOffset":133,"endOffset":225,"count":16},{"startOffset":186,"endOffset":198,"count":1},{"startOffset":198,"endOffset":224,"count":15}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":260,"endOffset":487,"count":21}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":543,"endOffset":995,"count":13},{"startOffset":594,"endOffset":611,"count":5},{"startOffset":613,"endOffset":636,"count":8}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":997,"endOffset":1057,"count":4}],"isBlockCoverage":true}]},{"scriptId":"25","url":"node:internal/priority_queue","functions":[{"functionName":"insert","ranges":[{"startOffset":692,"endOffset":875,"count":5},{"startOffset":826,"endOffset":843,"count":0}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":879,"endOffset":917,"count":16}],"isBlockCoverage":true},{"functionName":"percolateDown","ranges":[{"startOffset":921,"endOffset":1585,"count":7},{"startOffset":1201,"endOffset":1248,"count":4},{"startOffset":1363,"endOffset":1369,"count":5},{"startOffset":1369,"endOffset":1494,"count":2}],"isBlockCoverage":true},{"functionName":"percolateUp","ranges":[{"startOffset":1589,"endOffset":2077,"count":5},{"startOffset":1764,"endOffset":1986,"count":3},{"startOffset":1852,"endOffset":1858,"count":2},{"startOffset":1858,"endOffset":1986,"count":1}],"isBlockCoverage":true},{"functionName":"removeAt","ranges":[{"startOffset":2081,"endOffset":2411,"count":5},{"startOffset":2239,"endOffset":2253,"count":3},{"startOffset":2255,"endOffset":2407,"count":1},{"startOffset":2275,"endOffset":2325,"count":0},{"startOffset":2335,"endOffset":2357,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":2415,"endOffset":2569,"count":1},{"startOffset":2516,"endOffset":2523,"count":0}],"isBlockCoverage":true}]},{"scriptId":"26","url":"node:internal/util/inspect","functions":[{"functionName":"formatWithOptions","ranges":[{"startOffset":72188,"endOffset":72375,"count":1}],"isBlockCoverage":true},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":72745,"endOffset":76769,"count":1},{"startOffset":72965,"endOffset":76568,"count":0},{"startOffset":76572,"endOffset":76768,"count":0}],"isBlockCoverage":true}]},{"scriptId":"27","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":157,"endOffset":307,"count":827},{"startOffset":205,"endOffset":305,"count":0}],"isBlockCoverage":true}]},{"scriptId":"28","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":519,"endOffset":991,"count":1},{"startOffset":610,"endOffset":947,"count":0}],"isBlockCoverage":true},{"functionName":"testEnabled","ranges":[{"startOffset":885,"endOffset":942,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":973,"endOffset":984,"count":16}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":1419,"endOffset":1427,"count":2075}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1548,"endOffset":2106,"count":16},{"startOffset":1623,"endOffset":2078,"count":10},{"startOffset":1642,"endOffset":2031,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1731,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2326,"endOffset":3352,"count":17}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2357,"endOffset":2453,"count":16}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2468,"endOffset":2862,"count":16},{"startOffset":2715,"endOffset":2745,"count":7},{"startOffset":2752,"endOffset":2791,"count":4},{"startOffset":2798,"endOffset":2852,"count":5}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2892,"endOffset":2961,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":2980,"endOffset":3175,"count":16},{"startOffset":3028,"endOffset":3058,"count":7},{"startOffset":3065,"endOffset":3104,"count":4},{"startOffset":3111,"endOffset":3165,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3246,"endOffset":3280,"count":0}],"isBlockCoverage":false}]},{"scriptId":"29","url":"node:events","functions":[{"functionName":"lazyEventEmitterAsyncResource","ranges":[{"startOffset":2894,"endOffset":6205,"count":5},{"startOffset":2984,"endOffset":6167,"count":1}],"isBlockCoverage":true},{"functionName":"EventEmitterReferencingAsyncResource","ranges":[{"startOffset":3439,"endOffset":3543,"count":0}],"isBlockCoverage":false},{"functionName":"get eventEmitter","ranges":[{"startOffset":3601,"endOffset":3790,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterAsyncResource","ranges":[{"startOffset":4079,"endOffset":4603,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":4740,"endOffset":5110,"count":0}],"isBlockCoverage":false},{"functionName":"emitDestroy","ranges":[{"startOffset":5171,"endOffset":5359,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncId","ranges":[{"startOffset":5419,"endOffset":5610,"count":0}],"isBlockCoverage":false},{"functionName":"get triggerAsyncId","ranges":[{"startOffset":5670,"endOffset":5875,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncResource","ranges":[{"startOffset":5965,"endOffset":6154,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":6339,"endOffset":6408,"count":111}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6893,"endOffset":6949,"count":5}],"isBlockCoverage":true},{"functionName":"checkListener","ranges":[{"startOffset":7859,"endOffset":7937,"count":109}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8045,"endOffset":8093,"count":22}],"isBlockCoverage":true},{"functionName":"EventEmitter.init","ranges":[{"startOffset":9989,"endOffset":10586,"count":111}],"isBlockCoverage":false},{"functionName":"addCatch","ranges":[{"startOffset":10589,"endOffset":11148,"count":34},{"startOffset":10676,"endOffset":11095,"count":0},{"startOffset":11100,"endOffset":11146,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10877,"endOffset":11087,"count":0}],"isBlockCoverage":false},{"functionName":"_getMaxListeners","ranges":[{"startOffset":12161,"endOffset":12310,"count":13},{"startOffset":12279,"endOffset":12309,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":13467,"endOffset":15770,"count":211}],"isBlockCoverage":false},{"functionName":"_addListener","ranges":[{"startOffset":15773,"endOffset":17666,"count":79}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":17844,"endOffset":17936,"count":78}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":18223,"endOffset":18326,"count":1}],"isBlockCoverage":true},{"functionName":"onceWrapper","ranges":[{"startOffset":18329,"endOffset":18593,"count":6},{"startOffset":18492,"endOffset":18531,"count":4},{"startOffset":18531,"endOffset":18591,"count":2}],"isBlockCoverage":true},{"functionName":"_onceWrap","ranges":[{"startOffset":18595,"endOffset":18836,"count":9}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":19027,"endOffset":19153,"count":9}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":19763,"endOffset":21057,"count":21},{"startOffset":19912,"endOffset":19924,"count":0},{"startOffset":19997,"endOffset":20009,"count":1},{"startOffset":20009,"endOffset":20039,"count":20},{"startOffset":20039,"endOffset":20068,"count":11},{"startOffset":20070,"endOffset":20330,"count":10},{"startOffset":20121,"endOffset":20155,"count":0},{"startOffset":20251,"endOffset":20312,"count":1},{"startOffset":20330,"endOffset":21031,"count":10},{"startOffset":20368,"endOffset":21031,"count":9},{"startOffset":20449,"endOffset":20588,"count":16},{"startOffset":20486,"endOffset":20518,"count":8},{"startOffset":20520,"endOffset":20578,"count":9},{"startOffset":20626,"endOffset":20638,"count":0},{"startOffset":20678,"endOffset":20691,"count":3},{"startOffset":20691,"endOffset":20852,"count":6},{"startOffset":20758,"endOffset":20805,"count":1},{"startOffset":20895,"endOffset":20918,"count":5},{"startOffset":20979,"endOffset":21023,"count":1},{"startOffset":21031,"endOffset":21056,"count":20}],"isBlockCoverage":true},{"functionName":"listenerCount","ranges":[{"startOffset":24297,"endOffset":25002,"count":50},{"startOffset":24480,"endOffset":24626,"count":39},{"startOffset":24510,"endOffset":24603,"count":1},{"startOffset":24587,"endOffset":24590,"count":0},{"startOffset":24603,"endOffset":24626,"count":38},{"startOffset":24626,"endOffset":24983,"count":11},{"startOffset":24662,"endOffset":24983,"count":0},{"startOffset":24987,"endOffset":25001,"count":11}],"isBlockCoverage":true},{"functionName":"arrayClone","ranges":[{"startOffset":25254,"endOffset":25727,"count":7},{"startOffset":25426,"endOffset":25458,"count":5},{"startOffset":25463,"endOffset":25503,"count":1},{"startOffset":25508,"endOffset":25556,"count":1},{"startOffset":25561,"endOffset":25617,"count":0},{"startOffset":25622,"endOffset":25686,"count":0},{"startOffset":25690,"endOffset":25726,"count":0}],"isBlockCoverage":true}]},{"scriptId":"30","url":"node:buffer","functions":[{"functionName":"createPool","ranges":[{"startOffset":4084,"endOffset":4243,"count":29}],"isBlockCoverage":false},{"functionName":"alignPool","ranges":[{"startOffset":4259,"endOffset":4381,"count":164}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8559,"endOffset":9524,"count":7}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11471,"endOffset":11626,"count":328},{"startOffset":11557,"endOffset":11624,"count":0}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":11729,"endOffset":11974,"count":4},{"startOffset":11813,"endOffset":11826,"count":0},{"startOffset":11827,"endOffset":11838,"count":0},{"startOffset":11840,"endOffset":11941,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":12153,"endOffset":12228,"count":237}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":12469,"endOffset":12558,"count":87}],"isBlockCoverage":true},{"functionName":"allocate","ranges":[{"startOffset":12858,"endOffset":13190,"count":237},{"startOffset":12901,"endOffset":12935,"count":0},{"startOffset":12974,"endOffset":13153,"count":158},{"startOffset":13022,"endOffset":13035,"count":29},{"startOffset":13153,"endOffset":13189,"count":79}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":13192,"endOffset":13738,"count":7}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":13740,"endOffset":14193,"count":7}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":16057,"endOffset":16208,"count":240}],"isBlockCoverage":true},{"functionName":"base64ByteLength","ranges":[{"startOffset":17424,"endOffset":17692,"count":1},{"startOffset":17630,"endOffset":17638,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":17827,"endOffset":17891,"count":2}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17904,"endOffset":17950,"count":241}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":19282,"endOffset":19307,"count":4}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":19320,"endOffset":19385,"count":4}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":19769,"endOffset":19820,"count":1}],"isBlockCoverage":true},{"functionName":"getEncodingOps","ranges":[{"startOffset":21219,"endOffset":23043,"count":246},{"startOffset":21306,"endOffset":21605,"count":241},{"startOffset":21369,"endOffset":21605,"count":0},{"startOffset":21610,"endOffset":22029,"count":4},{"startOffset":21650,"endOffset":21674,"count":0},{"startOffset":21732,"endOffset":22029,"count":0},{"startOffset":22034,"endOffset":22188,"count":0},{"startOffset":22193,"endOffset":22349,"count":0},{"startOffset":22354,"endOffset":22735,"count":1},{"startOffset":22428,"endOffset":22454,"count":0},{"startOffset":22514,"endOffset":22626,"count":0},{"startOffset":22636,"endOffset":22735,"count":0},{"startOffset":22740,"endOffset":22872,"count":0},{"startOffset":22877,"endOffset":23037,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":24447,"endOffset":25026,"count":242},{"startOffset":24519,"endOffset":24567,"count":1},{"startOffset":24567,"endOffset":24619,"count":241},{"startOffset":24619,"endOffset":24629,"count":0},{"startOffset":24629,"endOffset":24692,"count":241},{"startOffset":24659,"endOffset":24669,"count":0},{"startOffset":24692,"endOffset":24718,"count":241},{"startOffset":24718,"endOffset":24730,"count":0},{"startOffset":24736,"endOffset":24746,"count":241},{"startOffset":24746,"endOffset":24767,"count":0},{"startOffset":24767,"endOffset":24793,"count":241},{"startOffset":24793,"endOffset":24803,"count":0},{"startOffset":24803,"endOffset":24839,"count":241},{"startOffset":24839,"endOffset":24873,"count":0},{"startOffset":24873,"endOffset":24944,"count":241},{"startOffset":24944,"endOffset":24985,"count":0},{"startOffset":24985,"endOffset":25025,"count":241}],"isBlockCoverage":true}]},{"scriptId":"31","url":"node:internal/buffer","functions":[{"functionName":"FastBuffer","ranges":[{"startOffset":26365,"endOffset":26465,"count":400}],"isBlockCoverage":false},{"functionName":"markAsUntransferable","ranges":[{"startOffset":29764,"endOffset":30013,"count":29}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":30291,"endOffset":30427,"count":195}],"isBlockCoverage":false},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":30682,"endOffset":30754,"count":1}],"isBlockCoverage":true}]},{"scriptId":"33","url":"node:internal/process/per_thread","functions":[{"functionName":"refreshHrtimeBuffer","ranges":[{"startOffset":1323,"endOffset":1791,"count":1}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":4734,"endOffset":5843,"count":1}],"isBlockCoverage":true},{"functionName":"buildAllowedFlags","ranges":[{"startOffset":7593,"endOffset":11695,"count":1},{"startOffset":7881,"endOffset":8172,"count":153},{"startOffset":7933,"endOffset":8168,"count":120},{"startOffset":8030,"endOffset":8162,"count":59},{"startOffset":8640,"endOffset":9062,"count":22},{"startOffset":8694,"endOffset":9058,"count":10},{"startOffset":8783,"endOffset":8852,"count":2},{"startOffset":8917,"endOffset":8986,"count":0}],"isBlockCoverage":true},{"functionName":"isAccepted","ranges":[{"startOffset":8176,"endOffset":8588,"count":28},{"startOffset":8246,"endOffset":8260,"count":27},{"startOffset":8262,"endOffset":8274,"count":2},{"startOffset":8274,"endOffset":8351,"count":26},{"startOffset":8351,"endOffset":8520,"count":2},{"startOffset":8401,"endOffset":8448,"count":1},{"startOffset":8520,"endOffset":8587,"count":24}],"isBlockCoverage":true},{"functionName":"trimLeadingDashes","ranges":[{"startOffset":9096,"endOffset":9158,"count":189}],"isBlockCoverage":true},{"functionName":"NodeEnvironmentFlagsSet","ranges":[{"startOffset":9468,"endOffset":9544,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":9550,"endOffset":9619,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":9625,"endOffset":9698,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":9704,"endOffset":9756,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":9762,"endOffset":10577,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":10583,"endOffset":10748,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":10754,"endOffset":10931,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":10937,"endOffset":10998,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":11004,"endOffset":11167,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":11885,"endOffset":12215,"count":1},{"startOffset":11965,"endOffset":12140,"count":0},{"startOffset":12172,"endOffset":12213,"count":0}],"isBlockCoverage":true}]},{"scriptId":"34","url":"node:internal/process/task_queues","functions":[{"functionName":"hasTickScheduled","ranges":[{"startOffset":982,"endOffset":1057,"count":4}],"isBlockCoverage":true},{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1059,"endOffset":1145,"count":129},{"startOffset":1135,"endOffset":1138,"count":75},{"startOffset":1139,"endOffset":1142,"count":54}],"isBlockCoverage":true},{"functionName":"runNextTicks","ranges":[{"startOffset":1247,"endOffset":1443,"count":2},{"startOffset":1409,"endOffset":1442,"count":0}],"isBlockCoverage":true},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1445,"endOffset":2424,"count":55},{"startOffset":1501,"endOffset":2304,"count":57},{"startOffset":1547,"endOffset":2279,"count":139},{"startOffset":1748,"endOffset":1781,"count":2},{"startOffset":1781,"endOffset":2155,"count":137},{"startOffset":1868,"endOffset":1901,"count":70},{"startOffset":1914,"endOffset":1956,"count":65},{"startOffset":1969,"endOffset":2020,"count":2},{"startOffset":2033,"endOffset":2093,"count":0},{"startOffset":2106,"endOffset":2133,"count":0},{"startOffset":2217,"endOffset":2238,"count":0},{"startOffset":2304,"endOffset":2358,"count":54}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2568,"endOffset":3442,"count":140},{"startOffset":2669,"endOffset":2676,"count":1},{"startOffset":2676,"endOffset":2724,"count":139},{"startOffset":2724,"endOffset":2738,"count":2},{"startOffset":2743,"endOffset":2780,"count":70},{"startOffset":2785,"endOffset":2836,"count":65},{"startOffset":2841,"endOffset":2906,"count":2},{"startOffset":2911,"endOffset":3054,"count":0},{"startOffset":3054,"endOffset":3083,"count":139},{"startOffset":3083,"endOffset":3109,"count":75},{"startOffset":3109,"endOffset":3354,"count":139},{"startOffset":3354,"endOffset":3414,"count":0},{"startOffset":3414,"endOffset":3441,"count":139}],"isBlockCoverage":true}]},{"scriptId":"35","url":"node:internal/process/promises","functions":[{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":2119,"endOffset":2209,"count":54},{"startOffset":2199,"endOffset":2202,"count":0}],"isBlockCoverage":true},{"functionName":"hasRejectionToWarn","ranges":[{"startOffset":2211,"endOffset":2290,"count":4}],"isBlockCoverage":true},{"functionName":"processPromiseRejections","ranges":[{"startOffset":6636,"endOffset":9797,"count":54},{"startOffset":6794,"endOffset":6973,"count":0},{"startOffset":7038,"endOffset":9701,"count":0}],"isBlockCoverage":true}]},{"scriptId":"36","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3077,"endOffset":3129,"count":391}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3133,"endOffset":3200,"count":139}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3204,"endOffset":3291,"count":139}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3295,"endOffset":3510,"count":196},{"startOffset":3388,"endOffset":3400,"count":57},{"startOffset":3400,"endOffset":3509,"count":139}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3630,"endOffset":3677,"count":195}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3681,"endOffset":3945,"count":139},{"startOffset":3722,"endOffset":3915,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3949,"endOffset":4204,"count":196},{"startOffset":4041,"endOffset":4062,"count":132},{"startOffset":4064,"endOffset":4183,"count":0}],"isBlockCoverage":true}]},{"scriptId":"38","url":"node:timers","functions":[{"functionName":"","ranges":[{"startOffset":1832,"endOffset":1857,"count":1}],"isBlockCoverage":true},{"functionName":"unenroll","ranges":[{"startOffset":2355,"endOffset":3539,"count":4},{"startOffset":2408,"endOffset":2415,"count":0},{"startOffset":2475,"endOffset":2521,"count":0},{"startOffset":2612,"endOffset":2650,"count":0},{"startOffset":2656,"endOffset":2691,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout","ranges":[{"startOffset":4241,"endOffset":4898,"count":6},{"startOffset":4408,"endOffset":4415,"count":0},{"startOffset":4445,"endOffset":4486,"count":0},{"startOffset":4491,"endOffset":4538,"count":0},{"startOffset":4543,"endOffset":4764,"count":0}],"isBlockCoverage":true},{"functionName":"clearTimeout","ranges":[{"startOffset":5218,"endOffset":5584,"count":197},{"startOffset":5261,"endOffset":5280,"count":5},{"startOffset":5282,"endOffset":5349,"count":4},{"startOffset":5349,"endOffset":5410,"count":193},{"startOffset":5412,"endOffset":5582,"count":0}],"isBlockCoverage":true},{"functionName":"setInterval","ranges":[{"startOffset":5821,"endOffset":6480,"count":2},{"startOffset":5990,"endOffset":5997,"count":0},{"startOffset":6027,"endOffset":6068,"count":0},{"startOffset":6073,"endOffset":6120,"count":0},{"startOffset":6125,"endOffset":6346,"count":0}],"isBlockCoverage":true},{"functionName":"clearInterval","ranges":[{"startOffset":6577,"endOffset":6875,"count":4}],"isBlockCoverage":true},{"functionName":"setImmediate","ranges":[{"startOffset":7516,"endOffset":8069,"count":1},{"startOffset":7678,"endOffset":7698,"count":0},{"startOffset":7749,"endOffset":7796,"count":0},{"startOffset":7801,"endOffset":8022,"count":0}],"isBlockCoverage":true}]},{"scriptId":"39","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":702,"endOffset":1032,"count":1},{"startOffset":763,"endOffset":1030,"count":0}],"isBlockCoverage":true}]},{"scriptId":"40","url":"node:path","functions":[{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":1852,"endOffset":1929,"count":312247}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2164,"endOffset":4112,"count":2606},{"startOffset":2381,"endOffset":4096,"count":312007},{"startOffset":2414,"endOffset":2456,"count":309401},{"startOffset":2456,"endOffset":2547,"count":2606},{"startOffset":2499,"endOffset":2505,"count":2366},{"startOffset":2505,"endOffset":2547,"count":240},{"startOffset":2547,"endOffset":2580,"count":309641},{"startOffset":2580,"endOffset":3997,"count":29495},{"startOffset":2612,"endOffset":2625,"count":26175},{"startOffset":2627,"endOffset":2652,"count":3688},{"startOffset":2652,"endOffset":3954,"count":25807},{"startOffset":2674,"endOffset":3709,"count":255},{"startOffset":2703,"endOffset":2729,"count":232},{"startOffset":2730,"endOffset":2804,"count":0},{"startOffset":2805,"endOffset":2879,"count":0},{"startOffset":2913,"endOffset":3390,"count":232},{"startOffset":3033,"endOffset":3109,"count":0},{"startOffset":3390,"endOffset":3559,"count":23},{"startOffset":3418,"endOffset":3559,"count":0},{"startOffset":3569,"endOffset":3701,"count":23},{"startOffset":3632,"endOffset":3650,"count":0},{"startOffset":3709,"endOffset":3954,"count":25552},{"startOffset":3755,"endOffset":3824,"count":22970},{"startOffset":3824,"endOffset":3899,"count":2582},{"startOffset":3954,"endOffset":3997,"count":29263},{"startOffset":3997,"endOffset":4092,"count":280146},{"startOffset":4025,"endOffset":4039,"count":10026},{"startOffset":4041,"endOffset":4062,"count":3250},{"startOffset":4062,"endOffset":4092,"count":276896}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":34688,"endOffset":35611,"count":2366},{"startOffset":34811,"endOffset":34831,"count":6262},{"startOffset":34838,"endOffset":35165,"count":3896},{"startOffset":34876,"endOffset":34888,"count":0},{"startOffset":34991,"endOffset":35018,"count":0},{"startOffset":35550,"endOffset":35600,"count":0},{"startOffset":35601,"endOffset":35606,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":35677,"endOffset":36290,"count":240},{"startOffset":35763,"endOffset":35774,"count":0},{"startOffset":36102,"endOffset":36196,"count":1},{"startOffset":36134,"endOffset":36145,"count":0},{"startOffset":36177,"endOffset":36183,"count":0},{"startOffset":36196,"endOffset":36230,"count":239},{"startOffset":36230,"endOffset":36242,"count":0},{"startOffset":36242,"endOffset":36266,"count":239},{"startOffset":36266,"endOffset":36278,"count":39},{"startOffset":36279,"endOffset":36285,"count":200}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":36357,"endOffset":36513,"count":388}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":36582,"endOffset":36996,"count":18},{"startOffset":36631,"endOffset":36642,"count":0},{"startOffset":36701,"endOffset":36908,"count":36},{"startOffset":36837,"endOffset":36894,"count":18},{"startOffset":36945,"endOffset":36956,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":37086,"endOffset":39446,"count":1},{"startOffset":37199,"endOffset":37209,"count":0},{"startOffset":37336,"endOffset":37346,"count":0},{"startOffset":37619,"endOffset":37626,"count":0},{"startOffset":37700,"endOffset":37935,"count":49},{"startOffset":37848,"endOffset":37854,"count":0},{"startOffset":37911,"endOffset":37929,"count":3},{"startOffset":38267,"endOffset":38449,"count":0},{"startOffset":38457,"endOffset":38914,"count":0},{"startOffset":38920,"endOffset":39445,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":39512,"endOffset":39588,"count":2684}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":39654,"endOffset":40330,"count":855},{"startOffset":39737,"endOffset":39748,"count":0},{"startOffset":39922,"endOffset":40175,"count":11173},{"startOffset":39993,"endOffset":40077,"count":856},{"startOffset":40022,"endOffset":40069,"count":855},{"startOffset":40077,"endOffset":40169,"count":10317},{"startOffset":40203,"endOffset":40230,"count":0},{"startOffset":40267,"endOffset":40279,"count":0}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":40426,"endOffset":42853,"count":212},{"startOffset":40487,"endOffset":40517,"count":0},{"startOffset":40649,"endOffset":40669,"count":0},{"startOffset":40670,"endOffset":40701,"count":0},{"startOffset":40703,"endOffset":42227,"count":0},{"startOffset":42275,"endOffset":42760,"count":2855},{"startOffset":42346,"endOffset":42570,"count":212},{"startOffset":42570,"endOffset":42754,"count":2643},{"startOffset":42592,"endOffset":42754,"count":212},{"startOffset":42788,"endOffset":42798,"count":0}],"isBlockCoverage":true},{"functionName":"extname","ranges":[{"startOffset":42919,"endOffset":44609,"count":4},{"startOffset":43252,"endOffset":44214,"count":69},{"startOffset":43348,"endOffset":43594,"count":5},{"startOffset":43511,"endOffset":43568,"count":4},{"startOffset":43568,"endOffset":43594,"count":1},{"startOffset":43594,"endOffset":43617,"count":64},{"startOffset":43617,"endOffset":43774,"count":4},{"startOffset":43774,"endOffset":43804,"count":64},{"startOffset":43804,"endOffset":44004,"count":5},{"startOffset":43920,"endOffset":43933,"count":4},{"startOffset":43933,"endOffset":43996,"count":1},{"startOffset":44004,"endOffset":44208,"count":59},{"startOffset":44031,"endOffset":44208,"count":50},{"startOffset":44453,"endOffset":44485,"count":0},{"startOffset":44486,"endOffset":44524,"count":0},{"startOffset":44527,"endOffset":44551,"count":0}],"isBlockCoverage":true}]},{"scriptId":"42","url":"node:internal/vm","functions":[{"functionName":"registerImportModuleDynamically","ranges":[{"startOffset":1761,"endOffset":2126,"count":207}],"isBlockCoverage":true},{"functionName":"internalCompileFunction","ranges":[{"startOffset":2128,"endOffset":3011,"count":207},{"startOffset":2574,"endOffset":2647,"count":0},{"startOffset":2674,"endOffset":2731,"count":0},{"startOffset":2787,"endOffset":2860,"count":0}],"isBlockCoverage":true}]},{"scriptId":"44","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":620,"endOffset":645,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1859,"endOffset":1922,"count":95}],"isBlockCoverage":true},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1924,"endOffset":2466,"count":1},{"startOffset":2032,"endOffset":2187,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2468,"endOffset":3068,"count":26},{"startOffset":2770,"endOffset":2803,"count":0},{"startOffset":2856,"endOffset":2992,"count":0},{"startOffset":2994,"endOffset":3067,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceMapURLMagicComment","ranges":[{"startOffset":3070,"endOffset":3513,"count":83},{"startOffset":3391,"endOffset":3419,"count":18},{"startOffset":3445,"endOffset":3467,"count":65},{"startOffset":3467,"endOffset":3512,"count":18}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":3515,"endOffset":5217,"count":91},{"startOffset":3717,"endOffset":3737,"count":0},{"startOffset":3740,"endOffset":3747,"count":0},{"startOffset":3881,"endOffset":4005,"count":0},{"startOffset":4041,"endOffset":4107,"count":83},{"startOffset":4196,"endOffset":4213,"count":65},{"startOffset":4213,"endOffset":4385,"count":26},{"startOffset":4386,"endOffset":4400,"count":0},{"startOffset":4427,"endOffset":4589,"count":0},{"startOffset":4589,"endOffset":5215,"count":26},{"startOffset":4618,"endOffset":4861,"count":0},{"startOffset":5157,"endOffset":5211,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":5749,"endOffset":6269,"count":26},{"startOffset":5886,"endOffset":5961,"count":0},{"startOffset":5968,"endOffset":6048,"count":0}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":6459,"endOffset":6804,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6761,"endOffset":6800,"count":9890}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":6806,"endOffset":7086,"count":26},{"startOffset":7034,"endOffset":7084,"count":0}],"isBlockCoverage":true},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":8036,"endOffset":8363,"count":26}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8114,"endOffset":8220,"count":39}],"isBlockCoverage":true}]},{"scriptId":"45","url":"node:internal/url","functions":[{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3902,"endOffset":4691,"count":1662}],"isBlockCoverage":false},{"functionName":"get hasPort","ranges":[{"startOffset":4470,"endOffset":4535,"count":1}],"isBlockCoverage":true},{"functionName":"get hasSearch","ranges":[{"startOffset":4539,"endOffset":4614,"count":1906}],"isBlockCoverage":true},{"functionName":"get hasHash","ranges":[{"startOffset":4618,"endOffset":4689,"count":1906}],"isBlockCoverage":true},{"functionName":"isURL","ranges":[{"startOffset":17719,"endOffset":17814,"count":7274}],"isBlockCoverage":true},{"functionName":"URL","ranges":[{"startOffset":17830,"endOffset":18256,"count":1662},{"startOffset":17901,"endOffset":17949,"count":0},{"startOffset":18076,"endOffset":18107,"count":831},{"startOffset":18173,"endOffset":18220,"count":172},{"startOffset":18220,"endOffset":18255,"count":1490}],"isBlockCoverage":true},{"functionName":"#updateContext","ranges":[{"startOffset":19117,"endOffset":20056,"count":1758},{"startOffset":19853,"endOffset":20052,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":20060,"endOffset":20170,"count":597},{"startOffset":20101,"endOffset":20135,"count":0}],"isBlockCoverage":true},{"functionName":"get href","ranges":[{"startOffset":20174,"endOffset":20284,"count":407},{"startOffset":20215,"endOffset":20249,"count":0}],"isBlockCoverage":true},{"functionName":"get protocol","ranges":[{"startOffset":21505,"endOffset":21672,"count":1686},{"startOffset":21550,"endOffset":21584,"count":0}],"isBlockCoverage":true},{"functionName":"get username","ranges":[{"startOffset":21916,"endOffset":22187,"count":1},{"startOffset":21961,"endOffset":21995,"count":0},{"startOffset":22076,"endOffset":22168,"count":0}],"isBlockCoverage":true},{"functionName":"get password","ranges":[{"startOffset":22431,"endOffset":22698,"count":1},{"startOffset":22476,"endOffset":22510,"count":0},{"startOffset":22589,"endOffset":22679,"count":0}],"isBlockCoverage":true},{"functionName":"get hostname","ranges":[{"startOffset":23653,"endOffset":23989,"count":765},{"startOffset":23698,"endOffset":23732,"count":0},{"startOffset":23893,"endOffset":23918,"count":0}],"isBlockCoverage":true},{"functionName":"get port","ranges":[{"startOffset":24233,"endOffset":24404,"count":1},{"startOffset":24274,"endOffset":24308,"count":0},{"startOffset":24340,"endOffset":24385,"count":0}],"isBlockCoverage":true},{"functionName":"get pathname","ranges":[{"startOffset":24640,"endOffset":24966,"count":1771},{"startOffset":24685,"endOffset":24719,"count":0},{"startOffset":24790,"endOffset":24830,"count":1},{"startOffset":24830,"endOffset":24891,"count":1770},{"startOffset":24853,"endOffset":24891,"count":0}],"isBlockCoverage":true},{"functionName":"get search","ranges":[{"startOffset":25210,"endOffset":25569,"count":135},{"startOffset":25253,"endOffset":25287,"count":0},{"startOffset":25343,"endOffset":25357,"count":134},{"startOffset":25357,"endOffset":25413,"count":1},{"startOffset":25413,"endOffset":25441,"count":0},{"startOffset":25441,"endOffset":25482,"count":1},{"startOffset":25482,"endOffset":25496,"count":0},{"startOffset":25496,"endOffset":25568,"count":1}],"isBlockCoverage":true},{"functionName":"set search","ranges":[{"startOffset":25573,"endOffset":25813,"count":134},{"startOffset":25621,"endOffset":25655,"count":0}],"isBlockCoverage":true},{"functionName":"get hash","ranges":[{"startOffset":26175,"endOffset":26434,"count":135},{"startOffset":26216,"endOffset":26250,"count":0},{"startOffset":26303,"endOffset":26345,"count":0},{"startOffset":26371,"endOffset":26433,"count":0}],"isBlockCoverage":true},{"functionName":"set hash","ranges":[{"startOffset":26438,"endOffset":26666,"count":134},{"startOffset":26484,"endOffset":26518,"count":0}],"isBlockCoverage":true},{"functionName":"urlToHttpOptions","ranges":[{"startOffset":37307,"endOffset":38008,"count":2},{"startOffset":37612,"endOffset":37657,"count":0},{"startOffset":37762,"endOffset":37767,"count":0},{"startOffset":37777,"endOffset":37782,"count":0},{"startOffset":37830,"endOffset":37868,"count":1},{"startOffset":37897,"endOffset":37988,"count":0}],"isBlockCoverage":true},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":39509,"endOffset":40030,"count":764},{"startOffset":39572,"endOffset":39628,"count":0},{"startOffset":39706,"endOffset":39989,"count":98810},{"startOffset":39737,"endOffset":39985,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":40032,"endOffset":40371,"count":764},{"startOffset":40099,"endOffset":40120,"count":27},{"startOffset":40120,"endOffset":40214,"count":737},{"startOffset":40150,"endOffset":40214,"count":0},{"startOffset":40252,"endOffset":40293,"count":0},{"startOffset":40313,"endOffset":40340,"count":0}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":41184,"endOffset":41960,"count":197},{"startOffset":41277,"endOffset":41348,"count":0},{"startOffset":41476,"endOffset":41549,"count":0},{"startOffset":41607,"endOffset":41678,"count":0},{"startOffset":41736,"endOffset":41814,"count":0},{"startOffset":41872,"endOffset":41939,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":41962,"endOffset":43939,"count":197},{"startOffset":42013,"endOffset":42059,"count":0},{"startOffset":42061,"endOffset":42826,"count":0},{"startOffset":43108,"endOffset":43169,"count":196},{"startOffset":43129,"endOffset":43168,"count":0},{"startOffset":43171,"endOffset":43222,"count":1},{"startOffset":43228,"endOffset":43244,"count":1},{"startOffset":43700,"endOffset":43772,"count":0},{"startOffset":43829,"endOffset":43897,"count":0}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":43941,"endOffset":44078,"count":769},{"startOffset":44016,"endOffset":44037,"count":680},{"startOffset":44037,"endOffset":44077,"count":89}],"isBlockCoverage":true}]},{"scriptId":"50","url":"node:internal/console/constructor","functions":[{"functionName":"lazyUtilColors","ranges":[{"startOffset":1891,"endOffset":1991,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":5848,"endOffset":6493,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6057,"endOffset":6152,"count":3},{"startOffset":6090,"endOffset":6113,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":6164,"endOffset":6194,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6324,"endOffset":6423,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6435,"endOffset":6465,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6585,"endOffset":7993,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":8085,"endOffset":9537,"count":1},{"startOffset":8311,"endOffset":8325,"count":0},{"startOffset":8399,"endOffset":8425,"count":0},{"startOffset":8464,"endOffset":8659,"count":0},{"startOffset":8717,"endOffset":8745,"count":0},{"startOffset":9183,"endOffset":9467,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":9632,"endOffset":10042,"count":1},{"startOffset":9846,"endOffset":9967,"count":0},{"startOffset":10011,"endOffset":10035,"count":0}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":10135,"endOffset":10315,"count":1}],"isBlockCoverage":true},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":10678,"endOffset":11567,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10746,"endOffset":11564,"count":1},{"startOffset":11016,"endOffset":11034,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":11596,"endOffset":11683,"count":1}],"isBlockCoverage":true},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":20440,"endOffset":21479,"count":1},{"startOffset":20808,"endOffset":21478,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21374,"endOffset":21475,"count":0}],"isBlockCoverage":false}]},{"scriptId":"52","url":"node:internal/event_target","functions":[{"functionName":"Listener","ranges":[{"startOffset":10027,"endOffset":11491,"count":5},{"startOffset":10362,"endOffset":10381,"count":0},{"startOffset":10405,"endOffset":10427,"count":0},{"startOffset":10451,"endOffset":10473,"count":0},{"startOffset":10509,"endOffset":10533,"count":4},{"startOffset":10554,"endOffset":10573,"count":0},{"startOffset":10611,"endOffset":10647,"count":0},{"startOffset":10719,"endOffset":11175,"count":0},{"startOffset":11288,"endOffset":11487,"count":0}],"isBlockCoverage":true},{"functionName":"Listener.callback","ranges":[{"startOffset":11318,"endOffset":11448,"count":0}],"isBlockCoverage":false},{"functionName":"get weak","ranges":[{"startOffset":11779,"endOffset":11839,"count":5}],"isBlockCoverage":true},{"functionName":"set removed","ranges":[{"startOffset":12008,"endOffset":12125,"count":5},{"startOffset":12050,"endOffset":12077,"count":0}],"isBlockCoverage":true},{"functionName":"initEventTarget","ranges":[{"startOffset":12561,"endOffset":12745,"count":4}],"isBlockCoverage":true},{"functionName":"EventTarget","ranges":[{"startOffset":12988,"endOffset":13034,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13038,"endOffset":13843,"count":5},{"startOffset":13199,"endOffset":13247,"count":0},{"startOffset":13249,"endOffset":13839,"count":0}],"isBlockCoverage":true},{"functionName":"addEventListener","ranges":[{"startOffset":14286,"endOffset":16952,"count":5},{"startOffset":14381,"endOffset":14423,"count":0},{"startOffset":14460,"endOffset":14507,"count":0},{"startOffset":14847,"endOffset":15300,"count":0},{"startOffset":15364,"endOffset":15748,"count":0},{"startOffset":16311,"endOffset":16501,"count":0},{"startOffset":16503,"endOffset":16951,"count":0}],"isBlockCoverage":true},{"functionName":"signal.addEventListener.__proto__","ranges":[{"startOffset":15579,"endOffset":15653,"count":0}],"isBlockCoverage":false},{"functionName":"initNodeEventTarget","ranges":[{"startOffset":22188,"endOffset":22251,"count":2}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":24193,"endOffset":24398,"count":4},{"startOffset":24254,"endOffset":24300,"count":0}],"isBlockCoverage":true},{"functionName":"validateEventListener","ranges":[{"startOffset":26263,"endOffset":26635,"count":5},{"startOffset":26343,"endOffset":26395,"count":0},{"startOffset":26419,"endOffset":26634,"count":0}],"isBlockCoverage":true},{"functionName":"validateEventListenerOptions","ranges":[{"startOffset":26637,"endOffset":27216,"count":5},{"startOffset":26726,"endOffset":26754,"count":0},{"startOffset":26784,"endOffset":26804,"count":0}],"isBlockCoverage":true},{"functionName":"isEventTarget","ranges":[{"startOffset":27521,"endOffset":27597,"count":5}],"isBlockCoverage":true},{"functionName":"isNodeEventTarget","ranges":[{"startOffset":27599,"endOffset":27683,"count":4}],"isBlockCoverage":true},{"functionName":"defineEventHandler","ranges":[{"startOffset":28495,"endOffset":29689,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":28679,"endOffset":28750,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":28756,"endOffset":29634,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterMixin","ranges":[{"startOffset":29717,"endOffset":30407,"count":1},{"startOffset":30148,"endOffset":30310,"count":18}],"isBlockCoverage":true},{"functionName":"MixedEventEmitter","ranges":[{"startOffset":29786,"endOffset":29927,"count":85}],"isBlockCoverage":true}]},{"scriptId":"53","url":"node:util","functions":[{"functionName":"lazyAbortController","ranges":[{"startOffset":2369,"endOffset":2489,"count":60}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":5909,"endOffset":6547,"count":1},{"startOffset":5994,"endOffset":6051,"count":0},{"startOffset":6110,"endOffset":6177,"count":0},{"startOffset":6220,"endOffset":6350,"count":0}],"isBlockCoverage":true},{"functionName":"get transferableAbortSignal","ranges":[{"startOffset":10340,"endOffset":10433,"count":20}],"isBlockCoverage":true},{"functionName":"get transferableAbortController","ranges":[{"startOffset":10437,"endOffset":10538,"count":20}],"isBlockCoverage":true},{"functionName":"get aborted","ranges":[{"startOffset":10542,"endOffset":10603,"count":20}],"isBlockCoverage":true}]},{"scriptId":"54","url":"node:internal/webidl","functions":[{"functionName":"DOMString","ranges":[{"startOffset":4438,"endOffset":4568,"count":5},{"startOffset":4491,"endOffset":4545,"count":0}],"isBlockCoverage":true}]},{"scriptId":"55","url":"node:internal/perf/utils","functions":[{"functionName":"refreshTimeOrigin","ranges":[{"startOffset":499,"endOffset":563,"count":1}],"isBlockCoverage":true}]},{"scriptId":"56","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1423,"endOffset":3025,"count":2},{"startOffset":1715,"endOffset":1909,"count":0},{"startOffset":1915,"endOffset":1927,"count":0},{"startOffset":1932,"endOffset":2644,"count":0},{"startOffset":2650,"endOffset":2904,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2840,"endOffset":2887,"count":0}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3638,"endOffset":3729,"count":3},{"startOffset":3692,"endOffset":3727,"count":0}],"isBlockCoverage":true},{"functionName":"getStdout","ranges":[{"startOffset":3731,"endOffset":4423,"count":37},{"startOffset":3768,"endOffset":3782,"count":36},{"startOffset":3782,"endOffset":4422,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStdout","ranges":[{"startOffset":4089,"endOffset":4267,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":4425,"endOffset":5116,"count":25},{"startOffset":4462,"endOffset":4476,"count":24},{"startOffset":4476,"endOffset":5115,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStderr","ranges":[{"startOffset":4782,"endOffset":4960,"count":0}],"isBlockCoverage":false},{"functionName":"getStdin","ranges":[{"startOffset":5118,"endOffset":7609,"count":26},{"startOffset":5153,"endOffset":5166,"count":25},{"startOffset":5166,"endOffset":5325,"count":1},{"startOffset":5331,"endOffset":5465,"count":0},{"startOffset":5471,"endOffset":5483,"count":0},{"startOffset":5488,"endOffset":6270,"count":0},{"startOffset":6276,"endOffset":6500,"count":0},{"startOffset":6504,"endOffset":6769,"count":1},{"startOffset":6771,"endOffset":7608,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":6457,"endOffset":6466,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7079,"endOffset":7121,"count":2}],"isBlockCoverage":true},{"functionName":"onpause","ranges":[{"startOffset":7127,"endOffset":7367,"count":2},{"startOffset":7178,"endOffset":7185,"count":0}],"isBlockCoverage":true},{"functionName":"cleanupStdin","ranges":[{"startOffset":7382,"endOffset":7455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"57","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":370,"endOffset":531,"count":523}],"isBlockCoverage":true},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":725,"endOffset":898,"count":1},{"startOffset":804,"endOffset":896,"count":0}],"isBlockCoverage":true}]},{"scriptId":"58","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":238,"endOffset":334,"count":18}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":398,"endOffset":904,"count":18}],"isBlockCoverage":false},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":906,"endOffset":1101,"count":2},{"startOffset":1008,"endOffset":1044,"count":1},{"startOffset":1046,"endOffset":1099,"count":0}],"isBlockCoverage":true}]},{"scriptId":"59","url":"node:fs","functions":[{"functionName":"maybeCallback","ranges":[{"startOffset":4517,"endOffset":4591,"count":5}],"isBlockCoverage":true},{"functionName":"makeCallback","ranges":[{"startOffset":4794,"endOffset":4906,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4862,"endOffset":4903,"count":18}],"isBlockCoverage":true},{"functionName":"makeStatsCallback","ranges":[{"startOffset":5087,"endOffset":5254,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5160,"endOffset":5251,"count":6},{"startOffset":5191,"endOffset":5250,"count":3}],"isBlockCoverage":true},{"functionName":"isFileType","ranges":[{"startOffset":5280,"endOffset":5540,"count":8250},{"startOffset":5479,"endOffset":5499,"count":751}],"isBlockCoverage":true},{"functionName":"existsSync","ranges":[{"startOffset":7707,"endOffset":8237,"count":6},{"startOffset":7782,"endOffset":7811,"count":0},{"startOffset":8119,"endOffset":8145,"count":0},{"startOffset":8147,"endOffset":8200,"count":0}],"isBlockCoverage":true},{"functionName":"readFileAfterOpen","ranges":[{"startOffset":8239,"endOffset":8519,"count":5},{"startOffset":8321,"endOffset":8365,"count":3},{"startOffset":8365,"endOffset":8518,"count":2}],"isBlockCoverage":true},{"functionName":"readFileAfterStat","ranges":[{"startOffset":8521,"endOffset":9399,"count":2},{"startOffset":8610,"endOffset":8636,"count":0},{"startOffset":8929,"endOffset":8932,"count":0},{"startOffset":8962,"endOffset":9041,"count":0},{"startOffset":9071,"endOffset":9260,"count":0},{"startOffset":9331,"endOffset":9379,"count":0}],"isBlockCoverage":true},{"functionName":"checkAborted","ranges":[{"startOffset":9401,"endOffset":9574,"count":5},{"startOffset":9455,"endOffset":9464,"count":0},{"startOffset":9466,"endOffset":9556,"count":0}],"isBlockCoverage":true},{"functionName":"readFile","ranges":[{"startOffset":9907,"endOffset":10864,"count":5},{"startOffset":9988,"endOffset":9998,"count":0},{"startOffset":10269,"endOffset":10311,"count":0},{"startOffset":10336,"endOffset":10482,"count":0},{"startOffset":10534,"endOffset":10541,"count":0}],"isBlockCoverage":true},{"functionName":"tick","ranges":[{"startOffset":10359,"endOffset":10455,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":10866,"endOffset":11096,"count":237},{"startOffset":11009,"endOffset":11021,"count":0},{"startOffset":11023,"endOffset":11078,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":11098,"endOffset":11409,"count":237},{"startOffset":11216,"endOffset":11268,"count":0},{"startOffset":11355,"endOffset":11367,"count":0},{"startOffset":11369,"endOffset":11386,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":11411,"endOffset":11666,"count":237},{"startOffset":11609,"endOffset":11621,"count":0},{"startOffset":11623,"endOffset":11640,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":11890,"endOffset":13288,"count":237},{"startOffset":12059,"endOffset":12065,"count":0},{"startOffset":12205,"endOffset":12208,"count":0},{"startOffset":12338,"endOffset":12361,"count":0},{"startOffset":12613,"endOffset":12982,"count":0},{"startOffset":13042,"endOffset":13138,"count":0},{"startOffset":13160,"endOffset":13200,"count":0}],"isBlockCoverage":true},{"functionName":"closeSync","ranges":[{"startOffset":13833,"endOffset":13973,"count":237}],"isBlockCoverage":true},{"functionName":"openSync","ranges":[{"startOffset":14965,"endOffset":15361,"count":237}],"isBlockCoverage":true},{"functionName":"readSync","ranges":[{"startOffset":18030,"endOffset":19031,"count":237},{"startOffset":18172,"endOffset":18378,"count":0},{"startOffset":18402,"endOffset":18423,"count":0},{"startOffset":18514,"endOffset":18533,"count":0},{"startOffset":18566,"endOffset":18696,"count":0}],"isBlockCoverage":true},{"functionName":"readdir","ranges":[{"startOffset":38136,"endOffset":38914,"count":1},{"startOffset":38236,"endOffset":38245,"count":0},{"startOffset":38358,"endOffset":38424,"count":0},{"startOffset":38451,"endOffset":38525,"count":0},{"startOffset":38592,"endOffset":38628,"count":0}],"isBlockCoverage":true},{"functionName":"req.oncomplete","ranges":[{"startOffset":38657,"endOffset":38787,"count":1},{"startOffset":38691,"endOffset":38739,"count":0}],"isBlockCoverage":true},{"functionName":"readdirSync","ranges":[{"startOffset":39178,"endOffset":39781,"count":3},{"startOffset":39315,"endOffset":39381,"count":0},{"startOffset":39408,"endOffset":39461,"count":0},{"startOffset":39743,"endOffset":39769,"count":0}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":41249,"endOffset":41632,"count":6}],"isBlockCoverage":true},{"functionName":"statSync","ranges":[{"startOffset":43646,"endOffset":44067,"count":1},{"startOffset":43945,"endOffset":43968,"count":0},{"startOffset":43970,"endOffset":43997,"count":0}],"isBlockCoverage":true},{"functionName":"readlink","ranges":[{"startOffset":44661,"endOffset":45005,"count":17},{"startOffset":44772,"endOffset":44782,"count":0}],"isBlockCoverage":true},{"functionName":"splitRoot","ranges":[{"startOffset":68437,"endOffset":68647,"count":415},{"startOffset":68504,"endOffset":68627,"count":830},{"startOffset":68582,"endOffset":68621,"count":415},{"startOffset":68627,"endOffset":68646,"count":0}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":68652,"endOffset":68939,"count":318},{"startOffset":68737,"endOffset":68767,"count":0},{"startOffset":68787,"endOffset":68938,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":69345,"endOffset":69420,"count":4381}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":69594,"endOffset":73506,"count":401},{"startOffset":69718,"endOffset":69736,"count":0},{"startOffset":69897,"endOffset":69932,"count":83},{"startOffset":69932,"endOffset":70494,"count":318},{"startOffset":70494,"endOffset":70666,"count":0},{"startOffset":70666,"endOffset":70803,"count":318},{"startOffset":70803,"endOffset":73433,"count":4381},{"startOffset":70915,"endOffset":71046,"count":318},{"startOffset":71046,"endOffset":71204,"count":4063},{"startOffset":71321,"endOffset":71474,"count":3630},{"startOffset":71428,"endOffset":71452,"count":0},{"startOffset":71474,"endOffset":71540,"count":751},{"startOffset":71577,"endOffset":71626,"count":0},{"startOffset":71626,"endOffset":72930,"count":751},{"startOffset":71978,"endOffset":72066,"count":654},{"startOffset":72066,"endOffset":72487,"count":97},{"startOffset":72426,"endOffset":72479,"count":0},{"startOffset":72487,"endOffset":72850,"count":97},{"startOffset":72894,"endOffset":72924,"count":97},{"startOffset":72930,"endOffset":73222,"count":97},{"startOffset":73222,"endOffset":73245,"count":0},{"startOffset":73247,"endOffset":73429,"count":0},{"startOffset":73433,"endOffset":73447,"count":318}],"isBlockCoverage":true},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":82417,"endOffset":82608,"count":78},{"startOffset":82465,"endOffset":82606,"count":1}],"isBlockCoverage":true},{"functionName":"get ReadStream","ranges":[{"startOffset":84814,"endOffset":84882,"count":20}],"isBlockCoverage":true},{"functionName":"get WriteStream","ranges":[{"startOffset":84939,"endOffset":85009,"count":20}],"isBlockCoverage":true},{"functionName":"get FileReadStream","ranges":[{"startOffset":85201,"endOffset":85277,"count":19}],"isBlockCoverage":true},{"functionName":"get FileWriteStream","ranges":[{"startOffset":85342,"endOffset":85420,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":86115,"endOffset":86211,"count":21}],"isBlockCoverage":true}]},{"scriptId":"60","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3590,"endOffset":3790,"count":641},{"startOffset":3641,"endOffset":3672,"count":239},{"startOffset":3674,"endOffset":3788,"count":0}],"isBlockCoverage":true},{"functionName":"Dirent","ranges":[{"startOffset":3809,"endOffset":3981,"count":4}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":4050,"endOffset":4107,"count":4}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":4976,"endOffset":5583,"count":4},{"startOffset":5036,"endOffset":5057,"count":0},{"startOffset":5088,"endOffset":5110,"count":0},{"startOffset":5166,"endOffset":5292,"count":0},{"startOffset":5399,"endOffset":5447,"count":0},{"startOffset":5449,"endOffset":5582,"count":0}],"isBlockCoverage":true},{"functionName":"getDirents","ranges":[{"startOffset":5585,"endOffset":6710,"count":1},{"startOffset":5809,"endOffset":6492,"count":4},{"startOffset":5878,"endOffset":6414,"count":0},{"startOffset":6557,"endOffset":6708,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6143,"endOffset":6404,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":7755,"endOffset":8381,"count":749},{"startOffset":7839,"endOffset":7871,"count":658},{"startOffset":7873,"endOffset":7905,"count":108},{"startOffset":7905,"endOffset":7942,"count":641},{"startOffset":7942,"endOffset":8060,"count":239},{"startOffset":8060,"endOffset":8182,"count":402},{"startOffset":8099,"endOffset":8182,"count":0},{"startOffset":8182,"endOffset":8296,"count":641},{"startOffset":8296,"endOffset":8360,"count":0},{"startOffset":8360,"endOffset":8380,"count":641}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":8439,"endOffset":8968,"count":1660},{"startOffset":8509,"endOffset":8644,"count":0},{"startOffset":8676,"endOffset":8966,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9109,"endOffset":9699,"count":763},{"startOffset":9339,"endOffset":9359,"count":0},{"startOffset":9429,"endOffset":9497,"count":0},{"startOffset":9516,"endOffset":9698,"count":0}],"isBlockCoverage":true},{"functionName":"StatsBase","ranges":[{"startOffset":10442,"endOffset":10749,"count":5}],"isBlockCoverage":true},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":10785,"endOffset":10842,"count":5}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":10874,"endOffset":10931,"count":4}],"isBlockCoverage":true},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":11530,"endOffset":11612,"count":20}],"isBlockCoverage":true},{"functionName":"dateFromMs","ranges":[{"startOffset":12099,"endOffset":12210,"count":20}],"isBlockCoverage":true},{"functionName":"Stats","ranges":[{"startOffset":13382,"endOffset":13924,"count":5}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":14265,"endOffset":14495,"count":9},{"startOffset":14302,"endOffset":14380,"count":0},{"startOffset":14382,"endOffset":14449,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":14613,"endOffset":15692,"count":5},{"startOffset":14693,"endOffset":15219,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":16094,"endOffset":17350,"count":327},{"startOffset":16175,"endOffset":16230,"count":0},{"startOffset":16253,"endOffset":16279,"count":0},{"startOffset":16336,"endOffset":16347,"count":0},{"startOffset":16369,"endOffset":16406,"count":0},{"startOffset":16411,"endOffset":16437,"count":0},{"startOffset":16442,"endOffset":16454,"count":0},{"startOffset":16476,"endOffset":16512,"count":0},{"startOffset":16518,"endOffset":16565,"count":0},{"startOffset":16570,"endOffset":16581,"count":0},{"startOffset":16603,"endOffset":16660,"count":0},{"startOffset":16666,"endOffset":16712,"count":0},{"startOffset":16717,"endOffset":16728,"count":0},{"startOffset":16750,"endOffset":16805,"count":0},{"startOffset":16811,"endOffset":16859,"count":0},{"startOffset":16864,"endOffset":16875,"count":0},{"startOffset":16897,"endOffset":16955,"count":0},{"startOffset":16960,"endOffset":16971,"count":0},{"startOffset":16993,"endOffset":17051,"count":0},{"startOffset":17057,"endOffset":17104,"count":0},{"startOffset":17109,"endOffset":17120,"count":0},{"startOffset":17142,"endOffset":17198,"count":0},{"startOffset":17203,"endOffset":17214,"count":0},{"startOffset":17236,"endOffset":17292,"count":0},{"startOffset":17296,"endOffset":17349,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18327,"endOffset":18706,"count":237},{"startOffset":18383,"endOffset":18450,"count":0},{"startOffset":18471,"endOffset":18538,"count":0},{"startOffset":18579,"endOffset":18702,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19212,"endOffset":19482,"count":763},{"startOffset":19274,"endOffset":19296,"count":0},{"startOffset":19298,"endOffset":19384,"count":0},{"startOffset":19460,"endOffset":19480,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19527,"endOffset":19662,"count":362}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19705,"endOffset":19826,"count":474},{"startOffset":19756,"endOffset":19775,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25531,"endOffset":26001,"count":237},{"startOffset":25631,"endOffset":25999,"count":0}],"isBlockCoverage":true}]},{"scriptId":"61","url":"node:url","functions":[{"functionName":"pathToFileURL","ranges":[{"startOffset":31795,"endOffset":31891,"count":2}],"isBlockCoverage":true}]},{"scriptId":"63","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"get hasLoadedAnyUserCJSModule","ranges":[{"startOffset":2204,"endOffset":2273,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3441,"endOffset":3532,"count":1},{"startOffset":3488,"endOffset":3524,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3581,"endOffset":3624,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3665,"endOffset":3719,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":5161,"endOffset":5575,"count":1020},{"startOffset":5259,"endOffset":5357,"count":1005},{"startOffset":5335,"endOffset":5353,"count":210},{"startOffset":5357,"endOffset":5430,"count":810},{"startOffset":5430,"endOffset":5444,"count":795},{"startOffset":5446,"endOffset":5556,"count":338},{"startOffset":5556,"endOffset":5574,"count":810}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":6066,"endOffset":6268,"count":386},{"startOffset":6138,"endOffset":6148,"count":367},{"startOffset":6165,"endOffset":6218,"count":367},{"startOffset":6175,"endOffset":6217,"count":167},{"startOffset":6220,"endOffset":6266,"count":367}],"isBlockCoverage":true},{"functionName":"reportModuleToWatchMode","ranges":[{"startOffset":6385,"endOffset":6541,"count":682},{"startOffset":6466,"endOffset":6481,"count":0},{"startOffset":6483,"endOffset":6539,"count":0}],"isBlockCoverage":true},{"functionName":"reportModuleNotFoundToWatchMode","ranges":[{"startOffset":6725,"endOffset":6964,"count":9},{"startOffset":6826,"endOffset":6841,"count":0},{"startOffset":6843,"endOffset":6962,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6911,"endOffset":6953,"count":0}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":7135,"endOffset":7892,"count":211},{"startOffset":7448,"endOffset":7458,"count":0},{"startOffset":7476,"endOffset":7840,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9854,"endOffset":9879,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJS","ranges":[{"startOffset":10599,"endOffset":11099,"count":1}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":11983,"endOffset":13262,"count":54},{"startOffset":12105,"endOffset":12186,"count":8},{"startOffset":12186,"endOffset":12280,"count":46},{"startOffset":12280,"endOffset":12324,"count":1},{"startOffset":12325,"endOffset":12392,"count":0},{"startOffset":12418,"endOffset":13243,"count":0},{"startOffset":13243,"endOffset":13261,"count":46}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":13571,"endOffset":13807,"count":425},{"startOffset":13660,"endOffset":13671,"count":190},{"startOffset":13671,"endOffset":13716,"count":235},{"startOffset":13716,"endOffset":13726,"count":0},{"startOffset":13728,"endOffset":13771,"count":0},{"startOffset":13771,"endOffset":13806,"count":235}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":14072,"endOffset":14292,"count":249},{"startOffset":14161,"endOffset":14274,"count":375},{"startOffset":14240,"endOffset":14270,"count":186},{"startOffset":14274,"endOffset":14291,"count":63}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":14476,"endOffset":14952,"count":211},{"startOffset":14700,"endOffset":14934,"count":214},{"startOffset":14751,"endOffset":14764,"count":0},{"startOffset":14902,"endOffset":14930,"count":208},{"startOffset":14934,"endOffset":14951,"count":3}],"isBlockCoverage":true},{"functionName":"trySelfParentPath","ranges":[{"startOffset":15075,"endOffset":15368,"count":288},{"startOffset":15127,"endOffset":15144,"count":8},{"startOffset":15144,"endOffset":15202,"count":280},{"startOffset":15202,"endOffset":15366,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":15576,"endOffset":16504,"count":288},{"startOffset":15635,"endOffset":15652,"count":8},{"startOffset":15652,"endOffset":15774,"count":280},{"startOffset":15775,"endOffset":15800,"count":7},{"startOffset":15802,"endOffset":15825,"count":273},{"startOffset":15825,"endOffset":15872,"count":7},{"startOffset":15872,"endOffset":15898,"count":0},{"startOffset":15898,"endOffset":16064,"count":7},{"startOffset":15960,"endOffset":16035,"count":0},{"startOffset":16064,"endOffset":16502,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":16852,"endOffset":17670,"count":266},{"startOffset":17059,"endOffset":17074,"count":198},{"startOffset":17089,"endOffset":17100,"count":198},{"startOffset":17100,"endOffset":17201,"count":68},{"startOffset":17201,"endOffset":17223,"count":59},{"startOffset":17225,"endOffset":17668,"count":4},{"startOffset":17505,"endOffset":17664,"count":0}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":17963,"endOffset":21970,"count":289},{"startOffset":18073,"endOffset":18096,"count":9},{"startOffset":18096,"endOffset":18159,"count":280},{"startOffset":18136,"endOffset":18159,"count":0},{"startOffset":18292,"endOffset":18315,"count":23},{"startOffset":18315,"endOffset":18898,"count":266},{"startOffset":18537,"endOffset":18891,"count":0},{"startOffset":18973,"endOffset":19429,"count":198},{"startOffset":19079,"endOffset":19164,"count":23},{"startOffset":19099,"endOffset":19163,"count":0},{"startOffset":19165,"endOffset":19423,"count":23},{"startOffset":19334,"endOffset":19421,"count":0},{"startOffset":19474,"endOffset":19628,"count":198},{"startOffset":19591,"endOffset":19624,"count":23},{"startOffset":19628,"endOffset":19690,"count":266},{"startOffset":19690,"endOffset":21951,"count":356},{"startOffset":19822,"endOffset":19832,"count":333},{"startOffset":19833,"endOffset":19854,"count":324},{"startOffset":19856,"endOffset":19879,"count":81},{"startOffset":19879,"endOffset":19907,"count":275},{"startOffset":19907,"endOffset":20047,"count":266},{"startOffset":20000,"endOffset":20041,"count":4},{"startOffset":20047,"endOffset":21418,"count":271},{"startOffset":20199,"endOffset":21183,"count":31},{"startOffset":20232,"endOffset":20421,"count":30},{"startOffset":20287,"endOffset":20347,"count":0},{"startOffset":20421,"endOffset":21175,"count":1},{"startOffset":20475,"endOffset":21115,"count":0},{"startOffset":21206,"endOffset":21412,"count":240},{"startOffset":21286,"endOffset":21346,"count":231},{"startOffset":21418,"endOffset":21438,"count":271},{"startOffset":21438,"endOffset":21449,"count":63},{"startOffset":21451,"endOffset":21677,"count":54},{"startOffset":21553,"endOffset":21609,"count":0},{"startOffset":21677,"endOffset":21697,"count":271},{"startOffset":21697,"endOffset":21773,"count":262},{"startOffset":21773,"endOffset":21951,"count":9},{"startOffset":21951,"endOffset":21969,"count":0}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":24047,"endOffset":25235,"count":224},{"startOffset":24319,"endOffset":24358,"count":0},{"startOffset":24679,"endOffset":25113,"count":26384},{"startOffset":24775,"endOffset":24983,"count":2202},{"startOffset":24802,"endOffset":24942,"count":1754},{"startOffset":24983,"endOffset":25107,"count":24182},{"startOffset":25003,"endOffset":25107,"count":7437},{"startOffset":25038,"endOffset":25064,"count":5683},{"startOffset":25064,"endOffset":25099,"count":1754}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":25370,"endOffset":26657,"count":288},{"startOffset":25450,"endOffset":25516,"count":0},{"startOffset":25601,"endOffset":25800,"count":220},{"startOffset":25681,"endOffset":25731,"count":185},{"startOffset":25732,"endOffset":25799,"count":0},{"startOffset":25802,"endOffset":26129,"count":68},{"startOffset":25862,"endOffset":25877,"count":60},{"startOffset":25879,"endOffset":25989,"count":60},{"startOffset":25989,"endOffset":26029,"count":8},{"startOffset":26118,"endOffset":26124,"count":0},{"startOffset":26129,"endOffset":26197,"count":220},{"startOffset":26198,"endOffset":26217,"count":220},{"startOffset":26219,"endOffset":26468,"count":0},{"startOffset":26468,"endOffset":26656,"count":220}],"isBlockCoverage":true},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":28113,"endOffset":28757,"count":4},{"startOffset":28282,"endOffset":28575,"count":2},{"startOffset":28577,"endOffset":28729,"count":0}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":29423,"endOffset":32576,"count":479},{"startOffset":29506,"endOffset":30334,"count":471},{"startOffset":29965,"endOffset":30330,"count":90},{"startOffset":30145,"endOffset":30217,"count":2},{"startOffset":30217,"endOffset":30262,"count":88},{"startOffset":30262,"endOffset":30330,"count":0},{"startOffset":30334,"endOffset":30387,"count":389},{"startOffset":30387,"endOffset":30659,"count":0},{"startOffset":30659,"endOffset":30812,"count":389},{"startOffset":30812,"endOffset":31182,"count":85},{"startOffset":30892,"endOffset":31130,"count":13},{"startOffset":30988,"endOffset":31015,"count":11},{"startOffset":31017,"endOffset":31085,"count":2},{"startOffset":31085,"endOffset":31130,"count":11},{"startOffset":31130,"endOffset":31178,"count":72},{"startOffset":31182,"endOffset":31242,"count":315},{"startOffset":31242,"endOffset":31325,"count":104},{"startOffset":31325,"endOffset":31424,"count":211},{"startOffset":31424,"endOffset":31455,"count":200},{"startOffset":31472,"endOffset":31613,"count":0},{"startOffset":31613,"endOffset":31717,"count":211},{"startOffset":31717,"endOffset":31786,"count":203},{"startOffset":31786,"endOffset":32548,"count":211},{"startOffset":31891,"endOffset":32294,"count":0},{"startOffset":32476,"endOffset":32544,"count":0},{"startOffset":32548,"endOffset":32575,"count":211}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":33038,"endOffset":36174,"count":392},{"startOffset":33135,"endOffset":33160,"count":104},{"startOffset":33160,"endOffset":33210,"count":288},{"startOffset":33210,"endOffset":33229,"count":0},{"startOffset":33231,"endOffset":34324,"count":0},{"startOffset":34324,"endOffset":34419,"count":288},{"startOffset":34419,"endOffset":34467,"count":0},{"startOffset":34469,"endOffset":35111,"count":0},{"startOffset":35111,"endOffset":35272,"count":288},{"startOffset":35272,"endOffset":35468,"count":0},{"startOffset":35468,"endOffset":35628,"count":288},{"startOffset":35628,"endOffset":36173,"count":0}],"isBlockCoverage":true},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":36601,"endOffset":37182,"count":4},{"startOffset":36799,"endOffset":36928,"count":0},{"startOffset":37047,"endOffset":37181,"count":0}],"isBlockCoverage":true},{"functionName":"Module.load","ranges":[{"startOffset":37831,"endOffset":38680,"count":211},{"startOffset":38166,"endOffset":38196,"count":0},{"startOffset":38198,"endOffset":38250,"count":0},{"startOffset":38530,"endOffset":38578,"count":0}],"isBlockCoverage":true},{"functionName":"Module.require","ranges":[{"startOffset":38967,"endOffset":39266,"count":471},{"startOffset":39027,"endOffset":39145,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":39792,"endOffset":42146,"count":207},{"startOffset":40177,"endOffset":40945,"count":0},{"startOffset":41808,"endOffset":41906,"count":8},{"startOffset":41940,"endOffset":42144,"count":0}],"isBlockCoverage":true},{"functionName":"importModuleDynamically","ranges":[{"startOffset":39909,"endOffset":40161,"count":2}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":42467,"endOffset":44293,"count":207},{"startOffset":42558,"endOffset":42568,"count":0},{"startOffset":42586,"endOffset":42739,"count":0},{"startOffset":42872,"endOffset":42896,"count":0},{"startOffset":42898,"endOffset":43634,"count":0},{"startOffset":43857,"endOffset":43887,"count":8},{"startOffset":43912,"endOffset":44051,"count":0},{"startOffset":44253,"endOffset":44274,"count":8}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":44471,"endOffset":46271,"count":207},{"startOffset":44632,"endOffset":44640,"count":11},{"startOffset":44642,"endOffset":44707,"count":11},{"startOffset":44707,"endOffset":44767,"count":196},{"startOffset":44816,"endOffset":46231,"count":204},{"startOffset":44879,"endOffset":44901,"count":0},{"startOffset":44997,"endOffset":46227,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":46453,"endOffset":46859,"count":3},{"startOffset":46563,"endOffset":46573,"count":0},{"startOffset":46591,"endOffset":46693,"count":0},{"startOffset":46776,"endOffset":46857,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..node","ranges":[{"startOffset":47041,"endOffset":47383,"count":1},{"startOffset":47097,"endOffset":47107,"count":0},{"startOffset":47125,"endOffset":47274,"count":0}],"isBlockCoverage":true},{"functionName":"Module._initPaths","ranges":[{"startOffset":49087,"endOffset":50052,"count":1},{"startOffset":49128,"endOffset":49153,"count":0},{"startOffset":49205,"endOffset":49228,"count":0},{"startOffset":49436,"endOffset":49478,"count":0}],"isBlockCoverage":true}]},{"scriptId":"64","url":"node:internal/modules/helpers","functions":[{"functionName":"","ranges":[{"startOffset":1054,"endOffset":1079,"count":1}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":1548,"endOffset":1680,"count":267}],"isBlockCoverage":true},{"functionName":"initializeCjsConditions","ranges":[{"startOffset":1796,"endOffset":2188,"count":1},{"startOffset":1975,"endOffset":1979,"count":0}],"isBlockCoverage":true},{"functionName":"getCjsConditions","ranges":[{"startOffset":2255,"endOffset":2382,"count":4},{"startOffset":2320,"endOffset":2356,"count":0}],"isBlockCoverage":true},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":2609,"endOffset":2989,"count":118},{"startOffset":2698,"endOffset":2715,"count":0}],"isBlockCoverage":true},{"functionName":"lazyModule","ranges":[{"startOffset":3082,"endOffset":3195,"count":207},{"startOffset":3126,"endOffset":3174,"count":1}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":3784,"endOffset":6316,"count":207},{"startOffset":3923,"endOffset":3986,"count":0},{"startOffset":4053,"endOffset":5324,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":4196,"endOffset":5319,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":5346,"endOffset":5486,"count":471}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":5672,"endOffset":5818,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":5963,"endOffset":6085,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":6528,"endOffset":6683,"count":3},{"startOffset":6610,"endOffset":6663,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":9045,"endOffset":9233,"count":93},{"startOffset":9152,"endOffset":9198,"count":10},{"startOffset":9198,"endOffset":9232,"count":83}],"isBlockCoverage":true}]},{"scriptId":"65","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"read","ranges":[{"startOffset":1053,"endOffset":3803,"count":1300},{"startOffset":1149,"endOffset":1186,"count":1070},{"startOffset":1186,"endOffset":1863,"count":230},{"startOffset":1863,"endOffset":1872,"count":0},{"startOffset":1873,"endOffset":1887,"count":0},{"startOffset":1888,"endOffset":1910,"count":230},{"startOffset":1934,"endOffset":3753,"count":179},{"startOffset":2002,"endOffset":2598,"count":0},{"startOffset":2756,"endOffset":2790,"count":173},{"startOffset":2792,"endOffset":2832,"count":173},{"startOffset":2888,"endOffset":2922,"count":123},{"startOffset":2924,"endOffset":2964,"count":123},{"startOffset":3024,"endOffset":3070,"count":61},{"startOffset":3130,"endOffset":3176,"count":3},{"startOffset":3287,"endOffset":3346,"count":57},{"startOffset":3348,"endOffset":3388,"count":57},{"startOffset":3422,"endOffset":3618,"count":1},{"startOffset":3543,"endOffset":3596,"count":0},{"startOffset":3646,"endOffset":3749,"count":0},{"startOffset":3753,"endOffset":3802,"count":230}],"isBlockCoverage":true},{"functionName":"readPackage","ranges":[{"startOffset":3871,"endOffset":3961,"count":936}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":4178,"endOffset":4756,"count":484},{"startOffset":4313,"endOffset":4693,"count":814},{"startOffset":4514,"endOffset":4541,"count":0},{"startOffset":4612,"endOffset":4689,"count":484},{"startOffset":4693,"endOffset":4755,"count":0}],"isBlockCoverage":true}]},{"scriptId":"66","url":"node:internal/modules/esm/utils","functions":[{"functionName":"getDefaultConditions","ranges":[{"startOffset":926,"endOffset":1032,"count":164}],"isBlockCoverage":true},{"functionName":"getDefaultConditionsSet","ranges":[{"startOffset":1162,"endOffset":1277,"count":163}],"isBlockCoverage":true},{"functionName":"initializeDefaultConditions","ranges":[{"startOffset":1427,"endOffset":1809,"count":1},{"startOffset":1610,"endOffset":1614,"count":0}],"isBlockCoverage":true},{"functionName":"getConditionsSet","ranges":[{"startOffset":1879,"endOffset":2238,"count":163},{"startOffset":1992,"endOffset":2200,"count":0}],"isBlockCoverage":true},{"functionName":"registerModule","ranges":[{"startOffset":3981,"endOffset":4524,"count":290},{"startOffset":4186,"endOffset":4399,"count":0}],"isBlockCoverage":true},{"functionName":"initializeImportMetaObject","ranges":[{"startOffset":4734,"endOffset":5025,"count":2}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyCallback","ranges":[{"startOffset":5520,"endOffset":6035,"count":4},{"startOffset":5863,"endOffset":6034,"count":0}],"isBlockCoverage":true},{"functionName":"initializeESM","ranges":[{"startOffset":6352,"endOffset":6728,"count":1}],"isBlockCoverage":true},{"functionName":"isLoaderWorker","ranges":[{"startOffset":6869,"endOffset":6924,"count":1}],"isBlockCoverage":true}]},{"scriptId":"67","url":"node:internal/process/pre_execution","functions":[{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":756,"endOffset":940,"count":1}],"isBlockCoverage":true},{"functionName":"prepareExecution","ranges":[{"startOffset":1143,"endOffset":3296,"count":1},{"startOffset":2063,"endOffset":2167,"count":0},{"startOffset":3055,"endOffset":3217,"count":0}],"isBlockCoverage":true},{"functionName":"setupSymbolDisposePolyfill","ranges":[{"startOffset":3298,"endOffset":4033,"count":1}],"isBlockCoverage":true},{"functionName":"setupUserModules","ranges":[{"startOffset":4035,"endOffset":4463,"count":1},{"startOffset":4344,"endOffset":4361,"count":0}],"isBlockCoverage":true},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":4465,"endOffset":4521,"count":1}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":4948,"endOffset":7392,"count":1},{"startOffset":6040,"endOffset":6092,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":7394,"endOffset":7675,"count":13},{"startOffset":7515,"endOffset":7673,"count":1}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":7677,"endOffset":8197,"count":1},{"startOffset":8052,"endOffset":8191,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8081,"endOffset":8183,"count":0}],"isBlockCoverage":false},{"functionName":"setupFetch","ranges":[{"startOffset":8233,"endOffset":9384,"count":1},{"startOffset":8364,"endOffset":8381,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUndici","ranges":[{"startOffset":8399,"endOffset":8544,"count":0}],"isBlockCoverage":false},{"functionName":"fetch","ranges":[{"startOffset":8548,"endOffset":8643,"count":0}],"isBlockCoverage":false},{"functionName":"lazyInterface","ranges":[{"startOffset":8695,"endOffset":8936,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8796,"endOffset":8846,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8854,"endOffset":8924,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9269,"endOffset":9380,"count":0}],"isBlockCoverage":false},{"functionName":"setupWebCrypto","ranges":[{"startOffset":9490,"endOffset":9940,"count":1},{"startOffset":9651,"endOffset":9938,"count":0}],"isBlockCoverage":true},{"functionName":"setupCodeCoverage","ranges":[{"startOffset":9942,"endOffset":10463,"count":1}],"isBlockCoverage":true},{"functionName":"setupCustomEvent","ranges":[{"startOffset":10571,"endOffset":10857,"count":1},{"startOffset":10736,"endOffset":10856,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":10859,"endOffset":11084,"count":1},{"startOffset":10961,"endOffset":11083,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":11086,"endOffset":11335,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":11231,"endOffset":11326,"count":4}],"isBlockCoverage":true},{"functionName":"setupDebugEnv","ranges":[{"startOffset":11337,"endOffset":11568,"count":1},{"startOffset":11488,"endOffset":11566,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":11630,"endOffset":11818,"count":1},{"startOffset":11718,"endOffset":11816,"count":0}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":11820,"endOffset":12401,"count":1},{"startOffset":11955,"endOffset":12399,"count":0}],"isBlockCoverage":true},{"functionName":"doWriteHeapSnapshot","ranges":[{"startOffset":12068,"endOffset":12129,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12321,"endOffset":12393,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":12403,"endOffset":12662,"count":1}],"isBlockCoverage":true},{"functionName":"setupPerfHooks","ranges":[{"startOffset":12664,"endOffset":12747,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":12749,"endOffset":13331,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":13526,"endOffset":15478,"count":1},{"startOffset":14238,"endOffset":14540,"count":16},{"startOffset":14283,"endOffset":14515,"count":0},{"startOffset":14857,"endOffset":15054,"count":0},{"startOffset":15082,"endOffset":15476,"count":0}],"isBlockCoverage":true},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":15480,"endOffset":16045,"count":1},{"startOffset":15556,"endOffset":16043,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":16047,"endOffset":16317,"count":1},{"startOffset":16134,"endOffset":16315,"count":0}],"isBlockCoverage":true},{"functionName":"readPolicyFromDisk","ranges":[{"startOffset":16319,"endOffset":18138,"count":1},{"startOffset":16447,"endOffset":18136,"count":0}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":18140,"endOffset":18261,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":18263,"endOffset":18838,"count":1},{"startOffset":18591,"endOffset":18836,"count":0}],"isBlockCoverage":true},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":18840,"endOffset":19038,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":19040,"endOffset":19297,"count":1},{"startOffset":19125,"endOffset":19295,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":19299,"endOffset":19647,"count":1},{"startOffset":19493,"endOffset":19645,"count":0}],"isBlockCoverage":true},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":19649,"endOffset":19743,"count":1}],"isBlockCoverage":true}]},{"scriptId":"68","url":"node:internal/vm/module","functions":[{"functionName":"importModuleDynamicallyWrap","ranges":[{"startOffset":11660,"endOffset":12139,"count":207}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyWrapper","ranges":[{"startOffset":11765,"endOffset":12095,"count":2},{"startOffset":11916,"endOffset":11953,"count":0},{"startOffset":11955,"endOffset":12094,"count":0}],"isBlockCoverage":true}]},{"scriptId":"70","url":"node:internal/modules/run_main","functions":[{"functionName":"resolveMainPath","ranges":[{"startOffset":256,"endOffset":1415,"count":1},{"startOffset":430,"endOffset":534,"count":0},{"startOffset":827,"endOffset":838,"count":0},{"startOffset":1065,"endOffset":1389,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":1576,"endOffset":2864,"count":1},{"startOffset":1682,"endOffset":1698,"count":0},{"startOffset":2172,"endOffset":2194,"count":0},{"startOffset":2338,"endOffset":2360,"count":0},{"startOffset":2491,"endOffset":2552,"count":0},{"startOffset":2554,"endOffset":2786,"count":0},{"startOffset":2800,"endOffset":2861,"count":0}],"isBlockCoverage":true},{"functionName":"runMainESM","ranges":[{"startOffset":2995,"endOffset":3308,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3216,"endOffset":3303,"count":1}],"isBlockCoverage":true},{"functionName":"handleMainPromise","ranges":[{"startOffset":3440,"endOffset":3714,"count":1}],"isBlockCoverage":true},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":4261,"endOffset":4659,"count":1},{"startOffset":4471,"endOffset":4478,"count":0},{"startOffset":4484,"endOffset":4657,"count":0}],"isBlockCoverage":true}]},{"scriptId":"71","url":"node:internal/dns/utils","functions":[{"functionName":"lazyBinding","ranges":[{"startOffset":522,"endOffset":611,"count":2}],"isBlockCoverage":true},{"functionName":"validateTimeout","ranges":[{"startOffset":973,"endOffset":1120,"count":1}],"isBlockCoverage":true},{"functionName":"validateTries","ranges":[{"startOffset":1122,"endOffset":1257,"count":1}],"isBlockCoverage":true},{"functionName":"ResolverBase","ranges":[{"startOffset":1651,"endOffset":2000,"count":1},{"startOffset":1894,"endOffset":1951,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2004,"endOffset":2140,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDns","ranges":[{"startOffset":5443,"endOffset":5829,"count":1},{"startOffset":5586,"endOffset":5696,"count":0},{"startOffset":5744,"endOffset":5828,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5769,"endOffset":5825,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultResolver","ranges":[{"startOffset":6090,"endOffset":6371,"count":1}],"isBlockCoverage":true},{"functionName":"bindDefaultResolver","ranges":[{"startOffset":6446,"endOffset":6668,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6579,"endOffset":6664,"count":15}],"isBlockCoverage":true},{"functionName":"validateHints","ranges":[{"startOffset":6670,"endOffset":6889,"count":1},{"startOffset":6829,"endOffset":6887,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultVerbatim","ranges":[{"startOffset":7290,"endOffset":7358,"count":1}],"isBlockCoverage":true},{"functionName":"createResolverClass","ranges":[{"startOffset":7543,"endOffset":8650,"count":1}],"isBlockCoverage":true}]},{"scriptId":"72","url":"node:internal/net","functions":[{"functionName":"isIPv4","ranges":[{"startOffset":997,"endOffset":1270,"count":7}],"isBlockCoverage":true},{"functionName":"isIPv6","ranges":[{"startOffset":1272,"endOffset":1545,"count":5}],"isBlockCoverage":true},{"functionName":"isIP","ranges":[{"startOffset":1547,"endOffset":1633,"count":7},{"startOffset":1583,"endOffset":1592,"count":2},{"startOffset":1592,"endOffset":1610,"count":5},{"startOffset":1610,"endOffset":1619,"count":0},{"startOffset":1619,"endOffset":1632,"count":5}],"isBlockCoverage":true}]},{"scriptId":"73","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3330,"endOffset":3433,"count":4},{"startOffset":3382,"endOffset":3411,"count":1}],"isBlockCoverage":true}]},{"scriptId":"390","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1182,"count":1}],"isBlockCoverage":false}]},{"scriptId":"391","url":"node:internal/process/esm_loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1190,"count":1}],"isBlockCoverage":false},{"functionName":"get esmLoader","ranges":[{"startOffset":386,"endOffset":458,"count":11}],"isBlockCoverage":true},{"functionName":"loadESM","ranges":[{"startOffset":462,"endOffset":1185,"count":1},{"startOffset":630,"endOffset":846,"count":0},{"startOffset":937,"endOffset":1181,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":728,"endOffset":836,"count":0}],"isBlockCoverage":false}]},{"scriptId":"392","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21355,"count":1}],"isBlockCoverage":false},{"functionName":"newResolveCache","ranges":[{"startOffset":890,"endOffset":1020,"count":1}],"isBlockCoverage":true},{"functionName":"newLoadCache","ranges":[{"startOffset":1176,"endOffset":1297,"count":1}],"isBlockCoverage":true},{"functionName":"getTranslators","ranges":[{"startOffset":1459,"endOffset":1581,"count":106}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2316,"endOffset":14669,"count":1}],"isBlockCoverage":false},{"functionName":"ModuleLoader","ranges":[{"startOffset":3583,"endOffset":4138,"count":1},{"startOffset":3671,"endOffset":3728,"count":0},{"startOffset":3859,"endOffset":4090,"count":0}],"isBlockCoverage":true},{"functionName":"setCustomizations","ranges":[{"startOffset":5678,"endOffset":5922,"count":1},{"startOffset":5781,"endOffset":5863,"count":0}],"isBlockCoverage":true},{"functionName":"eval","ranges":[{"startOffset":5926,"endOffset":6906,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":7641,"endOffset":7876,"count":184}],"isBlockCoverage":true},{"functionName":"getJobFromResolveResult","ranges":[{"startOffset":7880,"endOffset":8452,"count":184},{"startOffset":8248,"endOffset":8310,"count":0},{"startOffset":8339,"endOffset":8431,"count":105}],"isBlockCoverage":true},{"functionName":"#createModuleJob","ranges":[{"startOffset":9090,"endOffset":10149,"count":105},{"startOffset":9681,"endOffset":9721,"count":1},{"startOffset":9776,"endOffset":9791,"count":0},{"startOffset":9793,"endOffset":9847,"count":0}],"isBlockCoverage":true},{"functionName":"moduleProvider","ranges":[{"startOffset":9178,"endOffset":9623,"count":105},{"startOffset":9453,"endOffset":9533,"count":0}],"isBlockCoverage":true},{"functionName":"import","ranges":[{"startOffset":10611,"endOffset":10836,"count":5}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":10902,"endOffset":11425,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":11884,"endOffset":12470,"count":184},{"startOffset":11972,"endOffset":12070,"count":0},{"startOffset":12266,"endOffset":12300,"count":1},{"startOffset":12300,"endOffset":12469,"count":183}],"isBlockCoverage":true},{"functionName":"resolveSync","ranges":[{"startOffset":12628,"endOffset":12906,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":13118,"endOffset":13458,"count":183}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":13742,"endOffset":14046,"count":105},{"startOffset":13879,"endOffset":13933,"count":0}],"isBlockCoverage":true},{"functionName":"validateLoadResult","ranges":[{"startOffset":14050,"endOffset":14201,"count":105},{"startOffset":14108,"endOffset":14197,"count":0}],"isBlockCoverage":true},{"functionName":"importMetaInitialize","ranges":[{"startOffset":14205,"endOffset":14540,"count":2},{"startOffset":14273,"endOffset":14357,"count":0}],"isBlockCoverage":true},{"functionName":"forceLoadHooks","ranges":[{"startOffset":14601,"endOffset":14667,"count":1},{"startOffset":14644,"endOffset":14660,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":14723,"endOffset":17130,"count":0}],"isBlockCoverage":false},{"functionName":"createModuleLoader","ranges":[{"startOffset":17626,"endOffset":19308,"count":1},{"startOffset":18091,"endOffset":19258,"count":0}],"isBlockCoverage":true},{"functionName":"readableURIEncode","ranges":[{"startOffset":18166,"endOffset":18661,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18981,"endOffset":19069,"count":0}],"isBlockCoverage":false},{"functionName":"getHooksProxy","ranges":[{"startOffset":19421,"endOffset":19597,"count":0}],"isBlockCoverage":false},{"functionName":"register","ranges":[{"startOffset":20881,"endOffset":21280,"count":0}],"isBlockCoverage":false}]},{"scriptId":"393","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3892,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":297,"endOffset":322,"count":1}],"isBlockCoverage":true},{"functionName":"ResolveCache","ranges":[{"startOffset":866,"endOffset":894,"count":1}],"isBlockCoverage":true},{"functionName":"serializeKey","ranges":[{"startOffset":1240,"endOffset":1852,"count":184},{"startOffset":1649,"endOffset":1851,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1768,"endOffset":1834,"count":0}],"isBlockCoverage":false},{"functionName":"#getModuleCachedImports","ranges":[{"startOffset":1856,"endOffset":2072,"count":367},{"startOffset":1970,"endOffset":2042,"count":57}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2247,"endOffset":2349,"count":184}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2489,"endOffset":2618,"count":183}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":2622,"endOffset":2726,"count":0}],"isBlockCoverage":false},{"functionName":"LoadCache","ranges":[{"startOffset":2860,"endOffset":2888,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2937,"endOffset":3080,"count":184},{"startOffset":3067,"endOffset":3075,"count":79}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3083,"endOffset":3677,"count":105},{"startOffset":3302,"endOffset":3338,"count":0},{"startOffset":3340,"endOffset":3410,"count":0},{"startOffset":3494,"endOffset":3500,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":3680,"endOffset":3837,"count":0}],"isBlockCoverage":false}]},{"scriptId":"394","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3876,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1326,"endOffset":1364,"count":5}],"isBlockCoverage":true},{"functionName":"validateAttributes","ranges":[{"startOffset":1785,"endOffset":3160,"count":105},{"startOffset":1981,"endOffset":2108,"count":0},{"startOffset":2180,"endOffset":2325,"count":0},{"startOffset":2590,"endOffset":2650,"count":0},{"startOffset":2656,"endOffset":2764,"count":0},{"startOffset":2770,"endOffset":3154,"count":0}],"isBlockCoverage":true},{"functionName":"handleInvalidType","ranges":[{"startOffset":3392,"endOffset":3806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"395","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12874,"count":1}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":521,"endOffset":637,"count":166},{"startOffset":567,"endOffset":585,"count":165},{"startOffset":585,"endOffset":636,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1034,"endOffset":1059,"count":1}],"isBlockCoverage":true},{"functionName":"initCJSParse","ranges":[{"startOffset":1821,"endOffset":2219,"count":1},{"startOffset":1895,"endOffset":1970,"count":0},{"startOffset":2128,"endOffset":2213,"count":0}],"isBlockCoverage":true},{"functionName":"assertBufferSource","ranges":[{"startOffset":2833,"endOffset":3254,"count":166},{"startOffset":2910,"endOffset":2937,"count":83},{"startOffset":2939,"endOffset":2956,"count":0},{"startOffset":3050,"endOffset":3075,"count":0},{"startOffset":3094,"endOffset":3173,"count":0},{"startOffset":3174,"endOffset":3178,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":3478,"endOffset":3745,"count":83},{"startOffset":3537,"endOffset":3553,"count":0},{"startOffset":3682,"endOffset":3701,"count":1},{"startOffset":3702,"endOffset":3711,"count":82}],"isBlockCoverage":true},{"functionName":"errPath","ranges":[{"startOffset":3865,"endOffset":4010,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":4486,"endOffset":4624,"count":2}],"isBlockCoverage":true},{"functionName":"moduleStrategy","ranges":[{"startOffset":4706,"endOffset":5231,"count":83}],"isBlockCoverage":true},{"functionName":"initializeImportMeta","ranges":[{"startOffset":5120,"endOffset":5176,"count":2}],"isBlockCoverage":true},{"functionName":"enrichCJSError","ranges":[{"startOffset":5456,"endOffset":5995,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":6126,"endOffset":7482,"count":8},{"startOffset":6349,"endOffset":6374,"count":1},{"startOffset":6499,"endOffset":6521,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6612,"endOffset":7478,"count":8},{"startOffset":6731,"endOffset":6845,"count":0},{"startOffset":6937,"endOffset":7027,"count":0},{"startOffset":7077,"endOffset":7434,"count":18},{"startOffset":7180,"endOffset":7207,"count":0},{"startOffset":7331,"endOffset":7387,"count":0}],"isBlockCoverage":true},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":7610,"endOffset":9148,"count":11},{"startOffset":7713,"endOffset":7846,"count":0},{"startOffset":8145,"endOffset":8193,"count":0},{"startOffset":8275,"endOffset":8280,"count":0},{"startOffset":8288,"endOffset":8337,"count":0},{"startOffset":8521,"endOffset":8618,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8654,"endOffset":9109,"count":3},{"startOffset":8767,"endOffset":8794,"count":0},{"startOffset":8853,"endOffset":8870,"count":2},{"startOffset":8871,"endOffset":8901,"count":0},{"startOffset":9059,"endOffset":9099,"count":7}],"isBlockCoverage":true},{"functionName":"builtinStrategy","ranges":[{"startOffset":9272,"endOffset":9655,"count":14},{"startOffset":9528,"endOffset":9580,"count":0}],"isBlockCoverage":true},{"functionName":"jsonStrategy","ranges":[{"startOffset":9719,"endOffset":11861,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11927,"endOffset":12871,"count":0}],"isBlockCoverage":false}]},{"scriptId":"396","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47236,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2719,"endOffset":3305,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":3818,"endOffset":4552,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":4989,"endOffset":6122,"count":1},{"startOffset":5151,"endOffset":6120,"count":0}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":6221,"endOffset":6324,"count":6}],"isBlockCoverage":true},{"functionName":"legacyMainResolve","ranges":[{"startOffset":6712,"endOffset":8529,"count":6},{"startOffset":6831,"endOffset":7959,"count":5},{"startOffset":7016,"endOffset":7935,"count":0},{"startOffset":7959,"endOffset":8052,"count":1},{"startOffset":8052,"endOffset":8282,"count":0},{"startOffset":8282,"endOffset":8400,"count":1},{"startOffset":8400,"endOffset":8528,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExtensionsWithTryExactName","ranges":[{"startOffset":8592,"endOffset":8727,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensions","ranges":[{"startOffset":8845,"endOffset":9106,"count":0}],"isBlockCoverage":false},{"functionName":"resolveDirectoryEntry","ranges":[{"startOffset":9169,"endOffset":9676,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":10460,"endOffset":12656,"count":134},{"startOffset":10596,"endOffset":10749,"count":0},{"startOffset":10811,"endOffset":10995,"count":0},{"startOffset":11069,"endOffset":11721,"count":0},{"startOffset":11810,"endOffset":11846,"count":0},{"startOffset":11912,"endOffset":12004,"count":0},{"startOffset":12027,"endOffset":12315,"count":0},{"startOffset":12561,"endOffset":12566,"count":0}],"isBlockCoverage":true},{"functionName":"importNotDefined","ranges":[{"startOffset":13070,"endOffset":13281,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":13677,"endOffset":13872,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":14510,"endOffset":14893,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":15349,"endOffset":15727,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":17083,"endOffset":19836,"count":43},{"startOffset":17252,"endOffset":17263,"count":0},{"startOffset":17264,"endOffset":17300,"count":0},{"startOffset":17302,"endOffset":17386,"count":0},{"startOffset":17436,"endOffset":17993,"count":0},{"startOffset":18085,"endOffset":18695,"count":0},{"startOffset":18914,"endOffset":18998,"count":0},{"startOffset":19042,"endOffset":19835,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17768,"endOffset":17781,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18294,"endOffset":18307,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18440,"endOffset":18453,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19177,"endOffset":19190,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19417,"endOffset":19430,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19770,"endOffset":19783,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":20028,"endOffset":20172,"count":105},{"startOffset":20124,"endOffset":20169,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":20967,"endOffset":23217,"count":101},{"startOffset":21160,"endOffset":21314,"count":43},{"startOffset":21314,"endOffset":23100,"count":58},{"startOffset":21346,"endOffset":22192,"count":8},{"startOffset":21377,"endOffset":21403,"count":0},{"startOffset":21723,"endOffset":21871,"count":0},{"startOffset":21911,"endOffset":21938,"count":0},{"startOffset":21973,"endOffset":22030,"count":0},{"startOffset":22064,"endOffset":22126,"count":0},{"startOffset":22128,"endOffset":22192,"count":0},{"startOffset":22192,"endOffset":23100,"count":50},{"startOffset":22345,"endOffset":22573,"count":105},{"startOffset":22403,"endOffset":22567,"count":0},{"startOffset":22616,"endOffset":23025,"count":79},{"startOffset":22673,"endOffset":22695,"count":55},{"startOffset":22697,"endOffset":23019,"count":50},{"startOffset":22968,"endOffset":22981,"count":0},{"startOffset":23025,"endOffset":23100,"count":0},{"startOffset":23100,"endOffset":23216,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":23501,"endOffset":24444,"count":41},{"startOffset":23607,"endOffset":23631,"count":33},{"startOffset":23633,"endOffset":23649,"count":8},{"startOffset":23649,"endOffset":23703,"count":33},{"startOffset":23705,"endOffset":23722,"count":0},{"startOffset":23722,"endOffset":23862,"count":33},{"startOffset":23862,"endOffset":24413,"count":69},{"startOffset":23972,"endOffset":24029,"count":33},{"startOffset":24029,"endOffset":24409,"count":36},{"startOffset":24085,"endOffset":24409,"count":0},{"startOffset":24413,"endOffset":24443,"count":33}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":24941,"endOffset":27516,"count":41},{"startOffset":25149,"endOffset":25186,"count":19},{"startOffset":25588,"endOffset":25662,"count":0},{"startOffset":25693,"endOffset":27515,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":27890,"endOffset":28445,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":28932,"endOffset":31389,"count":2},{"startOffset":29094,"endOffset":29247,"count":0},{"startOffset":29831,"endOffset":31323,"count":0},{"startOffset":31333,"endOffset":31388,"count":0}],"isBlockCoverage":true},{"functionName":"getPackageType","ranges":[{"startOffset":31503,"endOffset":31616,"count":111}],"isBlockCoverage":true},{"functionName":"parsePackageName","ranges":[{"startOffset":31781,"endOffset":32839,"count":43},{"startOffset":31972,"endOffset":32200,"count":1},{"startOffset":32052,"endOffset":32091,"count":0},{"startOffset":32246,"endOffset":32261,"count":42},{"startOffset":32262,"endOffset":32314,"count":1},{"startOffset":32487,"endOffset":32522,"count":0},{"startOffset":32549,"endOffset":32668,"count":0},{"startOffset":32724,"endOffset":32728,"count":42},{"startOffset":32729,"endOffset":32782,"count":1}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":33163,"endOffset":35235,"count":72},{"startOffset":33277,"endOffset":33323,"count":29},{"startOffset":33323,"endOffset":33782,"count":43},{"startOffset":33622,"endOffset":33659,"count":30},{"startOffset":33661,"endOffset":33778,"count":0},{"startOffset":33782,"endOffset":33953,"count":43},{"startOffset":33953,"endOffset":35020,"count":180},{"startOffset":34212,"endOffset":34489,"count":137},{"startOffset":34289,"endOffset":34326,"count":0},{"startOffset":34489,"endOffset":34670,"count":43},{"startOffset":34670,"endOffset":34787,"count":37},{"startOffset":34787,"endOffset":34929,"count":6},{"startOffset":34929,"endOffset":35020,"count":0},{"startOffset":35020,"endOffset":35234,"count":0}],"isBlockCoverage":true},{"functionName":"isBareSpecifier","ranges":[{"startOffset":35346,"endOffset":35456,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":35575,"endOffset":35854,"count":346},{"startOffset":35645,"endOffset":35836,"count":172},{"startOffset":35703,"endOffset":35719,"count":154},{"startOffset":35719,"endOffset":35832,"count":18},{"startOffset":35836,"endOffset":35853,"count":174}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":36003,"endOffset":36194,"count":346},{"startOffset":36089,"endOffset":36106,"count":0},{"startOffset":36135,"endOffset":36151,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":36557,"endOffset":37348,"count":163},{"startOffset":36883,"endOffset":36929,"count":86},{"startOffset":36929,"endOffset":37219,"count":77},{"startOffset":36974,"endOffset":37046,"count":2},{"startOffset":37046,"endOffset":37219,"count":75},{"startOffset":37107,"endOffset":37215,"count":72},{"startOffset":37257,"endOffset":37283,"count":29},{"startOffset":37283,"endOffset":37347,"count":134}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":37510,"endOffset":38967,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfDisallowedImport","ranges":[{"startOffset":39347,"endOffset":40719,"count":183},{"startOffset":39441,"endOffset":40717,"count":182},{"startOffset":39653,"endOffset":40713,"count":0}],"isBlockCoverage":true},{"functionName":"throwIfInvalidParentURL","ranges":[{"startOffset":40859,"endOffset":41132,"count":183},{"startOffset":40936,"endOffset":40987,"count":1},{"startOffset":40987,"endOffset":41024,"count":182},{"startOffset":41024,"endOffset":41044,"count":0},{"startOffset":41046,"endOffset":41130,"count":0}],"isBlockCoverage":true},{"functionName":"defaultResolve","ranges":[{"startOffset":41756,"endOffset":45697,"count":183},{"startOffset":41904,"endOffset":41923,"count":182},{"startOffset":41913,"endOffset":41923,"count":0},{"startOffset":41925,"endOffset":42717,"count":0},{"startOffset":42759,"endOffset":42864,"count":182},{"startOffset":42821,"endOffset":42860,"count":0},{"startOffset":42948,"endOffset":43007,"count":86},{"startOffset":43007,"endOffset":43055,"count":97},{"startOffset":43055,"endOffset":43196,"count":109},{"startOffset":43196,"endOffset":43241,"count":0},{"startOffset":43242,"endOffset":43277,"count":0},{"startOffset":43279,"endOffset":43442,"count":0},{"startOffset":43442,"endOffset":43606,"count":109},{"startOffset":43510,"endOffset":43598,"count":0},{"startOffset":43613,"endOffset":43672,"count":0},{"startOffset":43677,"endOffset":43792,"count":74},{"startOffset":43742,"endOffset":43764,"count":0},{"startOffset":44126,"endOffset":44149,"count":0},{"startOffset":44214,"endOffset":44244,"count":109},{"startOffset":44246,"endOffset":44293,"count":20},{"startOffset":44293,"endOffset":44352,"count":163},{"startOffset":44352,"endOffset":44859,"count":1},{"startOffset":44812,"endOffset":44855,"count":0},{"startOffset":44859,"endOffset":45015,"count":163},{"startOffset":45015,"endOffset":45037,"count":1},{"startOffset":45038,"endOffset":45056,"count":162},{"startOffset":45069,"endOffset":45492,"count":0},{"startOffset":45492,"endOffset":45696,"count":163}],"isBlockCoverage":true},{"functionName":"decorateErrorWithCommonJSHints","ranges":[{"startOffset":45960,"endOffset":46436,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":46841,"endOffset":47232,"count":0}],"isBlockCoverage":false}]},{"scriptId":"397","url":"node:internal/modules/esm/package_config","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2215,"count":1}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":1072,"endOffset":2165,"count":156},{"startOffset":1190,"endOffset":1910,"count":321},{"startOffset":1324,"endOffset":1344,"count":0},{"startOffset":1534,"endOffset":1569,"count":156},{"startOffset":1569,"endOffset":1886,"count":165},{"startOffset":1886,"endOffset":1906,"count":0},{"startOffset":1910,"endOffset":2164,"count":0}],"isBlockCoverage":true}]},{"scriptId":"398","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5818,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":1228,"endOffset":1259,"count":35}],"isBlockCoverage":true},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":1324,"endOffset":1540,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":1815,"endOffset":2174,"count":135},{"startOffset":1915,"endOffset":2159,"count":429},{"startOffset":1977,"endOffset":2012,"count":0},{"startOffset":2020,"endOffset":2149,"count":135},{"startOffset":2108,"endOffset":2112,"count":0},{"startOffset":2159,"endOffset":2173,"count":0}],"isBlockCoverage":true},{"functionName":"underNodeModules","ranges":[{"startOffset":2404,"endOffset":2625,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":2749,"endOffset":4479,"count":135},{"startOffset":2866,"endOffset":3372,"count":111},{"startOffset":2945,"endOffset":2978,"count":103},{"startOffset":2978,"endOffset":3077,"count":8},{"startOffset":3077,"endOffset":3345,"count":0},{"startOffset":3345,"endOffset":3372,"count":8},{"startOffset":3372,"endOffset":3392,"count":24},{"startOffset":3392,"endOffset":4074,"count":0},{"startOffset":4074,"endOffset":4150,"count":24},{"startOffset":4150,"endOffset":4476,"count":0}],"isBlockCoverage":true},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":4615,"endOffset":4960,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":5105,"endOffset":5340,"count":164},{"startOffset":5259,"endOffset":5281,"count":0}],"isBlockCoverage":true},{"functionName":"defaultGetFormat","ranges":[{"startOffset":5485,"endOffset":5708,"count":6},{"startOffset":5626,"endOffset":5648,"count":0}],"isBlockCoverage":true}]},{"scriptId":"399","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2205,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":745,"endOffset":1083,"count":0}],"isBlockCoverage":false},{"functionName":"getLegacyExtensionFormat","ranges":[{"startOffset":1085,"endOffset":1167,"count":0}],"isBlockCoverage":false},{"functionName":"getFormatOfExtensionlessFile","ranges":[{"startOffset":1537,"endOffset":2055,"count":0}],"isBlockCoverage":false}]},{"scriptId":"400","url":"node:internal/modules/esm/handle_process_exit","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":false},{"functionName":"handleProcessExit","ranges":[{"startOffset":226,"endOffset":285,"count":0}],"isBlockCoverage":false}]},{"scriptId":"401","url":"node:internal/modules/esm/module_job","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8162,"count":1}],"isBlockCoverage":false},{"functionName":"isCommonJSGlobalLikeNotDefinedError","ranges":[{"startOffset":917,"endOffset":1048,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":1286,"endOffset":3063,"count":105}],"isBlockCoverage":true},{"functionName":"link","ranges":[{"startOffset":1855,"endOffset":2680,"count":105}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2311,"endOffset":2516,"count":179}],"isBlockCoverage":true},{"functionName":"instantiate","ranges":[{"startOffset":3067,"endOffset":3212,"count":5},{"startOffset":3124,"endOffset":3178,"count":4}],"isBlockCoverage":true},{"functionName":"_instantiate","ranges":[{"startOffset":3216,"endOffset":6870,"count":4},{"startOffset":3676,"endOffset":3853,"count":0},{"startOffset":3910,"endOffset":6623,"count":0},{"startOffset":6670,"endOffset":6866,"count":108}],"isBlockCoverage":true},{"functionName":"addJobsToDependencyGraph","ranges":[{"startOffset":3315,"endOffset":3575,"count":183},{"startOffset":3376,"endOffset":3401,"count":75},{"startOffset":3401,"endOffset":3574,"count":108}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":6874,"endOffset":8082,"count":5},{"startOffset":7049,"endOffset":8025,"count":0}],"isBlockCoverage":true}]},{"scriptId":"402","url":"node:internal/modules/esm/load","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4921,"count":1}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":1118,"endOffset":2345,"count":83},{"startOffset":1386,"endOffset":2211,"count":0},{"startOffset":2224,"endOffset":2234,"count":0},{"startOffset":2236,"endOffset":2292,"count":0}],"isBlockCoverage":true},{"functionName":"defaultLoad","ranges":[{"startOffset":2457,"endOffset":3416,"count":105},{"startOffset":2641,"endOffset":2676,"count":0},{"startOffset":2677,"endOffset":2709,"count":0},{"startOffset":2711,"endOffset":2918,"count":0},{"startOffset":3088,"endOffset":3176,"count":6},{"startOffset":3176,"endOffset":3204,"count":91},{"startOffset":3209,"endOffset":3233,"count":22},{"startOffset":3233,"endOffset":3335,"count":83}],"isBlockCoverage":true},{"functionName":"throwIfUnsupportedURLScheme","ranges":[{"startOffset":3604,"endOffset":4236,"count":105},{"startOffset":3834,"endOffset":3861,"count":14},{"startOffset":3862,"endOffset":3889,"count":14},{"startOffset":3890,"endOffset":4019,"count":0},{"startOffset":4024,"endOffset":4234,"count":0}],"isBlockCoverage":true},{"functionName":"throwUnknownModuleFormat","ranges":[{"startOffset":4615,"endOffset":4853,"count":0}],"isBlockCoverage":false}]},{"scriptId":"403","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28510,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":2814,"endOffset":2906,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":2968,"endOffset":3051,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3053,"endOffset":9116,"count":85}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":3194,"endOffset":3371,"count":85},{"startOffset":3308,"endOffset":3312,"count":0}],"isBlockCoverage":true},{"functionName":"getAsyncId","ranges":[{"startOffset":3375,"endOffset":3432,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":3436,"endOffset":3472,"count":170}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":3476,"endOffset":3558,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":3562,"endOffset":3618,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":3622,"endOffset":3686,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":3690,"endOffset":3742,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":3746,"endOffset":3790,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":3794,"endOffset":3903,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":3907,"endOffset":3988,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":3992,"endOffset":4059,"count":0}],"isBlockCoverage":false},{"functionName":"readLines","ranges":[{"startOffset":4063,"endOffset":4206,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":4210,"endOffset":4270,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":4274,"endOffset":4338,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":4342,"endOffset":4416,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":4420,"endOffset":4531,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":4535,"endOffset":4618,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":4622,"endOffset":4703,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":4715,"endOffset":5507,"count":85},{"startOffset":4749,"endOffset":4787,"count":0},{"startOffset":4818,"endOffset":4859,"count":0},{"startOffset":5085,"endOffset":5446,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5027,"endOffset":5069,"count":85}],"isBlockCoverage":true},{"functionName":"<computed>.SafePromisePrototypeFinally.<computed>","ranges":[{"startOffset":5170,"endOffset":5282,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5285,"endOffset":5430,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5512,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"readableWebStream","ranges":[{"startOffset":5766,"endOffset":7452,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":7750,"endOffset":7901,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":8150,"endOffset":8304,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8308,"endOffset":8708,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8712,"endOffset":8765,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8769,"endOffset":8856,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8860,"endOffset":8893,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8897,"endOffset":9114,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":9118,"endOffset":9489,"count":85}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9229,"endOffset":9288,"count":85}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9275,"endOffset":9287,"count":85}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9294,"endOffset":9481,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":9491,"endOffset":9951,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":9953,"endOffset":10073,"count":340},{"startOffset":9997,"endOffset":10006,"count":0},{"startOffset":10012,"endOffset":10071,"count":0}],"isBlockCoverage":true},{"functionName":"writeFileHandle","ranges":[{"startOffset":10075,"endOffset":11217,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":11219,"endOffset":13358,"count":85},{"startOffset":11371,"endOffset":11401,"count":2},{"startOffset":11681,"endOffset":11719,"count":2},{"startOffset":11720,"endOffset":11726,"count":83},{"startOffset":11752,"endOffset":11800,"count":0},{"startOffset":11833,"endOffset":11871,"count":0},{"startOffset":12113,"endOffset":12185,"count":0},{"startOffset":12329,"endOffset":12333,"count":0},{"startOffset":12418,"endOffset":12474,"count":0},{"startOffset":12568,"endOffset":12579,"count":0},{"startOffset":12636,"endOffset":12696,"count":0},{"startOffset":12719,"endOffset":12901,"count":83},{"startOffset":12744,"endOffset":12758,"count":0},{"startOffset":12760,"endOffset":12870,"count":0},{"startOffset":12901,"endOffset":12976,"count":2},{"startOffset":12976,"endOffset":13352,"count":0}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":13511,"endOffset":13732,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":13734,"endOffset":14003,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":14005,"endOffset":14363,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":14483,"endOffset":14808,"count":85}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":14810,"endOffset":16032,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":16034,"endOffset":16354,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":16356,"endOffset":17563,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":17565,"endOffset":17973,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":17975,"endOffset":18281,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":18283,"endOffset":18416,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":18418,"endOffset":18577,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":18579,"endOffset":18783,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":18785,"endOffset":19156,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":19158,"endOffset":19247,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":19249,"endOffset":19330,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":19332,"endOffset":19809,"count":0}],"isBlockCoverage":false},{"functionName":"readdirRecursive","ranges":[{"startOffset":19811,"endOffset":21485,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":21487,"endOffset":21914,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":21916,"endOffset":22155,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":22157,"endOffset":22570,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":22572,"endOffset":22750,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":22752,"endOffset":23022,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":23024,"endOffset":23291,"count":0}],"isBlockCoverage":false},{"functionName":"statfs","ranges":[{"startOffset":23293,"endOffset":23567,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":23569,"endOffset":23892,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":23894,"endOffset":24032,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":24034,"endOffset":24167,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":24169,"endOffset":24355,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":24357,"endOffset":24585,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":24587,"endOffset":24863,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":24865,"endOffset":25062,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":25064,"endOffset":25337,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":25339,"endOffset":25611,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":25613,"endOffset":25812,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":25814,"endOffset":26091,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":26093,"endOffset":26266,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":26268,"endOffset":26647,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":26649,"endOffset":27333,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":27335,"endOffset":27449,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":27451,"endOffset":27692,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":27694,"endOffset":28038,"count":85},{"startOffset":27811,"endOffset":27817,"count":0},{"startOffset":27858,"endOffset":27895,"count":0}],"isBlockCoverage":true}]},{"scriptId":"404","url":"node:internal/fs/rimraf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7454,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1175,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"_rimraf","ranges":[{"startOffset":1638,"endOffset":2496,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2499,"endOffset":2934,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":2937,"endOffset":3235,"count":0}],"isBlockCoverage":false},{"functionName":"_rmchildren","ranges":[{"startOffset":3238,"endOffset":3925,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafPromises","ranges":[{"startOffset":3928,"endOffset":4126,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":4129,"endOffset":4812,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":4815,"endOffset":5444,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5447,"endOffset":6944,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":6947,"endOffset":7394,"count":0}],"isBlockCoverage":false}]},{"scriptId":"405","url":"node:internal/fs/dir","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8203,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1177,"endOffset":1993,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":1997,"endOffset":2040,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2044,"endOffset":2111,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2115,"endOffset":3841,"count":0}],"isBlockCoverage":false},{"functionName":"processReadResult","ranges":[{"startOffset":3845,"endOffset":4160,"count":0}],"isBlockCoverage":false},{"functionName":"readSyncRecursive","ranges":[{"startOffset":4164,"endOffset":4704,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":4708,"endOffset":5684,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5688,"endOffset":6377,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":6381,"endOffset":6758,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":6762,"endOffset":7025,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":7205,"endOffset":7785,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":7787,"endOffset":8146,"count":0}],"isBlockCoverage":false}]},{"scriptId":"406","url":"node:string_decoder","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5213,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":2129,"endOffset":2391,"count":4},{"startOffset":2241,"endOffset":2374,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2705,"endOffset":2904,"count":4}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":3227,"endOffset":3612,"count":2},{"startOffset":3284,"endOffset":3295,"count":0},{"startOffset":3331,"endOffset":3482,"count":0},{"startOffset":3512,"endOffset":3566,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":3889,"endOffset":4080,"count":2},{"startOffset":3954,"endOffset":3976,"count":0},{"startOffset":4029,"endOffset":4064,"count":0}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":4291,"endOffset":4448,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4586,"endOffset":4799,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4891,"endOffset":4954,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5047,"endOffset":5162,"count":0}],"isBlockCoverage":false}]},{"scriptId":"407","url":"node:internal/fs/watchers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11242,"count":1}],"isBlockCoverage":false},{"functionName":"emitStop","ranges":[{"startOffset":1420,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher","ranges":[{"startOffset":1470,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"onchange","ranges":[{"startOffset":1820,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":2565,"endOffset":3399,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.start","ranges":[{"startOffset":3620,"endOffset":3628,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.stop","ranges":[{"startOffset":3874,"endOffset":4155,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.<computed>","ranges":[{"startOffset":4244,"endOffset":4671,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.ref","ranges":[{"startOffset":4702,"endOffset":4984,"count":0}],"isBlockCoverage":false},{"functionName":"StatWatcher.unref","ranges":[{"startOffset":5017,"endOffset":5267,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":5271,"endOffset":6239,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.<computed>","ranges":[{"startOffset":6776,"endOffset":7686,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.start","ranges":[{"startOffset":7903,"endOffset":7911,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.close","ranges":[{"startOffset":8034,"endOffset":8371,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.ref","ranges":[{"startOffset":8400,"endOffset":8469,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher.unref","ranges":[{"startOffset":8500,"endOffset":8571,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":8574,"endOffset":8626,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8850,"endOffset":8886,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8890,"endOffset":8931,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":8967,"endOffset":11110,"count":0}],"isBlockCoverage":false}]},{"scriptId":"408","url":"node:internal/streams/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8416,"count":1}],"isBlockCoverage":false},{"functionName":"isReadableNodeStream","ranges":[{"startOffset":774,"endOffset":1191,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableNodeStream","ranges":[{"startOffset":1193,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"isDuplexNodeStream","ranges":[{"startOffset":1415,"endOffset":1614,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeStream","ranges":[{"startOffset":1616,"endOffset":1887,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableStream","ranges":[{"startOffset":1889,"endOffset":2103,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableStream","ranges":[{"startOffset":2105,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"isTransformStream","ranges":[{"startOffset":2275,"endOffset":2442,"count":0}],"isBlockCoverage":false},{"functionName":"isWebStream","ranges":[{"startOffset":2444,"endOffset":2556,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":2558,"endOffset":2888,"count":0}],"isBlockCoverage":false},{"functionName":"isDestroyed","ranges":[{"startOffset":2890,"endOffset":3153,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableEnded","ranges":[{"startOffset":3177,"endOffset":3468,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableFinished","ranges":[{"startOffset":3496,"endOffset":3893,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableEnded","ranges":[{"startOffset":3922,"endOffset":4223,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableFinished","ranges":[{"startOffset":4248,"endOffset":4596,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":4598,"endOffset":4898,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":4900,"endOffset":5197,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":5199,"endOffset":5513,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableErrored","ranges":[{"startOffset":5515,"endOffset":5727,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableErrored","ranges":[{"startOffset":5729,"endOffset":5941,"count":0}],"isBlockCoverage":false},{"functionName":"isClosed","ranges":[{"startOffset":5943,"endOffset":6448,"count":0}],"isBlockCoverage":false},{"functionName":"isOutgoingMessage","ranges":[{"startOffset":6450,"endOffset":6702,"count":0}],"isBlockCoverage":false},{"functionName":"isServerResponse","ranges":[{"startOffset":6704,"endOffset":6831,"count":0}],"isBlockCoverage":false},{"functionName":"isServerRequest","ranges":[{"startOffset":6833,"endOffset":7021,"count":0}],"isBlockCoverage":false},{"functionName":"willEmitClose","ranges":[{"startOffset":7023,"endOffset":7361,"count":0}],"isBlockCoverage":false},{"functionName":"isDisturbed","ranges":[{"startOffset":7363,"endOffset":7508,"count":0}],"isBlockCoverage":false},{"functionName":"isErrored","ranges":[{"startOffset":7510,"endOffset":7815,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39788,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3779,"endOffset":9423,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9664,"endOffset":9764,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":9767,"endOffset":9879,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":9988,"endOffset":10039,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":10133,"endOffset":10176,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10180,"endOffset":10371,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10510,"endOffset":10764,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":10768,"endOffset":11072,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11076,"endOffset":11318,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11322,"endOffset":11409,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11413,"endOffset":11581,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11585,"endOffset":11782,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11786,"endOffset":12964,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12968,"endOffset":13973,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14057,"endOffset":14228,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14309,"endOffset":14440,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":14532,"endOffset":14668,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":14939,"endOffset":15098,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15102,"endOffset":16836,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16840,"endOffset":17509,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17513,"endOffset":17912,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17916,"endOffset":20124,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20128,"endOffset":20589,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20593,"endOffset":20851,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20855,"endOffset":21337,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21341,"endOffset":21822,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21826,"endOffset":22586,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22590,"endOffset":23017,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23021,"endOffset":23299,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23303,"endOffset":23561,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23565,"endOffset":23825,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23829,"endOffset":23984,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23988,"endOffset":24663,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":24667,"endOffset":24816,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24820,"endOffset":24974,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24978,"endOffset":25165,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25169,"endOffset":25477,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25481,"endOffset":25789,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26224,"endOffset":26858,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26862,"endOffset":27570,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27645,"endOffset":28585,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":28762,"endOffset":28931,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29050,"endOffset":29607,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29644,"endOffset":37894,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38202,"endOffset":39220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"410","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12396,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":385,"endOffset":579,"count":19},{"startOffset":488,"endOffset":563,"count":34},{"startOffset":544,"endOffset":559,"count":15}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":958,"endOffset":1220,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1222,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2213,"endOffset":11840,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":11870,"endOffset":12283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"411","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2754,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":460,"endOffset":1146,"count":15},{"startOffset":534,"endOffset":583,"count":0},{"startOffset":616,"endOffset":658,"count":0},{"startOffset":682,"endOffset":722,"count":0},{"startOffset":745,"endOffset":785,"count":0},{"startOffset":834,"endOffset":858,"count":0},{"startOffset":861,"endOffset":957,"count":0},{"startOffset":988,"endOffset":1023,"count":0},{"startOffset":1079,"endOffset":1104,"count":0}],"isBlockCoverage":true},{"functionName":"moveCursor","ranges":[{"startOffset":1210,"endOffset":1722,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1869,"endOffset":2272,"count":7},{"startOffset":1943,"endOffset":1992,"count":0},{"startOffset":2041,"endOffset":2137,"count":0},{"startOffset":2166,"endOffset":2189,"count":0},{"startOffset":2218,"endOffset":2230,"count":0}],"isBlockCoverage":true},{"functionName":"clearScreenDown","ranges":[{"startOffset":2349,"endOffset":2672,"count":0}],"isBlockCoverage":false}]},{"scriptId":"412","url":"node:internal/encoding","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16816,"count":1}],"isBlockCoverage":false},{"functionName":"lazyBuffer","ranges":[{"startOffset":1199,"endOffset":1308,"count":0}],"isBlockCoverage":false},{"functionName":"validateEncoder","ranges":[{"startOffset":1310,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"validateDecoder","ranges":[{"startOffset":1437,"endOffset":1562,"count":83},{"startOffset":1518,"endOffset":1560,"count":0}],"isBlockCoverage":true},{"functionName":"trimAsciiWhitespace","ranges":[{"startOffset":8308,"endOffset":8806,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":8808,"endOffset":8987,"count":2},{"startOffset":8919,"endOffset":8986,"count":0}],"isBlockCoverage":true},{"functionName":"TextEncoder","ranges":[{"startOffset":9058,"endOffset":9104,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":9108,"endOffset":9175,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":9179,"endOffset":9271,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInto","ranges":[{"startOffset":9275,"endOffset":9585,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9589,"endOffset":9985,"count":0}],"isBlockCoverage":false},{"functionName":"makeTextDecoderICU","ranges":[{"startOffset":10357,"endOffset":12323,"count":1}],"isBlockCoverage":true},{"functionName":"TextDecoder","ranges":[{"startOffset":10495,"endOffset":11432,"count":2},{"startOffset":10805,"endOffset":10852,"count":0},{"startOffset":10936,"endOffset":10959,"count":0},{"startOffset":11000,"endOffset":11028,"count":0},{"startOffset":11383,"endOffset":11426,"count":0}],"isBlockCoverage":true},{"functionName":"#prepareConverter","ranges":[{"startOffset":11438,"endOffset":11703,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":11709,"endOffset":12294,"count":83},{"startOffset":11944,"endOffset":12293,"count":0}],"isBlockCoverage":true},{"functionName":"makeTextDecoderJS","ranges":[{"startOffset":12325,"endOffset":15178,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":15275,"endOffset":15350,"count":0}],"isBlockCoverage":false},{"functionName":"get fatal","ranges":[{"startOffset":15355,"endOffset":15476,"count":0}],"isBlockCoverage":false},{"functionName":"get ignoreBOM","ranges":[{"startOffset":15481,"endOffset":15630,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectGetOwnPropertyDescriptors","ranges":[{"startOffset":15635,"endOffset":16217,"count":0}],"isBlockCoverage":false}]},{"scriptId":"413","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-cli@0.0.11/node_modules/@vscode/test-cli/out/bin.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4409,"count":1}],"isBlockCoverage":true},{"functionName":"main","ranges":[{"startOffset":602,"endOffset":1712,"count":1},{"startOffset":723,"endOffset":798,"count":0},{"startOffset":878,"endOffset":886,"count":0},{"startOffset":899,"endOffset":1245,"count":0},{"startOffset":1308,"endOffset":1373,"count":0},{"startOffset":1468,"endOffset":1662,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":916,"endOffset":1244,"count":0}],"isBlockCoverage":false},{"functionName":"prepareConfigs","ranges":[{"startOffset":1713,"endOffset":2139,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1818,"endOffset":2134,"count":1},{"startOffset":2023,"endOffset":2124,"count":0}],"isBlockCoverage":true},{"functionName":"watchConfigs","ranges":[{"startOffset":2172,"endOffset":3614,"count":0}],"isBlockCoverage":false},{"functionName":"runPreparedConfigs","ranges":[{"startOffset":3615,"endOffset":4031,"count":1},{"startOffset":3704,"endOffset":3732,"count":0},{"startOffset":3786,"endOffset":3797,"count":0},{"startOffset":3926,"endOffset":3939,"count":0},{"startOffset":3941,"endOffset":3977,"count":0},{"startOffset":4002,"endOffset":4009,"count":0}],"isBlockCoverage":true},{"functionName":"runConfigs","ranges":[{"startOffset":4075,"endOffset":4408,"count":1},{"startOffset":4222,"endOffset":4357,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4250,"endOffset":4331,"count":0}],"isBlockCoverage":false}]},{"scriptId":"414","url":"node:internal/deps/cjs-module-lexer/dist/lexer","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33616,"count":1}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":116,"endOffset":813,"count":11},{"startOffset":146,"endOffset":181,"count":0},{"startOffset":222,"endOffset":237,"count":0},{"startOffset":273,"endOffset":308,"count":1},{"startOffset":332,"endOffset":334,"count":0},{"startOffset":406,"endOffset":553,"count":0},{"startOffset":601,"endOffset":650,"count":3},{"startOffset":663,"endOffset":696,"count":0},{"startOffset":709,"endOffset":773,"count":34}],"isBlockCoverage":true},{"functionName":"B","ranges":[{"startOffset":813,"endOffset":1040,"count":37},{"startOffset":840,"endOffset":852,"count":21},{"startOffset":853,"endOffset":862,"count":21},{"startOffset":862,"endOffset":913,"count":16},{"startOffset":913,"endOffset":1023,"count":274},{"startOffset":958,"endOffset":1022,"count":0},{"startOffset":1023,"endOffset":1032,"count":16},{"startOffset":1032,"endOffset":1039,"count":0}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":1040,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":1141,"endOffset":1215,"count":11},{"startOffset":1192,"endOffset":1214,"count":62999}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1221,"endOffset":33616,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1251,"endOffset":33611,"count":1},{"startOffset":33455,"endOffset":33524,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33505,"endOffset":33523,"count":0}],"isBlockCoverage":false}]},{"scriptId":"415","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-cli@0.0.11/node_modules/@vscode/test-cli/out/cli/platform/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":281,"count":1}],"isBlockCoverage":true}]},{"scriptId":"417","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-cli@0.0.11/node_modules/@vscode/test-cli/out/cli/coverage.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3876,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":738,"endOffset":3875,"count":0}],"isBlockCoverage":true}]},{"scriptId":"418","url":"node:crypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8879,"count":1}],"isBlockCoverage":false},{"functionName":"lazyWebCrypto","ranges":[{"startOffset":3092,"endOffset":3194,"count":6}],"isBlockCoverage":true},{"functionName":"createHash","ranges":[{"startOffset":3336,"endOffset":3418,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3420,"endOffset":3520,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3522,"endOffset":3624,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipher","ranges":[{"startOffset":3626,"endOffset":3730,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3732,"endOffset":3838,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":3840,"endOffset":3996,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":3998,"endOffset":4080,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":4082,"endOffset":4138,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":4140,"endOffset":4222,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":4224,"endOffset":4306,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4308,"endOffset":4394,"count":0}],"isBlockCoverage":false},{"functionName":"getFips","ranges":[{"startOffset":5437,"endOffset":5522,"count":0}],"isBlockCoverage":false},{"functionName":"setFips","ranges":[{"startOffset":5524,"endOffset":5689,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":5691,"endOffset":5782,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5860,"endOffset":6114,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":6118,"endOffset":6307,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomBytesAlias","ranges":[{"startOffset":6356,"endOffset":7189,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6454,"endOffset":6944,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6950,"endOffset":7181,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8252,"endOffset":8292,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8404,"endOffset":8451,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8577,"endOffset":8598,"count":3}],"isBlockCoverage":true}]},{"scriptId":"419","url":"node:internal/crypto/random","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16342,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":1282,"endOffset":1648,"count":0}],"isBlockCoverage":false},{"functionName":"assertSize","ranges":[{"startOffset":1650,"endOffset":2111,"count":0}],"isBlockCoverage":false},{"functionName":"randomBytes","ranges":[{"startOffset":2113,"endOffset":2656,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":2658,"endOffset":3326,"count":0}],"isBlockCoverage":false},{"functionName":"randomFill","ranges":[{"startOffset":3328,"endOffset":4374,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":4924,"endOffset":7164,"count":0}],"isBlockCoverage":false},{"functionName":"asyncRefillRandomIntCache","ranges":[{"startOffset":7166,"endOffset":8042,"count":0}],"isBlockCoverage":false},{"functionName":"onJobDone","ranges":[{"startOffset":8045,"endOffset":8207,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":8439,"endOffset":9129,"count":0}],"isBlockCoverage":false},{"functionName":"getHexBytes","ranges":[{"startOffset":9494,"endOffset":9793,"count":0}],"isBlockCoverage":false},{"functionName":"serializeUUID","ranges":[{"startOffset":9795,"endOffset":10521,"count":0}],"isBlockCoverage":false},{"functionName":"getBufferedUUID","ranges":[{"startOffset":10523,"endOffset":10826,"count":0}],"isBlockCoverage":false},{"functionName":"getUnbufferedUUID","ranges":[{"startOffset":10828,"endOffset":11066,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":11068,"endOffset":11388,"count":0}],"isBlockCoverage":false},{"functionName":"createRandomPrimeJob","ranges":[{"startOffset":11390,"endOffset":12623,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrime","ranges":[{"startOffset":12625,"endOffset":13081,"count":0}],"isBlockCoverage":false},{"functionName":"generatePrimeSync","ranges":[{"startOffset":13083,"endOffset":13341,"count":0}],"isBlockCoverage":false},{"functionName":"numberToHexCharCode","ranges":[{"startOffset":13615,"endOffset":13659,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBufferToUnsignedBigInt","ranges":[{"startOffset":13734,"endOffset":14161,"count":0}],"isBlockCoverage":false},{"functionName":"unsignedBigIntToBuffer","ranges":[{"startOffset":14163,"endOffset":14460,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrime","ranges":[{"startOffset":14462,"endOffset":15355,"count":0}],"isBlockCoverage":false},{"functionName":"checkPrimeSync","ranges":[{"startOffset":15357,"endOffset":16155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"420","url":"node:internal/crypto/pbkdf2","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3295,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":494,"endOffset":1304,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1306,"endOffset":1820,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1822,"endOffset":2293,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2DeriveBits","ranges":[{"startOffset":2336,"endOffset":3227,"count":0}],"isBlockCoverage":false}]},{"scriptId":"421","url":"node:internal/crypto/util","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15174,"count":1}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":1590,"endOffset":1651,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultEncoding","ranges":[{"startOffset":1653,"endOffset":1712,"count":0}],"isBlockCoverage":false},{"functionName":"toBuf","ranges":[{"startOffset":1887,"endOffset":2066,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2100,"endOffset":2143,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2177,"endOffset":2219,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2253,"endOffset":2295,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":2299,"endOffset":2706,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2753,"endOffset":3217,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBufferLength","ranges":[{"startOffset":6661,"endOffset":6874,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlgorithm","ranges":[{"startOffset":7100,"endOffset":9535,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayBuffer","ranges":[{"startOffset":9537,"endOffset":9676,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteOffset","ranges":[{"startOffset":9678,"endOffset":9829,"count":0}],"isBlockCoverage":false},{"functionName":"getDataViewOrTypedArrayByteLength","ranges":[{"startOffset":9831,"endOffset":9982,"count":0}],"isBlockCoverage":false},{"functionName":"hasAnyNotIn","ranges":[{"startOffset":9984,"endOffset":10123,"count":0}],"isBlockCoverage":false},{"functionName":"validateBitLength","ranges":[{"startOffset":10125,"endOffset":10467,"count":0}],"isBlockCoverage":false},{"functionName":"validateByteLength","ranges":[{"startOffset":10469,"endOffset":10665,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10710,"endOffset":10979,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":10983,"endOffset":11215,"count":0}],"isBlockCoverage":false},{"functionName":"jobPromise","ranges":[{"startOffset":11217,"endOffset":11487,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedInt","ranges":[{"startOffset":12023,"endOffset":12303,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntArrayToUnsignedBigInt","ranges":[{"startOffset":12305,"endOffset":12541,"count":0}],"isBlockCoverage":false},{"functionName":"getStringOption","ranges":[{"startOffset":12543,"endOffset":12708,"count":0}],"isBlockCoverage":false},{"functionName":"getUsagesUnion","ranges":[{"startOffset":12710,"endOffset":12922,"count":0}],"isBlockCoverage":false},{"functionName":"getBlockSize","ranges":[{"startOffset":12924,"endOffset":13105,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOps","ranges":[{"startOffset":13244,"endOffset":14210,"count":0}],"isBlockCoverage":false},{"functionName":"secureHeapUsed","ranges":[{"startOffset":14212,"endOffset":14595,"count":0}],"isBlockCoverage":false}]},{"scriptId":"422","url":"node:internal/crypto/hashnames","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2520,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeHashName","ranges":[{"startOffset":1890,"endOffset":2133,"count":0}],"isBlockCoverage":false}]},{"scriptId":"423","url":"node:internal/crypto/scrypt","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3608,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":648,"endOffset":1460,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1462,"endOffset":1977,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1979,"endOffset":3560,"count":0}],"isBlockCoverage":false}]},{"scriptId":"424","url":"node:internal/crypto/hkdf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3304,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":816,"endOffset":1270,"count":0}],"isBlockCoverage":false},{"functionName":"prepareKey","ranges":[{"startOffset":1274,"endOffset":1702,"count":0}],"isBlockCoverage":false},{"functionName":"hkdf","ranges":[{"startOffset":1704,"endOffset":2170,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfSync","ranges":[{"startOffset":2172,"endOffset":2510,"count":0}],"isBlockCoverage":false},{"functionName":"hkdfDeriveBits","ranges":[{"startOffset":2549,"endOffset":3242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"425","url":"node:internal/crypto/keys","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21401,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2331,"endOffset":6452,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":2441,"endOffset":2983,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":2989,"endOffset":3036,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":3049,"endOffset":3190,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":3196,"endOffset":3480,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":3698,"endOffset":3756,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":3762,"endOffset":3842,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":3848,"endOffset":4196,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeKeyDetails","ranges":[{"startOffset":4329,"endOffset":4598,"count":0}],"isBlockCoverage":false},{"functionName":"AsymmetricKeyObject","ranges":[{"startOffset":4707,"endOffset":4767,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":4773,"endOffset":4925,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyDetails","ranges":[{"startOffset":4931,"endOffset":5308,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":5372,"endOffset":5430,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5436,"endOffset":5727,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":5792,"endOffset":5851,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":5857,"endOffset":6371,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":6456,"endOffset":6841,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":6843,"endOffset":7695,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":7697,"endOffset":7818,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":7820,"endOffset":8520,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":8522,"endOffset":8659,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":8661,"endOffset":10019,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":10218,"endOffset":10354,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":10554,"endOffset":10670,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":10672,"endOffset":11250,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyTypes","ranges":[{"startOffset":11252,"endOffset":11757,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandleFromJwk","ranges":[{"startOffset":11759,"endOffset":14308,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":14310,"endOffset":15853,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":15855,"endOffset":15943,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":15945,"endOffset":16040,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":16042,"endOffset":16740,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":16742,"endOffset":16946,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":16948,"endOffset":17285,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":17287,"endOffset":17628,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":17630,"endOffset":17712,"count":0}],"isBlockCoverage":false},{"functionName":"CryptoKey","ranges":[{"startOffset":18135,"endOffset":18195,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18199,"endOffset":18548,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":18552,"endOffset":18687,"count":0}],"isBlockCoverage":false},{"functionName":"get extractable","ranges":[{"startOffset":18691,"endOffset":18830,"count":0}],"isBlockCoverage":false},{"functionName":"get algorithm","ranges":[{"startOffset":18834,"endOffset":18969,"count":0}],"isBlockCoverage":false},{"functionName":"get usages","ranges":[{"startOffset":18973,"endOffset":19116,"count":0}],"isBlockCoverage":false},{"functionName":"InternalCryptoKey","ranges":[{"startOffset":19694,"endOffset":20173,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20177,"endOffset":20529,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20533,"endOffset":20737,"count":0}],"isBlockCoverage":false},{"functionName":"isCryptoKey","ranges":[{"startOffset":20866,"endOffset":20950,"count":0}],"isBlockCoverage":false}]},{"scriptId":"426","url":"node:internal/crypto/keygen","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10888,"count":1}],"isBlockCoverage":false},{"functionName":"isJwk","ranges":[{"startOffset":1240,"endOffset":1310,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":1312,"endOffset":1466,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1468,"endOffset":2104,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":2250,"endOffset":2367,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2369,"endOffset":2747,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2749,"endOffset":3999,"count":0}],"isBlockCoverage":false},{"functionName":"createJob","ranges":[{"startOffset":4001,"endOffset":9408,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyJob","ranges":[{"startOffset":9439,"endOffset":9976,"count":0}],"isBlockCoverage":false},{"functionName":"handleGenerateKeyError","ranges":[{"startOffset":9978,"endOffset":10180,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":10182,"endOffset":10652,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeySync","ranges":[{"startOffset":10654,"endOffset":10788,"count":0}],"isBlockCoverage":false}]},{"scriptId":"427","url":"node:internal/crypto/diffiehellman","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10617,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":1254,"endOffset":3182,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":3185,"endOffset":3511,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":3622,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3898,"endOffset":4257,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":4356,"endOffset":4512,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":4623,"endOffset":4795,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4906,"endOffset":5066,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":5180,"endOffset":5342,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":5384,"endOffset":5573,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":5617,"endOffset":5808,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5812,"endOffset":5966,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":6277,"endOffset":6399,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":6432,"endOffset":6630,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":6651,"endOffset":7001,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":7004,"endOffset":7139,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":7141,"endOffset":7464,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":7538,"endOffset":8606,"count":0}],"isBlockCoverage":false},{"functionName":"ecdhDeriveBits","ranges":[{"startOffset":8725,"endOffset":10511,"count":0}],"isBlockCoverage":false}]},{"scriptId":"428","url":"node:internal/crypto/cipher","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10414,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1255,"endOffset":2003,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1323,"endOffset":2000,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2504,"endOffset":2870,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2872,"endOffset":3106,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":3108,"endOffset":3527,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3529,"endOffset":3764,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3766,"endOffset":4105,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":4348,"endOffset":4549,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4692,"endOffset":4808,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4837,"endOffset":4975,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":5004,"endOffset":5654,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5683,"endOffset":5986,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":6024,"endOffset":6171,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":6204,"endOffset":6364,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":6368,"endOffset":6580,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6608,"endOffset":6950,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":7198,"endOffset":7408,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":7410,"endOffset":8001,"count":3},{"startOffset":7806,"endOffset":7879,"count":1},{"startOffset":7879,"endOffset":7941,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":8402,"endOffset":8610,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":9015,"endOffset":9232,"count":0}],"isBlockCoverage":false},{"functionName":"getCipherInfo","ranges":[{"startOffset":9394,"endOffset":10255,"count":0}],"isBlockCoverage":false}]},{"scriptId":"429","url":"node:internal/streams/lazy_transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1588,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":469,"endOffset":531,"count":0}],"isBlockCoverage":false},{"functionName":"makeGetter","ranges":[{"startOffset":663,"endOffset":971,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":700,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":973,"endOffset":1192,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1010,"endOffset":1189,"count":0}],"isBlockCoverage":false}]},{"scriptId":"430","url":"node:stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4784,"count":1}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2402,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":2983,"endOffset":3117,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4105,"endOffset":4137,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4235,"endOffset":4276,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4369,"endOffset":4410,"count":0}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":4575,"endOffset":4782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"431","url":"node:internal/streams/operators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10772,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":1019,"endOffset":1599,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":1601,"endOffset":4704,"count":0}],"isBlockCoverage":false},{"functionName":"asIndexedPairs","ranges":[{"startOffset":4706,"endOffset":5179,"count":0}],"isBlockCoverage":false},{"functionName":"some","ranges":[{"startOffset":5181,"endOffset":5329,"count":0}],"isBlockCoverage":false},{"functionName":"every","ranges":[{"startOffset":5331,"endOffset":5659,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":5661,"endOffset":5803,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":5805,"endOffset":6175,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":6177,"endOffset":6504,"count":0}],"isBlockCoverage":false},{"functionName":"ReduceAwareErrMissingArgs","ranges":[{"startOffset":6720,"endOffset":6834,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":6838,"endOffset":8280,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":8282,"endOffset":8711,"count":0}],"isBlockCoverage":false},{"functionName":"flatMap","ranges":[{"startOffset":8713,"endOffset":8907,"count":0}],"isBlockCoverage":false},{"functionName":"toIntegerOrInfinity","ranges":[{"startOffset":8909,"endOffset":9231,"count":0}],"isBlockCoverage":false},{"functionName":"drop","ranges":[{"startOffset":9233,"endOffset":9781,"count":0}],"isBlockCoverage":false},{"functionName":"take","ranges":[{"startOffset":9783,"endOffset":10453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"432","url":"node:internal/abort_controller","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12781,"count":1}],"isBlockCoverage":false},{"functionName":"lazyMessageChannel","ranges":[{"startOffset":1574,"endOffset":1707,"count":0}],"isBlockCoverage":false},{"functionName":"lazyMakeTransferable","ranges":[{"startOffset":1709,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"customInspect","ranges":[{"startOffset":2337,"endOffset":2596,"count":0}],"isBlockCoverage":false},{"functionName":"validateThisAbortSignal","ranges":[{"startOffset":2598,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"setWeakAbortSignalTimeout","ranges":[{"startOffset":3305,"endOffset":3705,"count":0}],"isBlockCoverage":false},{"functionName":"AbortSignal","ranges":[{"startOffset":3749,"endOffset":3809,"count":0}],"isBlockCoverage":false},{"functionName":"get aborted","ranges":[{"startOffset":3846,"endOffset":3929,"count":0}],"isBlockCoverage":false},{"functionName":"get reason","ranges":[{"startOffset":3962,"endOffset":4041,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfAborted","ranges":[{"startOffset":4045,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4165,"endOffset":4294,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":4372,"endOffset":4516,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":4594,"endOffset":4856,"count":0}],"isBlockCoverage":false},{"functionName":"any","ranges":[{"startOffset":4943,"endOffset":6278,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6282,"endOffset":7050,"count":1},{"startOffset":6511,"endOffset":6540,"count":0},{"startOffset":6586,"endOffset":6613,"count":0},{"startOffset":6614,"endOffset":6638,"count":0},{"startOffset":6639,"endOffset":6655,"count":0},{"startOffset":6656,"endOffset":6677,"count":0},{"startOffset":6679,"endOffset":7046,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7054,"endOffset":7408,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7412,"endOffset":8019,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8023,"endOffset":8275,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8279,"endOffset":8727,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal","ranges":[{"startOffset":8731,"endOffset":8815,"count":0}],"isBlockCoverage":false},{"functionName":"ClonedAbortSignal.<computed>","ranges":[{"startOffset":8860,"endOffset":8869,"count":0}],"isBlockCoverage":false},{"functionName":"createAbortSignal","ranges":[{"startOffset":9347,"endOffset":9760,"count":1},{"startOffset":9718,"endOffset":9748,"count":0}],"isBlockCoverage":true},{"functionName":"abortSignal","ranges":[{"startOffset":9762,"endOffset":10124,"count":0}],"isBlockCoverage":false},{"functionName":"validateAbortController","ranges":[{"startOffset":10301,"endOffset":10429,"count":1},{"startOffset":10381,"endOffset":10427,"count":0}],"isBlockCoverage":true},{"functionName":"AbortController","ranges":[{"startOffset":10457,"endOffset":10517,"count":1}],"isBlockCoverage":true},{"functionName":"get signal","ranges":[{"startOffset":10558,"endOffset":10637,"count":1}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":10680,"endOffset":10837,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10841,"endOffset":10968,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10979,"endOffset":11147,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortSignal","ranges":[{"startOffset":11297,"endOffset":11489,"count":0}],"isBlockCoverage":false},{"functionName":"transferableAbortController","ranges":[{"startOffset":11561,"endOffset":11650,"count":0}],"isBlockCoverage":false},{"functionName":"aborted","ranges":[{"startOffset":11744,"endOffset":12332,"count":0}],"isBlockCoverage":false}]},{"scriptId":"433","url":"node:internal/streams/end-of-stream","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8360,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":891,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":1000,"endOffset":1008,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1011,"endOffset":6953,"count":0}],"isBlockCoverage":false},{"functionName":"eosWeb","ranges":[{"startOffset":6955,"endOffset":7840,"count":0}],"isBlockCoverage":false},{"functionName":"finished","ranges":[{"startOffset":7842,"endOffset":8300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"434","url":"node:internal/streams/compose","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5451,"count":1}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":543,"endOffset":5449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"435","url":"node:internal/streams/pipeline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12326,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":1058,"endOffset":1487,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1489,"endOffset":1817,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":1819,"endOffset":2105,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":2107,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToNode","ranges":[{"startOffset":2283,"endOffset":3327,"count":0}],"isBlockCoverage":false},{"functionName":"pumpToWeb","ranges":[{"startOffset":3329,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":3929,"endOffset":4022,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineImpl","ranges":[{"startOffset":4024,"endOffset":10476,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":10478,"endOffset":12279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"node:internal/streams/destroy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6743,"count":1}],"isBlockCoverage":false},{"functionName":"checkError","ranges":[{"startOffset":360,"endOffset":671,"count":16},{"startOffset":404,"endOffset":669,"count":0}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":781,"endOffset":1568,"count":9},{"startOffset":950,"endOffset":954,"count":1},{"startOffset":964,"endOffset":975,"count":8},{"startOffset":976,"endOffset":991,"count":8},{"startOffset":993,"endOffset":1070,"count":1},{"startOffset":1029,"endOffset":1048,"count":0},{"startOffset":1070,"endOffset":1255,"count":8},{"startOffset":1255,"endOffset":1284,"count":7},{"startOffset":1284,"endOffset":1403,"count":8},{"startOffset":1403,"endOffset":1510,"count":0},{"startOffset":1510,"endOffset":1567,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1429,"endOffset":1504,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":1570,"endOffset":2184,"count":8},{"startOffset":2145,"endOffset":2182,"count":0}],"isBlockCoverage":true},{"functionName":"onDestroy","ranges":[{"startOffset":1630,"endOffset":2089,"count":8},{"startOffset":1672,"endOffset":1693,"count":0},{"startOffset":1824,"endOffset":1854,"count":7},{"startOffset":1932,"endOffset":1954,"count":0},{"startOffset":1969,"endOffset":2029,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":2186,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":2275,"endOffset":2523,"count":8},{"startOffset":2380,"endOffset":2412,"count":7},{"startOffset":2463,"endOffset":2474,"count":7},{"startOffset":2492,"endOffset":2521,"count":1}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":2525,"endOffset":2800,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":2802,"endOffset":3492,"count":10}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":3494,"endOffset":4413,"count":0}],"isBlockCoverage":false},{"functionName":"construct","ranges":[{"startOffset":4415,"endOffset":4821,"count":21},{"startOffset":4512,"endOffset":4820,"count":0}],"isBlockCoverage":true},{"functionName":"constructNT","ranges":[{"startOffset":4823,"endOffset":5552,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":5554,"endOffset":5650,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseLegacy","ranges":[{"startOffset":5652,"endOffset":5712,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseLegacy","ranges":[{"startOffset":5714,"endOffset":5834,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":5869,"endOffset":6651,"count":0}],"isBlockCoverage":false}]},{"scriptId":"437","url":"node:internal/streams/duplex","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4938,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":1996,"endOffset":2663,"count":10},{"startOffset":2060,"endOffset":2087,"count":0},{"startOffset":2266,"endOffset":2402,"count":2},{"startOffset":2440,"endOffset":2615,"count":0},{"startOffset":2619,"endOffset":2661,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3811,"endOffset":4023,"count":90},{"startOffset":3909,"endOffset":3940,"count":0},{"startOffset":3984,"endOffset":4016,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4029,"endOffset":4290,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":4364,"endOffset":4528,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.fromWeb","ranges":[{"startOffset":4547,"endOffset":4665,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.toWeb","ranges":[{"startOffset":4683,"endOffset":4772,"count":0}],"isBlockCoverage":false},{"functionName":"Duplex.from","ranges":[{"startOffset":4805,"endOffset":4936,"count":0}],"isBlockCoverage":false}]},{"scriptId":"438","url":"node:internal/streams/readable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":43613,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1799,"endOffset":1824,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":2591,"endOffset":2599,"count":0}],"isBlockCoverage":false},{"functionName":"makeBitMapDescriptor","ranges":[{"startOffset":3280,"endOffset":3496,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3355,"endOffset":3397,"count":1032}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3403,"endOffset":3488,"count":389},{"startOffset":3433,"endOffset":3451,"count":253},{"startOffset":3451,"endOffset":3482,"count":136}],"isBlockCoverage":true},{"functionName":"ReadableState","ranges":[{"startOffset":5372,"endOffset":7986,"count":11},{"startOffset":5771,"endOffset":5814,"count":0},{"startOffset":6156,"endOffset":6182,"count":0},{"startOffset":6199,"endOffset":6209,"count":10},{"startOffset":6210,"endOffset":6239,"count":10},{"startOffset":6245,"endOffset":6271,"count":0},{"startOffset":6519,"endOffset":6555,"count":0},{"startOffset":6952,"endOffset":6978,"count":10},{"startOffset":7101,"endOffset":7129,"count":0},{"startOffset":7885,"endOffset":7984,"count":0}],"isBlockCoverage":true},{"functionName":"Readable","ranges":[{"startOffset":7989,"endOffset":8877,"count":11},{"startOffset":8057,"endOffset":8086,"count":0},{"startOffset":8409,"endOffset":8435,"count":0},{"startOffset":8490,"endOffset":8522,"count":0},{"startOffset":8579,"endOffset":8615,"count":0},{"startOffset":8640,"endOffset":8652,"count":0},{"startOffset":8660,"endOffset":8697,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8764,"endOffset":8873,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._destroy","ranges":[{"startOffset":9014,"endOffset":9046,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":9097,"endOffset":9135,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":9179,"endOffset":9435,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":9664,"endOffset":9750,"count":42}],"isBlockCoverage":true},{"functionName":"Readable.unshift","ranges":[{"startOffset":9846,"endOffset":9931,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":9934,"endOffset":12336,"count":42},{"startOffset":10164,"endOffset":10628,"count":0},{"startOffset":10663,"endOffset":10691,"count":37},{"startOffset":10691,"endOffset":10938,"count":5},{"startOffset":10730,"endOffset":10807,"count":0},{"startOffset":10832,"endOffset":10938,"count":0},{"startOffset":10955,"endOffset":10993,"count":0},{"startOffset":11019,"endOffset":11085,"count":5},{"startOffset":11085,"endOffset":12052,"count":37},{"startOffset":11185,"endOffset":11439,"count":0},{"startOffset":11462,"endOffset":11532,"count":0},{"startOffset":11576,"endOffset":11603,"count":0},{"startOffset":11667,"endOffset":11679,"count":2},{"startOffset":11681,"endOffset":11888,"count":2},{"startOffset":11827,"endOffset":11880,"count":0},{"startOffset":11888,"endOffset":11950,"count":35},{"startOffset":11960,"endOffset":12052,"count":0},{"startOffset":12268,"endOffset":12333,"count":37},{"startOffset":12311,"endOffset":12332,"count":0}],"isBlockCoverage":true},{"functionName":"addChunk","ranges":[{"startOffset":12338,"endOffset":13103,"count":37},{"startOffset":12449,"endOffset":12490,"count":36},{"startOffset":12492,"endOffset":12800,"count":36},{"startOffset":12636,"endOffset":12682,"count":0},{"startOffset":12800,"endOffset":13069,"count":1},{"startOffset":12876,"endOffset":12879,"count":0},{"startOffset":12922,"endOffset":12950,"count":0},{"startOffset":13044,"endOffset":13065,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.isPaused","ranges":[{"startOffset":13135,"endOffset":13247,"count":1}],"isBlockCoverage":true},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":13311,"endOffset":13872,"count":2},{"startOffset":13701,"endOffset":13742,"count":0},{"startOffset":13787,"endOffset":13808,"count":0}],"isBlockCoverage":true},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":13933,"endOffset":14284,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":14397,"endOffset":14808,"count":64},{"startOffset":14445,"endOffset":14483,"count":14},{"startOffset":14468,"endOffset":14482,"count":13},{"startOffset":14489,"endOffset":14498,"count":56},{"startOffset":14498,"endOffset":14544,"count":8},{"startOffset":14544,"endOffset":14553,"count":0},{"startOffset":14553,"endOffset":14726,"count":8},{"startOffset":14662,"endOffset":14697,"count":1},{"startOffset":14697,"endOffset":14726,"count":7},{"startOffset":14726,"endOffset":14801,"count":0},{"startOffset":14802,"endOffset":14805,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.read","ranges":[{"startOffset":14905,"endOffset":19407,"count":64},{"startOffset":15089,"endOffset":15107,"count":14},{"startOffset":15107,"endOffset":15174,"count":50},{"startOffset":15138,"endOffset":15174,"count":0},{"startOffset":15339,"endOffset":15388,"count":0},{"startOffset":15409,"endOffset":15442,"count":14},{"startOffset":15628,"endOffset":15655,"count":50},{"startOffset":15656,"endOffset":15789,"count":38},{"startOffset":15693,"endOffset":15738,"count":37},{"startOffset":15739,"endOffset":15765,"count":1},{"startOffset":15791,"endOffset":15976,"count":0},{"startOffset":16085,"endOffset":16099,"count":63},{"startOffset":16101,"endOffset":16176,"count":12},{"startOffset":16137,"endOffset":16155,"count":11},{"startOffset":16176,"endOffset":17469,"count":52},{"startOffset":17469,"endOffset":17510,"count":1},{"startOffset":17512,"endOffset":17814,"count":52},{"startOffset":17814,"endOffset":17830,"count":51},{"startOffset":17831,"endOffset":17849,"count":43},{"startOffset":17850,"endOffset":17866,"count":43},{"startOffset":17867,"endOffset":17894,"count":43},{"startOffset":17896,"endOffset":17974,"count":9},{"startOffset":17974,"endOffset":18574,"count":43},{"startOffset":18279,"endOffset":18331,"count":0},{"startOffset":18538,"endOffset":18570,"count":0},{"startOffset":18574,"endOffset":18604,"count":52},{"startOffset":18604,"endOffset":18629,"count":1},{"startOffset":18629,"endOffset":18652,"count":51},{"startOffset":18652,"endOffset":18674,"count":52},{"startOffset":18674,"endOffset":18752,"count":51},{"startOffset":18752,"endOffset":18915,"count":1},{"startOffset":18814,"endOffset":18860,"count":0},{"startOffset":18915,"endOffset":19259,"count":52},{"startOffset":19092,"endOffset":19118,"count":51},{"startOffset":19215,"endOffset":19229,"count":8},{"startOffset":19237,"endOffset":19255,"count":1},{"startOffset":19259,"endOffset":19280,"count":52},{"startOffset":19280,"endOffset":19302,"count":1},{"startOffset":19303,"endOffset":19325,"count":1},{"startOffset":19327,"endOffset":19390,"count":1},{"startOffset":19390,"endOffset":19406,"count":52}],"isBlockCoverage":true},{"functionName":"onEofChunk","ranges":[{"startOffset":19410,"endOffset":20230,"count":5},{"startOffset":19489,"endOffset":19496,"count":0},{"startOffset":19518,"endOffset":19692,"count":2},{"startOffset":19573,"endOffset":19588,"count":0},{"startOffset":19590,"endOffset":19688,"count":0},{"startOffset":19734,"endOffset":19936,"count":1},{"startOffset":19936,"endOffset":20228,"count":4}],"isBlockCoverage":true},{"functionName":"emitReadable","ranges":[{"startOffset":20431,"endOffset":20758,"count":1}],"isBlockCoverage":true},{"functionName":"emitReadable_","ranges":[{"startOffset":20760,"endOffset":21414,"count":5},{"startOffset":21333,"endOffset":21352,"count":0},{"startOffset":21353,"endOffset":21395,"count":0}],"isBlockCoverage":true},{"functionName":"maybeReadMore","ranges":[{"startOffset":21764,"endOffset":21941,"count":37},{"startOffset":21829,"endOffset":21849,"count":36},{"startOffset":21851,"endOffset":21939,"count":36}],"isBlockCoverage":true},{"functionName":"maybeReadMore_","ranges":[{"startOffset":21943,"endOffset":23735,"count":36},{"startOffset":23473,"endOffset":23523,"count":0}],"isBlockCoverage":true},{"functionName":"Readable._read","ranges":[{"startOffset":24006,"endOffset":24072,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":24101,"endOffset":28546,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":28549,"endOffset":29194,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":29225,"endOffset":29926,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":30052,"endOffset":30959,"count":49},{"startOffset":30184,"endOffset":30516,"count":8},{"startOffset":30498,"endOffset":30512,"count":7},{"startOffset":30516,"endOffset":30942,"count":41},{"startOffset":30545,"endOffset":30942,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":31054,"endOffset":31619,"count":16},{"startOffset":31216,"endOffset":31602,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":31722,"endOffset":32316,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":32319,"endOffset":32829,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":32831,"endOffset":32919,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":33073,"endOffset":33398,"count":10},{"startOffset":33145,"endOffset":33355,"count":8}],"isBlockCoverage":true},{"functionName":"resume","ranges":[{"startOffset":33401,"endOffset":33551,"count":8}],"isBlockCoverage":true},{"functionName":"resume_","ranges":[{"startOffset":33553,"endOffset":33804,"count":8},{"startOffset":33643,"endOffset":33668,"count":3},{"startOffset":33787,"endOffset":33802,"count":1}],"isBlockCoverage":true},{"functionName":"Readable.pause","ranges":[{"startOffset":33833,"endOffset":34100,"count":2}],"isBlockCoverage":true},{"functionName":"flow","ranges":[{"startOffset":34103,"endOffset":34250,"count":13},{"startOffset":34221,"endOffset":34246,"count":14},{"startOffset":34247,"endOffset":34248,"count":1}],"isBlockCoverage":true},{"functionName":"Readable.wrap","ranges":[{"startOffset":34434,"endOffset":35455,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":35500,"endOffset":35552,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.iterator","ranges":[{"startOffset":35585,"endOffset":35728,"count":0}],"isBlockCoverage":false},{"functionName":"streamToAsyncIterator","ranges":[{"startOffset":35731,"endOffset":35980,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":35982,"endOffset":37058,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37277,"endOffset":37666,"count":9},{"startOffset":37600,"endOffset":37615,"count":7},{"startOffset":37616,"endOffset":37634,"count":2},{"startOffset":37635,"endOffset":37659,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":37672,"endOffset":37802,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37884,"endOffset":37948,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38030,"endOffset":38238,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38326,"endOffset":38392,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":38473,"endOffset":38555,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38637,"endOffset":38697,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":38708,"endOffset":38817,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":38893,"endOffset":38947,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39027,"endOffset":39115,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39193,"endOffset":39278,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39347,"endOffset":39431,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39476,"endOffset":39560,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":39631,"endOffset":39718,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":39724,"endOffset":40013,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":40088,"endOffset":40176,"count":1},{"startOffset":40162,"endOffset":40169,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":40317,"endOffset":40362,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":40442,"endOffset":40493,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":40499,"endOffset":40548,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":40854,"endOffset":41416,"count":1},{"startOffset":40937,"endOffset":40949,"count":0},{"startOffset":40990,"endOffset":41017,"count":0},{"startOffset":41124,"endOffset":41152,"count":0},{"startOffset":41226,"endOffset":41282,"count":0},{"startOffset":41312,"endOffset":41399,"count":0}],"isBlockCoverage":true},{"functionName":"endReadable","ranges":[{"startOffset":41418,"endOffset":41639,"count":12}],"isBlockCoverage":true},{"functionName":"endReadableNT","ranges":[{"startOffset":41641,"endOffset":42561,"count":12},{"startOffset":41859,"endOffset":41880,"count":5},{"startOffset":41882,"endOffset":42559,"count":5},{"startOffset":41962,"endOffset":41995,"count":3},{"startOffset":41997,"endOffset":42051,"count":3},{"startOffset":42051,"endOffset":42555,"count":2},{"startOffset":42283,"endOffset":42488,"count":1},{"startOffset":42514,"endOffset":42549,"count":1}],"isBlockCoverage":true},{"functionName":"endWritableNT","ranges":[{"startOffset":42563,"endOffset":42723,"count":3}],"isBlockCoverage":true},{"functionName":"Readable.from","ranges":[{"startOffset":42741,"endOffset":42810,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":42875,"endOffset":43039,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.fromWeb","ranges":[{"startOffset":43060,"endOffset":43194,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.toWeb","ranges":[{"startOffset":43214,"endOffset":43348,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":43367,"endOffset":43611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"439","url":"node:internal/streams/legacy","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2934,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":112,"endOffset":160,"count":22}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":274,"endOffset":2076,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2079,"endOffset":2886,"count":0}],"isBlockCoverage":false}]},{"scriptId":"440","url":"node:internal/streams/add-abort-signal","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1704,"count":1}],"isBlockCoverage":false},{"functionName":"validateAbortSignal","ranges":[{"startOffset":557,"endOffset":716,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignal","ranges":[{"startOffset":751,"endOffset":1062,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.addAbortSignalNoValidate","ranges":[{"startOffset":1107,"endOffset":1702,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"node:internal/streams/buffer_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4060,"count":1}],"isBlockCoverage":false},{"functionName":"BufferList","ranges":[{"startOffset":254,"endOffset":338,"count":11}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":342,"endOffset":529,"count":1},{"startOffset":426,"endOffset":449,"count":0}],"isBlockCoverage":true},{"functionName":"unshift","ranges":[{"startOffset":533,"endOffset":691,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":695,"endOffset":922,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":926,"endOffset":994,"count":3}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":998,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":1184,"endOffset":1467,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":1551,"endOffset":2005,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":2009,"endOffset":2049,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":2053,"endOffset":2149,"count":2},{"startOffset":2118,"endOffset":2145,"count":0}],"isBlockCoverage":true},{"functionName":"_getString","ranges":[{"startOffset":2224,"endOffset":2862,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":2932,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":3860,"endOffset":4056,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"node:internal/streams/state","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1332,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":287,"endOffset":454,"count":21},{"startOffset":385,"endOffset":408,"count":1},{"startOffset":409,"endOffset":451,"count":20},{"startOffset":445,"endOffset":451,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":456,"endOffset":586,"count":18},{"startOffset":523,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"setDefaultHighWaterMark","ranges":[{"startOffset":588,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"getHighWaterMark","ranges":[{"startOffset":801,"endOffset":1234,"count":21},{"startOffset":948,"endOffset":1160,"count":4},{"startOffset":992,"endOffset":1129,"count":0},{"startOffset":1160,"endOffset":1233,"count":17}],"isBlockCoverage":true}]},{"scriptId":"443","url":"node:internal/streams/from","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2614,"count":1}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":241,"endOffset":2589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"444","url":"node:internal/streams/writable","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26009,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2389,"endOffset":2406,"count":72}],"isBlockCoverage":true},{"functionName":"WritableState","ranges":[{"startOffset":2452,"endOffset":6975,"count":10},{"startOffset":2847,"endOffset":2890,"count":0},{"startOffset":3441,"endOffset":3477,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":6977,"endOffset":7109,"count":11}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":7147,"endOffset":7236,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7332,"endOffset":7397,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":7404,"endOffset":8932,"count":10},{"startOffset":8045,"endOffset":8099,"count":0},{"startOffset":8105,"endOffset":8134,"count":0},{"startOffset":8273,"endOffset":8301,"count":0},{"startOffset":8355,"endOffset":8385,"count":0},{"startOffset":8440,"endOffset":8472,"count":0},{"startOffset":8525,"endOffset":8553,"count":0},{"startOffset":8610,"endOffset":8646,"count":0},{"startOffset":8678,"endOffset":8715,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8782,"endOffset":8928,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9014,"endOffset":9218,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.pipe","ranges":[{"startOffset":9319,"endOffset":9387,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":9390,"endOffset":10734,"count":75},{"startOffset":9515,"endOffset":9577,"count":1},{"startOffset":9577,"endOffset":9813,"count":74},{"startOffset":9610,"endOffset":9643,"count":73},{"startOffset":9643,"endOffset":9759,"count":1},{"startOffset":9718,"endOffset":9759,"count":0},{"startOffset":9800,"endOffset":9809,"count":73},{"startOffset":9837,"endOffset":9882,"count":0},{"startOffset":9948,"endOffset":10081,"count":42},{"startOffset":9991,"endOffset":10075,"count":0},{"startOffset":10081,"endOffset":10384,"count":33},{"startOffset":10150,"endOffset":10384,"count":0},{"startOffset":10421,"endOffset":10470,"count":0},{"startOffset":10497,"endOffset":10547,"count":0},{"startOffset":10560,"endOffset":10651,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":10763,"endOffset":10849,"count":75}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":10878,"endOffset":10924,"count":1}],"isBlockCoverage":true},{"functionName":"Writable.uncork","ranges":[{"startOffset":10955,"endOffset":11110,"count":1}],"isBlockCoverage":true},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":11153,"endOffset":11478,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":11668,"endOffset":12681,"count":75},{"startOffset":11766,"endOffset":11769,"count":0},{"startOffset":11988,"endOffset":12011,"count":0},{"startOffset":12049,"endOffset":12065,"count":74},{"startOffset":12066,"endOffset":12087,"count":74},{"startOffset":12089,"endOffset":12321,"count":1},{"startOffset":12321,"endOffset":12512,"count":74}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":12683,"endOffset":13061,"count":1},{"startOffset":12869,"endOffset":12918,"count":0},{"startOffset":12942,"endOffset":12979,"count":0}],"isBlockCoverage":true},{"functionName":"onwriteError","ranges":[{"startOffset":13063,"endOffset":13448,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":13450,"endOffset":15089,"count":75},{"startOffset":13608,"endOffset":13682,"count":0},{"startOffset":13800,"endOffset":14356,"count":0},{"startOffset":14417,"endOffset":14458,"count":0},{"startOffset":14474,"endOffset":15030,"count":74},{"startOffset":14773,"endOffset":14820,"count":30},{"startOffset":14822,"endOffset":14873,"count":30},{"startOffset":14873,"endOffset":15024,"count":44},{"startOffset":15030,"endOffset":15083,"count":1}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":15091,"endOffset":15230,"count":43}],"isBlockCoverage":true},{"functionName":"afterWrite","ranges":[{"startOffset":15232,"endOffset":15607,"count":44},{"startOffset":15398,"endOffset":15458,"count":0},{"startOffset":15482,"endOffset":15520,"count":74},{"startOffset":15545,"endOffset":15574,"count":0}],"isBlockCoverage":true},{"functionName":"errorBuffer","ranges":[{"startOffset":15679,"endOffset":16236,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":16302,"endOffset":17796,"count":1},{"startOffset":16445,"endOffset":16462,"count":0},{"startOffset":16603,"endOffset":16620,"count":0},{"startOffset":16706,"endOffset":16723,"count":0},{"startOffset":16725,"endOffset":17288,"count":0},{"startOffset":17419,"endOffset":17422,"count":0},{"startOffset":17541,"endOffset":17558,"count":0},{"startOffset":17626,"endOffset":17756,"count":0}],"isBlockCoverage":true},{"functionName":"callback","ranges":[{"startOffset":16814,"endOffset":16923,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":17826,"endOffset":17995,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":18059,"endOffset":19395,"count":4},{"startOffset":18164,"endOffset":18224,"count":0},{"startOffset":18266,"endOffset":18311,"count":0},{"startOffset":18370,"endOffset":18477,"count":0},{"startOffset":18526,"endOffset":18572,"count":0},{"startOffset":18585,"endOffset":18611,"count":0},{"startOffset":19062,"endOffset":19218,"count":0},{"startOffset":19252,"endOffset":19377,"count":0}],"isBlockCoverage":true},{"functionName":"needFinish","ranges":[{"startOffset":19398,"endOffset":19738,"count":51},{"startOffset":19450,"endOffset":19479,"count":7},{"startOffset":19480,"endOffset":19510,"count":7},{"startOffset":19511,"endOffset":19542,"count":7},{"startOffset":19543,"endOffset":19570,"count":7},{"startOffset":19571,"endOffset":19611,"count":7},{"startOffset":19612,"endOffset":19640,"count":7},{"startOffset":19641,"endOffset":19668,"count":7},{"startOffset":19669,"endOffset":19701,"count":7},{"startOffset":19702,"endOffset":19734,"count":7}],"isBlockCoverage":true},{"functionName":"callFinal","ranges":[{"startOffset":19740,"endOffset":20686,"count":4},{"startOffset":20625,"endOffset":20661,"count":0}],"isBlockCoverage":true},{"functionName":"onFinish","ranges":[{"startOffset":19801,"endOffset":20539,"count":3},{"startOffset":19842,"endOffset":19925,"count":0},{"startOffset":19982,"endOffset":20200,"count":0}],"isBlockCoverage":true},{"functionName":"prefinish","ranges":[{"startOffset":20688,"endOffset":20993,"count":4},{"startOffset":20910,"endOffset":20987,"count":0}],"isBlockCoverage":true},{"functionName":"finishMaybe","ranges":[{"startOffset":20995,"endOffset":21494,"count":48},{"startOffset":21064,"endOffset":21492,"count":4},{"startOffset":21127,"endOffset":21488,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21199,"endOffset":21361,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":21496,"endOffset":22222,"count":3},{"startOffset":21687,"endOffset":21720,"count":0},{"startOffset":22127,"endOffset":22155,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":22307,"endOffset":22391,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22439,"endOffset":22526,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":22532,"endOffset":22714,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22761,"endOffset":23153,"count":14},{"startOffset":23100,"endOffset":23113,"count":12},{"startOffset":23114,"endOffset":23134,"count":12},{"startOffset":23135,"endOffset":23146,"count":10}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":23159,"endOffset":23293,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23348,"endOffset":23434,"count":1},{"startOffset":23420,"endOffset":23427,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":23491,"endOffset":23579,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23632,"endOffset":23714,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23766,"endOffset":23850,"count":3},{"startOffset":23836,"endOffset":23843,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":23906,"endOffset":24064,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24124,"endOffset":24208,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24261,"endOffset":24341,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24394,"endOffset":24471,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24540,"endOffset":24624,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24706,"endOffset":24912,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":24990,"endOffset":25287,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":25375,"endOffset":25407,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":25458,"endOffset":25496,"count":0}],"isBlockCoverage":false},{"functionName":"lazyWebStreams","ranges":[{"startOffset":25561,"endOffset":25725,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.fromWeb","ranges":[{"startOffset":25746,"endOffset":25880,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.toWeb","ranges":[{"startOffset":25900,"endOffset":26007,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"node:stream/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":917,"count":1}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":318,"endOffset":869,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"node:internal/streams/transform","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7176,"count":1}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":3920,"endOffset":5747,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5749,"endOffset":6193,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":6195,"endOffset":6276,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6348,"endOffset":6443,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6475,"endOffset":7018,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7049,"endOffset":7174,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"node:internal/streams/passthrough","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1762,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1529,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1708,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"448","url":"node:internal/crypto/sig","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7113,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":892,"endOffset":1151,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1274,"endOffset":1366,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1393,"endOffset":1754,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1757,"endOffset":1832,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1834,"endOffset":1915,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1917,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2271,"endOffset":2516,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2540,"endOffset":3203,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3206,"endOffset":4424,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":4426,"endOffset":4693,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":4921,"endOffset":5558,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":5561,"endOffset":7039,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"node:internal/crypto/hash","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4634,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":976,"endOffset":1496,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":1627,"endOffset":1795,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":1826,"endOffset":1931,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":1958,"endOffset":2038,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":2065,"endOffset":2577,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":2605,"endOffset":2950,"count":0}],"isBlockCoverage":false},{"functionName":"Hmac","ranges":[{"startOffset":2953,"endOffset":3353,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3534,"endOffset":3953,"count":0}],"isBlockCoverage":false},{"functionName":"asyncDigest","ranges":[{"startOffset":4108,"endOffset":4579,"count":0}],"isBlockCoverage":false}]},{"scriptId":"450","url":"node:internal/crypto/x509","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9909,"count":1}],"isBlockCoverage":false},{"functionName":"isX509Certificate","ranges":[{"startOffset":1155,"endOffset":1238,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":1240,"endOffset":2485,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2487,"endOffset":2649,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2651,"endOffset":9663,"count":0}],"isBlockCoverage":false}]},{"scriptId":"451","url":"node:internal/crypto/certificate","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1546,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":385,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":507,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":637,"endOffset":765,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":1122,"endOffset":1216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"452","url":"node:internal/crypto/webcrypto","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30690,"count":1}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":1106,"endOffset":1715,"count":0}],"isBlockCoverage":false},{"functionName":"randomUUID","ranges":[{"startOffset":1717,"endOffset":1827,"count":0}],"isBlockCoverage":false},{"functionName":"generateKey","ranges":[{"startOffset":1829,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"deriveBits","ranges":[{"startOffset":4326,"endOffset":5893,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyLength","ranges":[{"startOffset":5895,"endOffset":6515,"count":0}],"isBlockCoverage":false},{"functionName":"deriveKey","ranges":[{"startOffset":6517,"endOffset":8697,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeySpki","ranges":[{"startOffset":8699,"endOffset":9677,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyPkcs8","ranges":[{"startOffset":9679,"endOffset":10666,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyRaw","ranges":[{"startOffset":10668,"endOffset":11601,"count":0}],"isBlockCoverage":false},{"functionName":"exportKeyJWK","ranges":[{"startOffset":11603,"endOffset":13158,"count":0}],"isBlockCoverage":false},{"functionName":"exportKey","ranges":[{"startOffset":13160,"endOffset":14020,"count":0}],"isBlockCoverage":false},{"functionName":"importGenericSecretKey","ranges":[{"startOffset":14022,"endOffset":15372,"count":0}],"isBlockCoverage":false},{"functionName":"importKey","ranges":[{"startOffset":15374,"endOffset":18116,"count":0}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":18209,"endOffset":19744,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapKey","ranges":[{"startOffset":19839,"endOffset":21802,"count":0}],"isBlockCoverage":false},{"functionName":"signVerify","ranges":[{"startOffset":21804,"endOffset":22907,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":22909,"endOffset":23535,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":23537,"endOffset":24294,"count":0}],"isBlockCoverage":false},{"functionName":"cipherOrWrap","ranges":[{"startOffset":24296,"endOffset":25707,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt","ranges":[{"startOffset":25709,"endOffset":26435,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt","ranges":[{"startOffset":26437,"endOffset":27163,"count":0}],"isBlockCoverage":false},{"functionName":"SubtleCrypto","ranges":[{"startOffset":27319,"endOffset":27379,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27414,"endOffset":27427,"count":1}],"isBlockCoverage":true},{"functionName":"Crypto","ranges":[{"startOffset":27466,"endOffset":27526,"count":0}],"isBlockCoverage":true},{"functionName":"get subtle","ranges":[{"startOffset":27530,"endOffset":27630,"count":3},{"startOffset":27570,"endOffset":27607,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27665,"endOffset":27678,"count":1}],"isBlockCoverage":true},{"functionName":"getRandomValues","ranges":[{"startOffset":27694,"endOffset":28027,"count":0}],"isBlockCoverage":false}]},{"scriptId":"453","url":"node:internal/fs/streams","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14758,"count":1}],"isBlockCoverage":false},{"functionName":"_construct","ranges":[{"startOffset":1063,"endOffset":1966,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandleOperations","ranges":[{"startOffset":2059,"endOffset":3058,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3061,"endOffset":3238,"count":0}],"isBlockCoverage":false},{"functionName":"importFd","ranges":[{"startOffset":3240,"endOffset":4237,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":4239,"endOffset":5982,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6171,"endOffset":6226,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6230,"endOffset":6287,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6323,"endOffset":6348,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":6524,"endOffset":7655,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":7690,"endOffset":8251,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":8283,"endOffset":8369,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8449,"endOffset":8483,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":8512,"endOffset":10303,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10495,"endOffset":10550,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":10554,"endOffset":10611,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10648,"endOffset":10673,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":10824,"endOffset":11617,"count":0}],"isBlockCoverage":false},{"functionName":"writevAll","ranges":[{"startOffset":11619,"endOffset":12436,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":12469,"endOffset":12853,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":12888,"endOffset":13450,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._destroy","ranges":[{"startOffset":13486,"endOffset":14047,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":14080,"endOffset":14462,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14644,"endOffset":14678,"count":0}],"isBlockCoverage":false}]},{"scriptId":"454","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9769,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2026,"endOffset":2267,"count":4}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2085,"endOffset":2263,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease","ranges":[{"startOffset":2649,"endOffset":2662,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType","ranges":[{"startOffset":2711,"endOffset":2721,"count":1}],"isBlockCoverage":true},{"functionName":"getOSVersion","ranges":[{"startOffset":2773,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine","ranges":[{"startOffset":2836,"endOffset":2849,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableParallelism.<computed>","ranges":[{"startOffset":2897,"endOffset":2928,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":2962,"endOffset":2980,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":3015,"endOffset":3034,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":3070,"endOffset":3090,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":3123,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":3176,"endOffset":3196,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine.<computed>","ranges":[{"startOffset":3230,"endOffset":3248,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3288,"endOffset":3312,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3347,"endOffset":3366,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3399,"endOffset":3416,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3554,"endOffset":3654,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":3934,"endOffset":4363,"count":1},{"startOffset":4036,"endOffset":4041,"count":0},{"startOffset":4103,"endOffset":4344,"count":8}],"isBlockCoverage":true},{"functionName":"arch","ranges":[{"startOffset":4394,"endOffset":4436,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":4463,"endOffset":4481,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4513,"endOffset":4563,"count":1}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":4594,"endOffset":4616,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4648,"endOffset":5253,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5282,"endOffset":5296,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5333,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5413,"endOffset":5430,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5518,"endOffset":5771,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":5773,"endOffset":6718,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":6929,"endOffset":7622,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":7706,"endOffset":7995,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":8053,"endOffset":8308,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8612,"endOffset":8900,"count":0}],"isBlockCoverage":false}]},{"scriptId":"455","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-cli@0.0.11/node_modules/@vscode/test-cli/out/cli/config.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3544,"count":1}],"isBlockCoverage":true},{"functionName":"json","ranges":[{"startOffset":490,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"js","ranges":[{"startOffset":552,"endOffset":600,"count":0}],"isBlockCoverage":false},{"functionName":"cjs","ranges":[{"startOffset":611,"endOffset":659,"count":0}],"isBlockCoverage":false},{"functionName":"mjs","ranges":[{"startOffset":670,"endOffset":718,"count":1}],"isBlockCoverage":true},{"functionName":"loadDefaultConfigFile","ranges":[{"startOffset":802,"endOffset":1422,"count":1},{"startOffset":980,"endOffset":1158,"count":4},{"startOffset":1080,"endOffset":1148,"count":1},{"startOffset":1158,"endOffset":1421,"count":0}],"isBlockCoverage":true},{"functionName":"tryLoadConfigFile","ranges":[{"startOffset":1506,"endOffset":2412,"count":1},{"startOffset":1632,"endOffset":1783,"count":0},{"startOffset":2118,"endOffset":2200,"count":0},{"startOffset":2302,"endOffset":2410,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2420,"endOffset":3543,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":2570,"endOffset":3098,"count":1},{"startOffset":2886,"endOffset":3022,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2979,"endOffset":3005,"count":0}],"isBlockCoverage":false},{"functionName":"ResolvedTestConfiguration","ranges":[{"startOffset":3103,"endOffset":3272,"count":1}],"isBlockCoverage":true},{"functionName":"extensionDevelopmentPath","ranges":[{"startOffset":3373,"endOffset":3541,"count":2},{"startOffset":3462,"endOffset":3469,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3489,"endOffset":3533,"count":2},{"startOffset":3514,"endOffset":3533,"count":0}],"isBlockCoverage":true}]},{"scriptId":"456","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-cli@0.0.11/node_modules/@vscode/test-cli/out/cli/args.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6047,"count":1}],"isBlockCoverage":true}]},{"scriptId":"457","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-cli@0.0.11/node_modules/@vscode/test-cli/out/cli/error.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":332,"count":1}],"isBlockCoverage":true}]},{"scriptId":"458","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-cli@0.0.11/node_modules/@vscode/test-cli/out/cli/resolver.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":801,"count":1}],"isBlockCoverage":true},{"functionName":"mustResolve","ranges":[{"startOffset":429,"endOffset":799,"count":1},{"startOffset":538,"endOffset":780,"count":0}],"isBlockCoverage":true}]},{"scriptId":"459","url":"node:internal/util/parse_args/parse_args","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12919,"count":1}],"isBlockCoverage":false},{"functionName":"getMainArgs","ranges":[{"startOffset":1135,"endOffset":1729,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionLikeValue","ranges":[{"startOffset":1874,"endOffset":2478,"count":0}],"isBlockCoverage":false},{"functionName":"checkOptionUsage","ranges":[{"startOffset":2658,"endOffset":3449,"count":0}],"isBlockCoverage":false},{"functionName":"storeOption","ranges":[{"startOffset":3772,"endOffset":4596,"count":0}],"isBlockCoverage":false},{"functionName":"storeDefaultOption","ranges":[{"startOffset":4921,"endOffset":5090,"count":0}],"isBlockCoverage":false},{"functionName":"argsToTokens","ranges":[{"startOffset":5365,"endOffset":9345,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgs","ranges":[{"startOffset":9365,"endOffset":12881,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"node:internal/util/parse_args/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6225,"count":1}],"isBlockCoverage":false},{"functionName":"objectGetOwn","ranges":[{"startOffset":693,"endOffset":782,"count":0}],"isBlockCoverage":false},{"functionName":"optionsGetOwn","ranges":[{"startOffset":865,"endOffset":1011,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionValue","ranges":[{"startOffset":1277,"endOffset":1502,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionLikeValue","ranges":[{"startOffset":1719,"endOffset":1862,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneShortOption","ranges":[{"startOffset":1936,"endOffset":2088,"count":0}],"isBlockCoverage":false},{"functionName":"isLoneLongOption","ranges":[{"startOffset":2336,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"isLongOptionAndValue","ranges":[{"startOffset":2681,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionGroup","ranges":[{"startOffset":3724,"endOffset":4109,"count":0}],"isBlockCoverage":false},{"functionName":"isShortOptionAndValue","ranges":[{"startOffset":4418,"endOffset":4847,"count":0}],"isBlockCoverage":false},{"functionName":"findLongOptionForShort","ranges":[{"startOffset":5170,"endOffset":5472,"count":0}],"isBlockCoverage":false},{"functionName":"useDefaultValueOption","ranges":[{"startOffset":5797,"endOffset":5967,"count":0}],"isBlockCoverage":false}]},{"scriptId":"461","url":"node:internal/mime","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10569,"count":1}],"isBlockCoverage":false},{"functionName":"toASCIILower","ranges":[{"startOffset":587,"endOffset":820,"count":0}],"isBlockCoverage":false},{"functionName":"parseTypeAndSubtype","ranges":[{"startOffset":866,"endOffset":2524,"count":0}],"isBlockCoverage":false},{"functionName":"removeBackslashes","ranges":[{"startOffset":2641,"endOffset":3056,"count":0}],"isBlockCoverage":false},{"functionName":"escapeQuoteOrSolidus","ranges":[{"startOffset":3059,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3288,"endOffset":3527,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3530,"endOffset":8526,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":8986,"endOffset":10365,"count":0}],"isBlockCoverage":false}]},{"scriptId":"462","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-cli@0.0.11/node_modules/@vscode/test-cli/out/cli/platform/desktop.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7490,"count":1}],"isBlockCoverage":true},{"functionName":"prepare","ranges":[{"startOffset":627,"endOffset":1635,"count":1},{"startOffset":702,"endOffset":733,"count":0},{"startOffset":735,"endOffset":776,"count":0},{"startOffset":1001,"endOffset":1009,"count":0},{"startOffset":1011,"endOffset":1107,"count":0},{"startOffset":1422,"endOffset":1463,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1051,"endOffset":1095,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1231,"endOffset":1272,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1638,"endOffset":6363,"count":1}],"isBlockCoverage":true},{"functionName":"get extensionDevelopmentPath","ranges":[{"startOffset":1721,"endOffset":1823,"count":2}],"isBlockCoverage":true},{"functionName":"get extensionTestsPath","ranges":[{"startOffset":1828,"endOffset":1954,"count":1}],"isBlockCoverage":true},{"functionName":"get env","ranges":[{"startOffset":1959,"endOffset":2133,"count":1}],"isBlockCoverage":true},{"functionName":"PreparedDesktopRun","ranges":[{"startOffset":2138,"endOffset":2321,"count":1}],"isBlockCoverage":true},{"functionName":"importTestElectron","ranges":[{"startOffset":2326,"endOffset":2554,"count":1}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":2582,"endOffset":3703,"count":1},{"startOffset":3270,"endOffset":3697,"count":0}],"isBlockCoverage":true},{"functionName":"dumpJson","ranges":[{"startOffset":3731,"endOffset":3997,"count":0}],"isBlockCoverage":false},{"functionName":"baseCliOptions","ranges":[{"startOffset":4002,"endOffset":4733,"count":2},{"startOffset":4175,"endOffset":4180,"count":0},{"startOffset":4280,"endOffset":4290,"count":0},{"startOffset":4331,"endOffset":4340,"count":0},{"startOffset":4401,"endOffset":4446,"count":0},{"startOffset":4463,"endOffset":4502,"count":0},{"startOffset":4592,"endOffset":4634,"count":0},{"startOffset":4651,"endOffset":4687,"count":0}],"isBlockCoverage":true},{"functionName":"installDependentExtensions","ranges":[{"startOffset":4738,"endOffset":6361,"count":1},{"startOffset":5128,"endOffset":5159,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5613,"endOffset":6353,"count":1},{"startOffset":5734,"endOffset":5746,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5880,"endOffset":5937,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6001,"endOffset":6058,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6095,"endOffset":6341,"count":1},{"startOffset":6133,"endOffset":6255,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6364,"endOffset":6926,"count":1}],"isBlockCoverage":true},{"functionName":"get value","ranges":[{"startOffset":6416,"endOffset":6507,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6466,"endOffset":6499,"count":1},{"startOffset":6481,"endOffset":6494,"count":0}],"isBlockCoverage":true},{"functionName":"get size","ranges":[{"startOffset":6512,"endOffset":6563,"count":1}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":6568,"endOffset":6863,"count":3},{"startOffset":6624,"endOffset":6857,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":6868,"endOffset":6924,"count":0}],"isBlockCoverage":false},{"functionName":"addDependentExtensions","ranges":[{"startOffset":6927,"endOffset":7489,"count":1},{"startOffset":7272,"endOffset":7305,"count":0}],"isBlockCoverage":true}]},{"scriptId":"463","url":"node:child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27198,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1936,"endOffset":1965,"count":1}],"isBlockCoverage":true},{"functionName":"fork","ranges":[{"startOffset":3430,"endOffset":5105,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":5107,"endOffset":5596,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":5598,"endOffset":6112,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":6649,"endOffset":6896,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":6932,"endOffset":7296,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6953,"endOffset":7293,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecFileArgs","ranges":[{"startOffset":7433,"endOffset":8331,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":8944,"endOffset":13708,"count":0}],"isBlockCoverage":false},{"functionName":"copyProcessEnvToEnv","ranges":[{"startOffset":13852,"endOffset":14052,"count":2},{"startOffset":13950,"endOffset":14007,"count":1},{"startOffset":14010,"endOffset":14050,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":14054,"endOffset":19321,"count":2},{"startOffset":14215,"endOffset":14280,"count":0},{"startOffset":14351,"endOffset":14542,"count":0},{"startOffset":14622,"endOffset":14645,"count":0},{"startOffset":14774,"endOffset":14827,"count":0},{"startOffset":14897,"endOffset":14961,"count":0},{"startOffset":15024,"endOffset":15048,"count":0},{"startOffset":15050,"endOffset":15128,"count":0},{"startOffset":15191,"endOffset":15215,"count":0},{"startOffset":15217,"endOffset":15295,"count":0},{"startOffset":15406,"endOffset":15448,"count":0},{"startOffset":15450,"endOffset":15581,"count":0},{"startOffset":15645,"endOffset":15765,"count":0},{"startOffset":15841,"endOffset":15911,"count":0},{"startOffset":16051,"endOffset":16159,"count":0},{"startOffset":16182,"endOffset":17044,"count":0},{"startOffset":17087,"endOffset":17140,"count":0},{"startOffset":17218,"endOffset":17232,"count":1},{"startOffset":17485,"endOffset":18089,"count":0},{"startOffset":18186,"endOffset":18229,"count":240},{"startOffset":18267,"endOffset":18732,"count":0},{"startOffset":18763,"endOffset":19016,"count":240},{"startOffset":18822,"endOffset":19012,"count":238}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18511,"endOffset":18720,"count":0}],"isBlockCoverage":false},{"functionName":"abortChildProcess","ranges":[{"startOffset":19323,"endOffset":19579,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":20134,"endOffset":21334,"count":2},{"startOffset":20500,"endOffset":20874,"count":0},{"startOffset":20898,"endOffset":21315,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20533,"endOffset":20721,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20765,"endOffset":20868,"count":0}],"isBlockCoverage":false},{"functionName":"onAbortListener","ranges":[{"startOffset":21210,"endOffset":21311,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":22094,"endOffset":23602,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":23605,"endOffset":23991,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":24504,"endOffset":24968,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":25466,"endOffset":25842,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentNullCheck","ranges":[{"startOffset":25845,"endOffset":26068,"count":493},{"startOffset":25970,"endOffset":26066,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgumentsNullCheck","ranges":[{"startOffset":26071,"endOffset":26233,"count":2},{"startOffset":26165,"endOffset":26231,"count":15}],"isBlockCoverage":true},{"functionName":"validateTimeout","ranges":[{"startOffset":26236,"endOffset":26424,"count":2},{"startOffset":26294,"endOffset":26340,"count":0},{"startOffset":26342,"endOffset":26422,"count":0}],"isBlockCoverage":true},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":26427,"endOffset":26700,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":26703,"endOffset":27066,"count":2},{"startOffset":26817,"endOffset":26867,"count":0},{"startOffset":26897,"endOffset":27064,"count":0}],"isBlockCoverage":true}]},{"scriptId":"464","url":"node:internal/child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31566,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2400,"endOffset":2459,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2466,"endOffset":2520,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2582,"endOffset":2649,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2656,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2827,"endOffset":4381,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4388,"endOffset":5134,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5141,"endOffset":5598,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5663,"endOffset":5722,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5729,"endOffset":5783,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5848,"endOffset":5968,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5975,"endOffset":6134,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":6145,"endOffset":6560,"count":2},{"startOffset":6237,"endOffset":6251,"count":0},{"startOffset":6256,"endOffset":6274,"count":0},{"startOffset":6353,"endOffset":6413,"count":0},{"startOffset":6418,"endOffset":6481,"count":0},{"startOffset":6502,"endOffset":6539,"count":0}],"isBlockCoverage":true},{"functionName":"ChildProcess","ranges":[{"startOffset":6562,"endOffset":7940,"count":2}],"isBlockCoverage":true},{"functionName":"ChildProcess._handle.onexit","ranges":[{"startOffset":6903,"endOffset":7937,"count":2},{"startOffset":6951,"endOffset":6994,"count":0},{"startOffset":7172,"endOffset":7464,"count":0}],"isBlockCoverage":true},{"functionName":"flushStdio","ranges":[{"startOffset":8063,"endOffset":8541,"count":2},{"startOffset":8153,"endOffset":8160,"count":0},{"startOffset":8203,"endOffset":8539,"count":6},{"startOffset":8464,"endOffset":8489,"count":0},{"startOffset":8514,"endOffset":8539,"count":0}],"isBlockCoverage":true},{"functionName":"createSocket","ranges":[{"startOffset":8544,"endOffset":8634,"count":6}],"isBlockCoverage":true},{"functionName":"getHandleWrapType","ranges":[{"startOffset":8637,"endOffset":8866,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":8868,"endOffset":8981,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":9015,"endOffset":12582,"count":2},{"startOffset":9166,"endOffset":9175,"count":1},{"startOffset":9510,"endOffset":9895,"count":0},{"startOffset":10013,"endOffset":10043,"count":0},{"startOffset":10384,"endOffset":10641,"count":0},{"startOffset":10656,"endOffset":10943,"count":0},{"startOffset":11064,"endOffset":11978,"count":6},{"startOffset":11129,"endOffset":11138,"count":0},{"startOffset":11160,"endOffset":11211,"count":0},{"startOffset":11432,"endOffset":11694,"count":0},{"startOffset":11795,"endOffset":11801,"count":0},{"startOffset":11828,"endOffset":11845,"count":4},{"startOffset":11847,"endOffset":11968,"count":4},{"startOffset":12068,"endOffset":12074,"count":0},{"startOffset":12165,"endOffset":12171,"count":0},{"startOffset":12262,"endOffset":12268,"count":0},{"startOffset":12332,"endOffset":12442,"count":6},{"startOffset":12416,"endOffset":12422,"count":0},{"startOffset":12526,"endOffset":12565,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11913,"endOffset":11958,"count":2}],"isBlockCoverage":true},{"functionName":"onErrorNT","ranges":[{"startOffset":12586,"endOffset":12647,"count":0}],"isBlockCoverage":false},{"functionName":"onSpawnNT","ranges":[{"startOffset":12650,"endOffset":12700,"count":2}],"isBlockCoverage":true},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":12733,"endOffset":13398,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.<computed>","ranges":[{"startOffset":13441,"endOffset":13498,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":13531,"endOffset":13585,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":13620,"endOffset":13676,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13679,"endOffset":14676,"count":0}],"isBlockCoverage":false},{"functionName":"setupChannel","ranges":[{"startOffset":14824,"endOffset":26944,"count":0}],"isBlockCoverage":false},{"functionName":"isInternal","ranges":[{"startOffset":26979,"endOffset":27289,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":27323,"endOffset":30248,"count":2},{"startOffset":27499,"endOffset":27589,"count":0},{"startOffset":27833,"endOffset":27870,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27983,"endOffset":30207,"count":6},{"startOffset":28241,"endOffset":28289,"count":0},{"startOffset":28319,"endOffset":28377,"count":0},{"startOffset":28404,"endOffset":28429,"count":0},{"startOffset":28430,"endOffset":28488,"count":0},{"startOffset":28547,"endOffset":28561,"count":0},{"startOffset":28744,"endOffset":30186,"count":0}],"isBlockCoverage":true},{"functionName":"cleanup","ranges":[{"startOffset":28008,"endOffset":28200,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":30251,"endOffset":30567,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":30570,"endOffset":30771,"count":4},{"startOffset":30690,"endOffset":30769,"count":1}],"isBlockCoverage":true},{"functionName":"spawnSync","ranges":[{"startOffset":30773,"endOffset":31440,"count":0}],"isBlockCoverage":false}]},{"scriptId":"465","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":64869,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1585,"endOffset":1610,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":4091,"endOffset":4099,"count":0}],"isBlockCoverage":false},{"functionName":"lazyChannels","ranges":[{"startOffset":4234,"endOffset":4790,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4950,"endOffset":5044,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":5046,"endOffset":5429,"count":0}],"isBlockCoverage":false},{"functionName":"getNewAsyncId","ranges":[{"startOffset":5432,"endOffset":5570,"count":20},{"startOffset":5527,"endOffset":5545,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":5573,"endOffset":5656,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":5857,"endOffset":5961,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":6184,"endOffset":6602,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamily","ranges":[{"startOffset":6604,"endOffset":6679,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamily","ranges":[{"startOffset":6681,"endOffset":6797,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6799,"endOffset":6902,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultAutoSelectFamilyAttemptTimeout","ranges":[{"startOffset":6904,"endOffset":7091,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":7585,"endOffset":8311,"count":2},{"startOffset":7653,"endOffset":7734,"count":0},{"startOffset":7882,"endOffset":8130,"count":0},{"startOffset":8204,"endOffset":8258,"count":1}],"isBlockCoverage":true},{"functionName":"initSocketHandle","ranges":[{"startOffset":8383,"endOffset":8986,"count":10},{"startOffset":8739,"endOffset":8980,"count":0}],"isBlockCoverage":true},{"functionName":"closeSocketHandle","ranges":[{"startOffset":8988,"endOffset":9328,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9107,"endOffset":9320,"count":4},{"startOffset":9209,"endOffset":9314,"count":0}],"isBlockCoverage":true},{"functionName":"Socket","ranges":[{"startOffset":9580,"endOffset":14123,"count":16},{"startOffset":9640,"endOffset":9667,"count":6},{"startOffset":9667,"endOffset":9693,"count":10},{"startOffset":9695,"endOffset":9824,"count":0},{"startOffset":9824,"endOffset":10142,"count":10},{"startOffset":9894,"endOffset":10142,"count":0},{"startOffset":10142,"endOffset":10186,"count":10},{"startOffset":10204,"endOffset":10400,"count":0},{"startOffset":10400,"endOffset":10962,"count":10},{"startOffset":10962,"endOffset":10988,"count":0},{"startOffset":10988,"endOffset":11502,"count":10},{"startOffset":11502,"endOffset":12742,"count":0},{"startOffset":12742,"endOffset":12828,"count":10},{"startOffset":12829,"endOffset":12906,"count":0},{"startOffset":12907,"endOffset":12953,"count":0},{"startOffset":12955,"endOffset":13170,"count":0},{"startOffset":13170,"endOffset":13703,"count":10},{"startOffset":13705,"endOffset":13970,"count":8},{"startOffset":13738,"endOffset":13907,"count":0},{"startOffset":13939,"endOffset":13966,"count":4},{"startOffset":13970,"endOffset":14122,"count":10}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":14296,"endOffset":14426,"count":119},{"startOffset":14398,"endOffset":14420,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._final","ranges":[{"startOffset":14546,"endOffset":15162,"count":4},{"startOffset":14660,"endOffset":14761,"count":0},{"startOffset":14788,"endOffset":14800,"count":0},{"startOffset":15078,"endOffset":15090,"count":0},{"startOffset":15117,"endOffset":15160,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14734,"endOffset":14755,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":15165,"endOffset":15311,"count":3}],"isBlockCoverage":true},{"functionName":"writeAfterFIN","ranges":[{"startOffset":15518,"endOffset":16026,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":16108,"endOffset":16612,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":16646,"endOffset":17023,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":17059,"endOffset":17665,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":17696,"endOffset":17740,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17826,"endOffset":17870,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17950,"endOffset":18006,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":18117,"endOffset":18432,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18521,"endOffset":18601,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18689,"endOffset":18734,"count":41}],"isBlockCoverage":true},{"functionName":"tryReadStart","ranges":[{"startOffset":18742,"endOffset":18988,"count":7},{"startOffset":18942,"endOffset":18986,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._read","ranges":[{"startOffset":19080,"endOffset":19399,"count":44},{"startOffset":19225,"endOffset":19241,"count":43},{"startOffset":19243,"endOffset":19335,"count":1},{"startOffset":19335,"endOffset":19397,"count":43},{"startOffset":19368,"endOffset":19397,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19310,"endOffset":19329,"count":1}],"isBlockCoverage":true},{"functionName":"Socket.end","ranges":[{"startOffset":19426,"endOffset":19613,"count":4}],"isBlockCoverage":true},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":19651,"endOffset":20001,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":20029,"endOffset":20363,"count":2},{"startOffset":20062,"endOffset":20081,"count":0},{"startOffset":20082,"endOffset":20097,"count":0},{"startOffset":20098,"endOffset":20127,"count":0},{"startOffset":20129,"endOffset":20310,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.resume","ranges":[{"startOffset":20393,"endOffset":20577,"count":9},{"startOffset":20426,"endOffset":20445,"count":0},{"startOffset":20446,"endOffset":20461,"count":0},{"startOffset":20462,"endOffset":20492,"count":0},{"startOffset":20494,"endOffset":20523,"count":0}],"isBlockCoverage":true},{"functionName":"Socket.read","ranges":[{"startOffset":20605,"endOffset":20791,"count":59},{"startOffset":20639,"endOffset":20658,"count":0},{"startOffset":20659,"endOffset":20674,"count":0},{"startOffset":20675,"endOffset":20705,"count":0},{"startOffset":20707,"endOffset":20736,"count":0}],"isBlockCoverage":true},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":20838,"endOffset":20937,"count":4}],"isBlockCoverage":true},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":20971,"endOffset":21118,"count":1},{"startOffset":21055,"endOffset":21070,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._destroy","ranges":[{"startOffset":21150,"endOffset":22660,"count":7},{"startOffset":21447,"endOffset":21453,"count":0},{"startOffset":21673,"endOffset":21914,"count":0},{"startOffset":21955,"endOffset":22191,"count":0},{"startOffset":22410,"endOffset":22481,"count":0},{"startOffset":22503,"endOffset":22658,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21748,"endOffset":21833,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22135,"endOffset":22183,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":22689,"endOffset":22788,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":22823,"endOffset":23120,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":23123,"endOffset":23305,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":23332,"endOffset":23423,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":23456,"endOffset":23522,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":23554,"endOffset":23618,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":23648,"endOffset":23708,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":23745,"endOffset":24021,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":24053,"endOffset":24118,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":24148,"endOffset":24207,"count":0}],"isBlockCoverage":false},{"functionName":"localFamily","ranges":[{"startOffset":24238,"endOffset":24301,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":24342,"endOffset":24389,"count":1}],"isBlockCoverage":true},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":24425,"endOffset":25337,"count":76},{"startOffset":24647,"endOffset":24991,"count":1},{"startOffset":24991,"endOffset":25072,"count":75},{"startOffset":25072,"endOffset":25128,"count":0},{"startOffset":25128,"endOffset":25182,"count":75},{"startOffset":25182,"endOffset":25218,"count":0},{"startOffset":25218,"endOffset":25297,"count":75},{"startOffset":25297,"endOffset":25335,"count":1}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":24742,"endOffset":24856,"count":1}],"isBlockCoverage":true},{"functionName":"onClose","ranges":[{"startOffset":24863,"endOffset":24942,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":25368,"endOffset":25436,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":25466,"endOffset":25547,"count":75}],"isBlockCoverage":true},{"functionName":"_bytesDispatched","ranges":[{"startOffset":25740,"endOffset":25844,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":25876,"endOffset":26805,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":26810,"endOffset":27609,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":27612,"endOffset":29607,"count":1},{"startOffset":27867,"endOffset":28502,"count":0},{"startOffset":28921,"endOffset":28985,"count":0},{"startOffset":28989,"endOffset":29148,"count":0},{"startOffset":29161,"endOffset":29409,"count":0},{"startOffset":29483,"endOffset":29605,"count":0}],"isBlockCoverage":true},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":29610,"endOffset":32090,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":32119,"endOffset":33570,"count":1},{"startOffset":32463,"endOffset":32495,"count":0},{"startOffset":32497,"endOffset":32528,"count":0},{"startOffset":32723,"endOffset":32746,"count":0},{"startOffset":32752,"endOffset":32808,"count":0},{"startOffset":32859,"endOffset":32895,"count":0},{"startOffset":32919,"endOffset":33003,"count":0},{"startOffset":33107,"endOffset":33241,"count":0},{"startOffset":33361,"endOffset":33505,"count":0}],"isBlockCoverage":true},{"functionName":"reinitializeHandle","ranges":[{"startOffset":33613,"endOffset":33767,"count":0}],"isBlockCoverage":false},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":33770,"endOffset":33916,"count":1},{"startOffset":33831,"endOffset":33859,"count":0},{"startOffset":33864,"endOffset":33892,"count":0}],"isBlockCoverage":true},{"functionName":"lookupAndConnect","ranges":[{"startOffset":33918,"endOffset":37827,"count":1},{"startOffset":34036,"endOffset":34050,"count":0},{"startOffset":34148,"endOffset":34170,"count":0},{"startOffset":34172,"endOffset":34229,"count":0},{"startOffset":34248,"endOffset":34305,"count":0},{"startOffset":34377,"endOffset":34404,"count":0},{"startOffset":34406,"endOffset":34532,"count":0},{"startOffset":34608,"endOffset":34680,"count":0},{"startOffset":34787,"endOffset":34985,"count":0},{"startOffset":35175,"endOffset":35480,"count":0},{"startOffset":35516,"endOffset":35567,"count":0},{"startOffset":36107,"endOffset":36479,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":35249,"endOffset":35462,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36225,"endOffset":36460,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36533,"endOffset":37823,"count":1}],"isBlockCoverage":true},{"functionName":"emitLookup","ranges":[{"startOffset":36572,"endOffset":37817,"count":1},{"startOffset":36860,"endOffset":36867,"count":0},{"startOffset":36884,"endOffset":37179,"count":0},{"startOffset":37200,"endOffset":37308,"count":0},{"startOffset":37336,"endOffset":37356,"count":0},{"startOffset":37358,"endOffset":37597,"count":0}],"isBlockCoverage":true},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":37829,"endOffset":40914,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":40916,"endOffset":40975,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":41001,"endOffset":41188,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":41217,"endOffset":41410,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":41414,"endOffset":42995,"count":1},{"startOffset":41584,"endOffset":41601,"count":0},{"startOffset":41767,"endOffset":41816,"count":0},{"startOffset":41853,"endOffset":41878,"count":0},{"startOffset":41930,"endOffset":41956,"count":0},{"startOffset":41958,"endOffset":42002,"count":0},{"startOffset":42032,"endOffset":42060,"count":0},{"startOffset":42062,"endOffset":42141,"count":0},{"startOffset":42411,"endOffset":42432,"count":0},{"startOffset":42434,"endOffset":42492,"count":0},{"startOffset":42496,"endOffset":42993,"count":0}],"isBlockCoverage":true},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":42997,"endOffset":44884,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":44886,"endOffset":45118,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignalOption","ranges":[{"startOffset":45120,"endOffset":45560,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":45562,"endOffset":47149,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":47260,"endOffset":47325,"count":0}],"isBlockCoverage":false},{"functionName":"createServerHandle","ranges":[{"startOffset":47393,"endOffset":48845,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":48847,"endOffset":51198,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":51265,"endOffset":51327,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":51330,"endOffset":51445,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":51448,"endOffset":52708,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":52737,"endOffset":56563,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":56566,"endOffset":56978,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":57060,"endOffset":57103,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":57179,"endOffset":57468,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":57471,"endOffset":59426,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":59575,"endOffset":60328,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":60357,"endOffset":61224,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":61266,"endOffset":61386,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":61428,"endOffset":61814,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":61818,"endOffset":61901,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":61960,"endOffset":62122,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":62344,"endOffset":62380,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":62384,"endOffset":62425,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":62505,"endOffset":62536,"count":382}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":62540,"endOffset":62576,"count":17}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":62615,"endOffset":62856,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":62882,"endOffset":62980,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":63008,"endOffset":63107,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":63249,"endOffset":63918,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":63957,"endOffset":64198,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":64327,"endOffset":64429,"count":4}],"isBlockCoverage":true},{"functionName":"get SocketAddress","ranges":[{"startOffset":64433,"endOffset":64555,"count":4}],"isBlockCoverage":true}]},{"scriptId":"466","url":"node:internal/stream_base_commons","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7041,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1010,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"handleWriteReq","ranges":[{"startOffset":1154,"endOffset":2009,"count":75},{"startOffset":1254,"endOffset":1421,"count":33},{"startOffset":1379,"endOffset":1397,"count":0},{"startOffset":1426,"endOffset":1440,"count":1},{"startOffset":1445,"endOffset":1509,"count":1},{"startOffset":1514,"endOffset":1526,"count":41},{"startOffset":1531,"endOffset":1592,"count":41},{"startOffset":1597,"endOffset":1659,"count":0},{"startOffset":1664,"endOffset":1676,"count":0},{"startOffset":1681,"endOffset":1694,"count":0},{"startOffset":1699,"endOffset":1714,"count":0},{"startOffset":1719,"endOffset":1783,"count":0},{"startOffset":1788,"endOffset":2003,"count":0}],"isBlockCoverage":true},{"functionName":"onWriteComplete","ranges":[{"startOffset":2011,"endOffset":2696,"count":1},{"startOffset":2164,"endOffset":2253,"count":0},{"startOffset":2382,"endOffset":2564,"count":0}],"isBlockCoverage":true},{"functionName":"createWriteWrap","ranges":[{"startOffset":2698,"endOffset":2936,"count":75}],"isBlockCoverage":true},{"functionName":"writevGeneric","ranges":[{"startOffset":2938,"endOffset":3577,"count":0}],"isBlockCoverage":false},{"functionName":"writeGeneric","ranges":[{"startOffset":3579,"endOffset":3784,"count":75}],"isBlockCoverage":true},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3786,"endOffset":4089,"count":75},{"startOffset":3953,"endOffset":4004,"count":0},{"startOffset":4023,"endOffset":4060,"count":74},{"startOffset":4062,"endOffset":4087,"count":74}],"isBlockCoverage":true},{"functionName":"onStreamRead","ranges":[{"startOffset":4091,"endOffset":6022,"count":40},{"startOffset":4285,"endOffset":4305,"count":36},{"startOffset":4307,"endOffset":5043,"count":36},{"startOffset":4392,"endOffset":4651,"count":0},{"startOffset":4835,"endOffset":5022,"count":0},{"startOffset":5043,"endOffset":5064,"count":4},{"startOffset":5064,"endOffset":5081,"count":0},{"startOffset":5081,"endOffset":5412,"count":4},{"startOffset":5412,"endOffset":5601,"count":0},{"startOffset":5601,"endOffset":5686,"count":4},{"startOffset":5686,"endOffset":5753,"count":0},{"startOffset":5753,"endOffset":6020,"count":4},{"startOffset":5798,"endOffset":5838,"count":0}],"isBlockCoverage":true},{"functionName":"setStreamTimeout","ranges":[{"startOffset":6024,"endOffset":6834,"count":0}],"isBlockCoverage":false}]},{"scriptId":"467","url":"node:internal/dtrace","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":570,"count":1}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_REQUEST","ranges":[{"startOffset":97,"endOffset":105,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_RESPONSE","ranges":[{"startOffset":139,"endOffset":147,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_REQUEST","ranges":[{"startOffset":180,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_RESPONSE","ranges":[{"startOffset":222,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_SERVER_CONNECTION","ranges":[{"startOffset":265,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_STREAM_END","ranges":[{"startOffset":301,"endOffset":309,"count":0}],"isBlockCoverage":false}]},{"scriptId":"468","url":"node:internal/perf/observe","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15460,"count":1}],"isBlockCoverage":false},{"functionName":"queuePending","ranges":[{"startOffset":2518,"endOffset":2779,"count":0}],"isBlockCoverage":false},{"functionName":"getObserverType","ranges":[{"startOffset":2781,"endOffset":3121,"count":3},{"startOffset":2836,"endOffset":2885,"count":0},{"startOffset":2890,"endOffset":2945,"count":0},{"startOffset":2950,"endOffset":3003,"count":1},{"startOffset":3008,"endOffset":3059,"count":1},{"startOffset":3064,"endOffset":3115,"count":1}],"isBlockCoverage":true},{"functionName":"maybeDecrementObserverCounts","ranges":[{"startOffset":3123,"endOffset":3544,"count":0}],"isBlockCoverage":false},{"functionName":"maybeIncrementObserverCount","ranges":[{"startOffset":3546,"endOffset":3888,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3890,"endOffset":4896,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4898,"endOffset":8468,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":8634,"endOffset":8836,"count":0}],"isBlockCoverage":false},{"functionName":"bufferUserTiming","ranges":[{"startOffset":8897,"endOffset":9923,"count":0}],"isBlockCoverage":false},{"functionName":"bufferResourceTiming","ranges":[{"startOffset":10211,"endOffset":11475,"count":0}],"isBlockCoverage":false},{"functionName":"setResourceTimingBufferSize","ranges":[{"startOffset":11563,"endOffset":11904,"count":0}],"isBlockCoverage":false},{"functionName":"setDispatchBufferFull","ranges":[{"startOffset":11906,"endOffset":11971,"count":1}],"isBlockCoverage":true},{"functionName":"clearEntriesFromBuffer","ranges":[{"startOffset":11973,"endOffset":12573,"count":0}],"isBlockCoverage":false},{"functionName":"filterBufferMapByNameAndType","ranges":[{"startOffset":12575,"endOffset":13463,"count":0}],"isBlockCoverage":false},{"functionName":"observerCallback","ranges":[{"startOffset":13465,"endOffset":14583,"count":0}],"isBlockCoverage":false},{"functionName":"hasObserver","ranges":[{"startOffset":14620,"endOffset":14739,"count":3}],"isBlockCoverage":true},{"functionName":"startPerf","ranges":[{"startOffset":14742,"endOffset":14852,"count":0}],"isBlockCoverage":false},{"functionName":"stopPerf","ranges":[{"startOffset":14854,"endOffset":15171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"469","url":"node:internal/perf/performance_entry","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1731,"count":1}],"isBlockCoverage":false},{"functionName":"isPerformanceEntry","ranges":[{"startOffset":441,"endOffset":514,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceEntry","ranges":[{"startOffset":543,"endOffset":603,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":607,"endOffset":641,"count":0}],"isBlockCoverage":false},{"functionName":"get entryType","ranges":[{"startOffset":645,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":688,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":732,"endOffset":774,"count":0}],"isBlockCoverage":false},{"functionName":"get detail","ranges":[{"startOffset":778,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":820,"endOffset":1064,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1068,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"InternalPerformanceEntry","ranges":[{"startOffset":1288,"endOffset":1476,"count":0}],"isBlockCoverage":false}]},{"scriptId":"470","url":"node:dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28289,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCluster","ranges":[{"startOffset":2860,"endOffset":2957,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":3067,"endOffset":4495,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":4606,"endOffset":4684,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":4687,"endOffset":5130,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":5132,"endOffset":5697,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":5699,"endOffset":5991,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":6059,"endOffset":6469,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":6495,"endOffset":9938,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":9968,"endOffset":10764,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":10768,"endOffset":11114,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":11117,"endOffset":11759,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":11792,"endOffset":12099,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":12204,"endOffset":12645,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":12649,"endOffset":13409,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":13412,"endOffset":13796,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":13799,"endOffset":14226,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":14229,"endOffset":14367,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":14370,"endOffset":14494,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":14497,"endOffset":14694,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":15265,"endOffset":18158,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":18161,"endOffset":19300,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":19302,"endOffset":19479,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":19506,"endOffset":20074,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":20116,"endOffset":20249,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":20253,"endOffset":20307,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":20337,"endOffset":20527,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":20563,"endOffset":20873,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":20909,"endOffset":21057,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":21087,"endOffset":21261,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":21300,"endOffset":21492,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":21536,"endOffset":21736,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":21781,"endOffset":22043,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":22079,"endOffset":22453,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":22491,"endOffset":22868,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":22918,"endOffset":23525,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":23577,"endOffset":24190,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":24194,"endOffset":24357,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":24360,"endOffset":24524,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":24527,"endOffset":24781,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":24784,"endOffset":24899,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":24925,"endOffset":25032,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":25061,"endOffset":25170,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":25211,"endOffset":25268,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":25309,"endOffset":25366,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":25407,"endOffset":25464,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":25505,"endOffset":25562,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueSize","ranges":[{"startOffset":25601,"endOffset":25670,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueCount","ranges":[{"startOffset":25710,"endOffset":25780,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25899,"endOffset":25953,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26026,"endOffset":26082,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26235,"endOffset":26292,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26368,"endOffset":26427,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26583,"endOffset":26640,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26716,"endOffset":26775,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26927,"endOffset":26980,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27052,"endOffset":27107,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27259,"endOffset":27316,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27392,"endOffset":27451,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27558,"endOffset":27593,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27702,"endOffset":27739,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28024,"endOffset":28060,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":28064,"endOffset":28105,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"node:internal/dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1850,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":477,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":581,"endOffset":676,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":678,"endOffset":1322,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1325,"endOffset":1773,"count":0}],"isBlockCoverage":false}]},{"scriptId":"472","url":"node:diagnostics_channel","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9747,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":713,"endOffset":1122,"count":1}],"isBlockCoverage":false},{"functionName":"#finalizers","ranges":[{"startOffset":793,"endOffset":829,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":835,"endOffset":952,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":956,"endOffset":1004,"count":5},{"startOffset":992,"endOffset":997,"count":0}],"isBlockCoverage":true},{"functionName":"incRef","ranges":[{"startOffset":1008,"endOffset":1062,"count":0}],"isBlockCoverage":false},{"functionName":"decRef","ranges":[{"startOffset":1066,"endOffset":1120,"count":0}],"isBlockCoverage":false},{"functionName":"markActive","ranges":[{"startOffset":1124,"endOffset":1329,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMarkInactive","ranges":[{"startOffset":1331,"endOffset":1699,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTransform","ranges":[{"startOffset":1701,"endOffset":1751,"count":0}],"isBlockCoverage":false},{"functionName":"wrapStoreRun","ranges":[{"startOffset":1753,"endOffset":2081,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":2163,"endOffset":2333,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":2337,"endOffset":2614,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":2618,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":2790,"endOffset":2989,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":2993,"endOffset":3036,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":3040,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":3345,"endOffset":3684,"count":0}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":3706,"endOffset":3847,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3858,"endOffset":4043,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":4047,"endOffset":4132,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":4136,"endOffset":4173,"count":0}],"isBlockCoverage":false},{"functionName":"bindStore","ranges":[{"startOffset":4177,"endOffset":4270,"count":0}],"isBlockCoverage":false},{"functionName":"unbindStore","ranges":[{"startOffset":4274,"endOffset":4311,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":4315,"endOffset":4359,"count":2}],"isBlockCoverage":true},{"functionName":"publish","ranges":[{"startOffset":4363,"endOffset":4375,"count":0}],"isBlockCoverage":false},{"functionName":"runStores","ranges":[{"startOffset":4379,"endOffset":4466,"count":0}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":4506,"endOffset":4772,"count":5},{"startOffset":4584,"endOffset":4599,"count":0},{"startOffset":4632,"endOffset":4659,"count":0},{"startOffset":4661,"endOffset":4741,"count":0}],"isBlockCoverage":true},{"functionName":"subscribe","ranges":[{"startOffset":4774,"endOffset":4864,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":4866,"endOffset":4960,"count":0}],"isBlockCoverage":false},{"functionName":"hasSubscribers","ranges":[{"startOffset":4962,"endOffset":5097,"count":0}],"isBlockCoverage":false},{"functionName":"assertChannel","ranges":[{"startOffset":5186,"endOffset":5328,"count":0}],"isBlockCoverage":false},{"functionName":"TracingChannel","ranges":[{"startOffset":5355,"endOffset":6502,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":6506,"endOffset":6658,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":6662,"endOffset":6895,"count":0}],"isBlockCoverage":false},{"functionName":"traceSync","ranges":[{"startOffset":6899,"endOffset":7325,"count":0}],"isBlockCoverage":false},{"functionName":"tracePromise","ranges":[{"startOffset":7329,"endOffset":8430,"count":0}],"isBlockCoverage":false},{"functionName":"traceCallback","ranges":[{"startOffset":8434,"endOffset":9545,"count":0}],"isBlockCoverage":false},{"functionName":"tracingChannel","ranges":[{"startOffset":9549,"endOffset":9637,"count":0}],"isBlockCoverage":false}]},{"scriptId":"473","url":"node:internal/socket_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2709,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":235,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":380,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1039,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1194,"endOffset":1430,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1544,"endOffset":2404,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2408,"endOffset":2649,"count":0}],"isBlockCoverage":false}]},{"scriptId":"474","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-cli@0.0.11/node_modules/@vscode/test-cli/out/cli/util.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1181,"count":1}],"isBlockCoverage":true},{"functionName":"ensureArray","ranges":[{"startOffset":246,"endOffset":297,"count":5},{"startOffset":279,"endOffset":286,"count":2},{"startOffset":287,"endOffset":296,"count":3}],"isBlockCoverage":true},{"functionName":"readJSON","ranges":[{"startOffset":323,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"writeJSON","ranges":[{"startOffset":409,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"mutateObjectPrimitives","ranges":[{"startOffset":629,"endOffset":1179,"count":0}],"isBlockCoverage":false}]},{"scriptId":"475","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":231,"count":1}],"isBlockCoverage":true}]},{"scriptId":"476","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-cli@0.0.11/node_modules/@vscode/test-cli/out/cli/gatherFiles.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":939,"count":1}],"isBlockCoverage":true},{"functionName":"gatherFiles","ranges":[{"startOffset":208,"endOffset":938,"count":1},{"startOffset":348,"endOffset":353,"count":0},{"startOffset":446,"endOffset":460,"count":0},{"startOffset":511,"endOffset":646,"count":0},{"startOffset":879,"endOffset":888,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":369,"endOffset":390,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":548,"endOffset":573,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":740,"endOffset":773,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":753,"endOffset":772,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":889,"endOffset":911,"count":0}],"isBlockCoverage":false}]},{"scriptId":"477","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/lib/platform-shims/esm.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1876,"count":1},{"startOffset":706,"endOffset":748,"count":0},{"startOffset":1124,"endOffset":1140,"count":0},{"startOffset":1551,"endOffset":1557,"count":0}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":943,"endOffset":985,"count":3}],"isBlockCoverage":true},{"functionName":"getCallerFile","ranges":[{"startOffset":1015,"endOffset":1072,"count":0}],"isBlockCoverage":false},{"functionName":"argv","ranges":[{"startOffset":1256,"endOffset":1274,"count":2}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":1315,"endOffset":1368,"count":0}],"isBlockCoverage":false},{"functionName":"execPath","ranges":[{"startOffset":1384,"endOffset":1406,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":1590,"endOffset":1637,"count":0}],"isBlockCoverage":false},{"functionName":"requireDirectory","ranges":[{"startOffset":1659,"endOffset":1716,"count":0}],"isBlockCoverage":false},{"functionName":"stringWidth","ranges":[{"startOffset":1733,"endOffset":1774,"count":0}],"isBlockCoverage":false}]},{"scriptId":"478","url":"node:assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31809,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2693,"endOffset":2877,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":3458,"endOffset":3506,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":4060,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":4337,"endOffset":5318,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":5434,"endOffset":6374,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":6376,"endOffset":8021,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":8023,"endOffset":9440,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":9442,"endOffset":12536,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":12538,"endOffset":13146,"count":0}],"isBlockCoverage":false},{"functionName":"ok","ranges":[{"startOffset":13279,"endOffset":13340,"count":0}],"isBlockCoverage":false},{"functionName":"equal","ranges":[{"startOffset":13599,"endOffset":13971,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":14190,"endOffset":14566,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":14766,"endOffset":15131,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":15337,"endOffset":15710,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":15953,"endOffset":16342,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":16591,"endOffset":16988,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":17193,"endOffset":17506,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":17718,"endOffset":18039,"count":4},{"startOffset":17799,"endOffset":17858,"count":0},{"startOffset":17893,"endOffset":18037,"count":0}],"isBlockCoverage":true},{"functionName":"Comparison","ranges":[{"startOffset":18063,"endOffset":18445,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":18449,"endOffset":19168,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":19170,"endOffset":22574,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":22576,"endOffset":22716,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":22718,"endOffset":23082,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":23084,"endOffset":23798,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":23800,"endOffset":25417,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":25419,"endOffset":26037,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":26039,"endOffset":26690,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":26848,"endOffset":26942,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":27121,"endOffset":27233,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":27395,"endOffset":27489,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":27655,"endOffset":27767,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":27895,"endOffset":29684,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":29687,"endOffset":30770,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":30966,"endOffset":31058,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":31266,"endOffset":31372,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":31504,"endOffset":31573,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"node:internal/assert/assertion_error","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17119,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1465,"endOffset":1758,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1760,"endOffset":2368,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2370,"endOffset":11106,"count":0}],"isBlockCoverage":false},{"functionName":"addEllipsis","ranges":[{"startOffset":11108,"endOffset":11411,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":11452,"endOffset":16148,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":16152,"endOffset":16227,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16231,"endOffset":17082,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"node:internal/util/colors","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1122,"count":1}],"isBlockCoverage":false},{"functionName":"lazyInternalTTY","ranges":[{"startOffset":32,"endOffset":127,"count":0}],"isBlockCoverage":false},{"functionName":"shouldColorize","ranges":[{"startOffset":244,"endOffset":504,"count":2},{"startOffset":316,"endOffset":375,"count":0},{"startOffset":492,"endOffset":498,"count":0}],"isBlockCoverage":true},{"functionName":"refresh","ranges":[{"startOffset":508,"endOffset":1090,"count":1},{"startOffset":676,"endOffset":680,"count":0},{"startOffset":736,"endOffset":740,"count":0},{"startOffset":796,"endOffset":800,"count":0},{"startOffset":857,"endOffset":861,"count":0},{"startOffset":915,"endOffset":919,"count":0},{"startOffset":974,"endOffset":978,"count":0},{"startOffset":1031,"endOffset":1035,"count":0}],"isBlockCoverage":true}]},{"scriptId":"481","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5058,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1535,"endOffset":1641,"count":11}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1643,"endOffset":2112,"count":1},{"startOffset":1719,"endOffset":1754,"count":0},{"startOffset":1791,"endOffset":1820,"count":0},{"startOffset":1902,"endOffset":1947,"count":0}],"isBlockCoverage":true},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2261,"endOffset":2478,"count":4},{"startOffset":2352,"endOffset":2440,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream","ranges":[{"startOffset":2481,"endOffset":3453,"count":2},{"startOffset":2550,"endOffset":2577,"count":0},{"startOffset":2614,"endOffset":2643,"count":0},{"startOffset":2725,"endOffset":2770,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3744,"endOffset":4180,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4236,"endOffset":4376,"count":15},{"startOffset":4293,"endOffset":4324,"count":1}],"isBlockCoverage":true},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4413,"endOffset":4559,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4595,"endOffset":4734,"count":7},{"startOffset":4651,"endOffset":4682,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4776,"endOffset":4911,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":4951,"endOffset":5001,"count":0}],"isBlockCoverage":false}]},{"scriptId":"482","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6485,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2549,"endOffset":3002,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3160,"endOffset":6156,"count":2},{"startOffset":3364,"endOffset":3722,"count":0},{"startOffset":4063,"endOffset":4089,"count":0},{"startOffset":4127,"endOffset":4685,"count":0},{"startOffset":4703,"endOffset":4731,"count":0},{"startOffset":4747,"endOffset":5010,"count":0},{"startOffset":5045,"endOffset":5175,"count":0},{"startOffset":5211,"endOffset":5412,"count":0},{"startOffset":5417,"endOffset":5434,"count":0},{"startOffset":5439,"endOffset":5479,"count":0},{"startOffset":5484,"endOffset":5531,"count":0},{"startOffset":5573,"endOffset":5601,"count":0},{"startOffset":5631,"endOffset":6155,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4899,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5948,"endOffset":6001,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6158,"endOffset":6431,"count":0}],"isBlockCoverage":false}]},{"scriptId":"483","url":"node:internal/assert/calltracker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3452,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":462,"endOffset":1495,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1497,"endOffset":3420,"count":0}],"isBlockCoverage":false}]},{"scriptId":"484","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/supports-color@9.4.0/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3855,"count":1},{"startOffset":738,"endOffset":762,"count":0},{"startOffset":869,"endOffset":893,"count":0}],"isBlockCoverage":true},{"functionName":"hasFlag","ranges":[{"startOffset":235,"endOffset":585,"count":16},{"startOffset":281,"endOffset":303,"count":0},{"startOffset":359,"endOffset":363,"count":0},{"startOffset":385,"endOffset":390,"count":0},{"startOffset":519,"endOffset":582,"count":0}],"isBlockCoverage":true},{"functionName":"envForceColor","ranges":[{"startOffset":895,"endOffset":1159,"count":2},{"startOffset":949,"endOffset":1157,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":1161,"endOffset":1320,"count":2},{"startOffset":1212,"endOffset":1232,"count":0}],"isBlockCoverage":true},{"functionName":"_supportsColor","ranges":[{"startOffset":1322,"endOffset":3494,"count":2},{"startOffset":1479,"endOffset":1520,"count":0},{"startOffset":1570,"endOffset":1588,"count":0},{"startOffset":1614,"endOffset":1630,"count":0},{"startOffset":1740,"endOffset":1758,"count":0},{"startOffset":1788,"endOffset":1806,"count":0},{"startOffset":1918,"endOffset":1940,"count":0},{"startOffset":1942,"endOffset":1958,"count":0},{"startOffset":1992,"endOffset":2019,"count":0},{"startOffset":2021,"endOffset":2037,"count":0},{"startOffset":2096,"endOffset":2114,"count":0},{"startOffset":2151,"endOffset":2508,"count":0},{"startOffset":2528,"endOffset":2776,"count":0},{"startOffset":2810,"endOffset":2891,"count":0},{"startOffset":2945,"endOffset":3493,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2688,"endOffset":2707,"count":0}],"isBlockCoverage":false},{"functionName":"createSupportsColor","ranges":[{"startOffset":3503,"endOffset":3687,"count":2}],"isBlockCoverage":true}]},{"scriptId":"485","url":"node:process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":83,"count":1}],"isBlockCoverage":false}]},{"scriptId":"486","url":"node:internal/process/report","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2548,"count":1}],"isBlockCoverage":false},{"functionName":"writeReport","ranges":[{"startOffset":293,"endOffset":675,"count":0}],"isBlockCoverage":false},{"functionName":"getReport","ranges":[{"startOffset":679,"endOffset":844,"count":0}],"isBlockCoverage":false},{"functionName":"get directory","ranges":[{"startOffset":848,"endOffset":899,"count":0}],"isBlockCoverage":false},{"functionName":"set directory","ranges":[{"startOffset":903,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"get filename","ranges":[{"startOffset":995,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"set filename","ranges":[{"startOffset":1048,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"get compact","ranges":[{"startOffset":1140,"endOffset":1187,"count":0}],"isBlockCoverage":false},{"functionName":"set compact","ranges":[{"startOffset":1191,"endOffset":1268,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":1272,"endOffset":1317,"count":0}],"isBlockCoverage":false},{"functionName":"set signal","ranges":[{"startOffset":1321,"endOffset":1458,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnFatalError","ranges":[{"startOffset":1462,"endOffset":1534,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnFatalError","ranges":[{"startOffset":1538,"endOffset":1656,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnSignal","ranges":[{"startOffset":1660,"endOffset":1724,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnSignal","ranges":[{"startOffset":1728,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnUncaughtException","ranges":[{"startOffset":1893,"endOffset":1979,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnUncaughtException","ranges":[{"startOffset":1983,"endOffset":2115,"count":0}],"isBlockCoverage":false},{"functionName":"addSignalHandler","ranges":[{"startOffset":2121,"endOffset":2292,"count":0}],"isBlockCoverage":false},{"functionName":"removeSignalHandler","ranges":[{"startOffset":2294,"endOffset":2418,"count":0}],"isBlockCoverage":false},{"functionName":"signalHandler","ranges":[{"startOffset":2420,"endOffset":2494,"count":0}],"isBlockCoverage":false}]},{"scriptId":"487","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/yargs-factory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":77635,"count":1},{"startOffset":35,"endOffset":65,"count":0},{"startOffset":622,"endOffset":652,"count":0}],"isBlockCoverage":true},{"functionName":"__classPrivateFieldSet","ranges":[{"startOffset":70,"endOffset":585,"count":38},{"startOffset":137,"endOffset":191,"count":0},{"startOffset":213,"endOffset":218,"count":0},{"startOffset":220,"endOffset":289,"count":0},{"startOffset":326,"endOffset":352,"count":0},{"startOffset":377,"endOffset":472,"count":0},{"startOffset":498,"endOffset":523,"count":0},{"startOffset":528,"endOffset":545,"count":0}],"isBlockCoverage":true},{"functionName":"__classPrivateFieldGet","ranges":[{"startOffset":657,"endOffset":1077,"count":650},{"startOffset":716,"endOffset":721,"count":0},{"startOffset":723,"endOffset":792,"count":0},{"startOffset":829,"endOffset":855,"count":0},{"startOffset":880,"endOffset":976,"count":0},{"startOffset":1001,"endOffset":1004,"count":0},{"startOffset":1020,"endOffset":1038,"count":0},{"startOffset":1043,"endOffset":1052,"count":0}],"isBlockCoverage":true},{"functionName":"YargsFactory","ranges":[{"startOffset":2778,"endOffset":3211,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2820,"endOffset":3208,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3031,"endOffset":3090,"count":0}],"isBlockCoverage":false},{"functionName":"YargsInstance","ranges":[{"startOffset":5190,"endOffset":8387,"count":1}],"isBlockCoverage":true},{"functionName":"addHelpOpt","ranges":[{"startOffset":8392,"endOffset":9266,"count":1},{"startOffset":8601,"endOffset":8795,"count":0},{"startOffset":8822,"endOffset":8842,"count":0},{"startOffset":8856,"endOffset":8868,"count":0},{"startOffset":8954,"endOffset":8959,"count":0}],"isBlockCoverage":true},{"functionName":"help","ranges":[{"startOffset":9271,"endOffset":9335,"count":1}],"isBlockCoverage":true},{"functionName":"addShowHiddenOpt","ranges":[{"startOffset":9340,"endOffset":9953,"count":0}],"isBlockCoverage":false},{"functionName":"showHidden","ranges":[{"startOffset":9958,"endOffset":10034,"count":0}],"isBlockCoverage":false},{"functionName":"alias","ranges":[{"startOffset":10039,"endOffset":10268,"count":15}],"isBlockCoverage":true},{"functionName":"array","ranges":[{"startOffset":10273,"endOffset":10472,"count":12}],"isBlockCoverage":true},{"functionName":"boolean","ranges":[{"startOffset":10477,"endOffset":10680,"count":22}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":10685,"endOffset":11673,"count":0}],"isBlockCoverage":false},{"functionName":"choices","ranges":[{"startOffset":11678,"endOffset":11913,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":11918,"endOffset":13683,"count":0}],"isBlockCoverage":false},{"functionName":"conflicts","ranges":[{"startOffset":13688,"endOffset":13913,"count":0}],"isBlockCoverage":false},{"functionName":"config","ranges":[{"startOffset":13918,"endOffset":14986,"count":0}],"isBlockCoverage":false},{"functionName":"completion","ranges":[{"startOffset":14991,"endOffset":15726,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":15731,"endOffset":16161,"count":0}],"isBlockCoverage":false},{"functionName":"commands","ranges":[{"startOffset":16166,"endOffset":16333,"count":0}],"isBlockCoverage":false},{"functionName":"commandDir","ranges":[{"startOffset":16338,"endOffset":16776,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":16781,"endOffset":16980,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":16985,"endOffset":17995,"count":7},{"startOffset":17166,"endOffset":17383,"count":0},{"startOffset":17425,"endOffset":17864,"count":0}],"isBlockCoverage":true},{"functionName":"defaults","ranges":[{"startOffset":18000,"endOffset":18109,"count":0}],"isBlockCoverage":false},{"functionName":"demandCommand","ranges":[{"startOffset":18114,"endOffset":18635,"count":0}],"isBlockCoverage":false},{"functionName":"demand","ranges":[{"startOffset":18640,"endOffset":19771,"count":0}],"isBlockCoverage":false},{"functionName":"demandOption","ranges":[{"startOffset":19776,"endOffset":20026,"count":0}],"isBlockCoverage":false},{"functionName":"deprecateOption","ranges":[{"startOffset":20031,"endOffset":20278,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":20283,"endOffset":20557,"count":36}],"isBlockCoverage":true},{"functionName":"detectLocale","ranges":[{"startOffset":20562,"endOffset":20749,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":20754,"endOffset":21086,"count":0}],"isBlockCoverage":false},{"functionName":"epilogue","ranges":[{"startOffset":21091,"endOffset":21264,"count":1}],"isBlockCoverage":true},{"functionName":"epilog","ranges":[{"startOffset":21269,"endOffset":21323,"count":0}],"isBlockCoverage":false},{"functionName":"example","ranges":[{"startOffset":21328,"endOffset":21702,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":21707,"endOffset":22041,"count":0}],"isBlockCoverage":false},{"functionName":"exitProcess","ranges":[{"startOffset":22046,"endOffset":22241,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":22246,"endOffset":22576,"count":0}],"isBlockCoverage":false},{"functionName":"getAliases","ranges":[{"startOffset":22581,"endOffset":22656,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletion","ranges":[{"startOffset":22661,"endOffset":23282,"count":0}],"isBlockCoverage":false},{"functionName":"getDemandedOptions","ranges":[{"startOffset":23287,"endOffset":23429,"count":1}],"isBlockCoverage":true},{"functionName":"getDemandedCommands","ranges":[{"startOffset":23434,"endOffset":23578,"count":1}],"isBlockCoverage":true},{"functionName":"getDeprecatedOptions","ranges":[{"startOffset":23583,"endOffset":23729,"count":0}],"isBlockCoverage":false},{"functionName":"getDetectLocale","ranges":[{"startOffset":23734,"endOffset":23838,"count":0}],"isBlockCoverage":false},{"functionName":"getExitProcess","ranges":[{"startOffset":23843,"endOffset":23945,"count":0}],"isBlockCoverage":false},{"functionName":"getGroups","ranges":[{"startOffset":23950,"endOffset":24128,"count":0}],"isBlockCoverage":false},{"functionName":"getHelp","ranges":[{"startOffset":24133,"endOffset":25204,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":25209,"endOffset":25303,"count":1}],"isBlockCoverage":true},{"functionName":"getStrict","ranges":[{"startOffset":25308,"endOffset":25400,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictCommands","ranges":[{"startOffset":25405,"endOffset":25513,"count":0}],"isBlockCoverage":false},{"functionName":"getStrictOptions","ranges":[{"startOffset":25518,"endOffset":25624,"count":0}],"isBlockCoverage":false},{"functionName":"global","ranges":[{"startOffset":25629,"endOffset":26292,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":26297,"endOffset":27059,"count":34},{"startOffset":26667,"endOffset":26775,"count":0},{"startOffset":26889,"endOffset":26894,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26916,"endOffset":27030,"count":135},{"startOffset":26968,"endOffset":26981,"count":0}],"isBlockCoverage":true},{"functionName":"hide","ranges":[{"startOffset":27064,"endOffset":27247,"count":0}],"isBlockCoverage":false},{"functionName":"implies","ranges":[{"startOffset":27252,"endOffset":27480,"count":0}],"isBlockCoverage":false},{"functionName":"locale","ranges":[{"startOffset":27485,"endOffset":27923,"count":1},{"startOffset":27593,"endOffset":27730,"count":0}],"isBlockCoverage":true},{"functionName":"middleware","ranges":[{"startOffset":27928,"endOffset":28127,"count":0}],"isBlockCoverage":false},{"functionName":"nargs","ranges":[{"startOffset":28132,"endOffset":28360,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":28365,"endOffset":28529,"count":0}],"isBlockCoverage":false},{"functionName":"number","ranges":[{"startOffset":28534,"endOffset":28735,"count":8}],"isBlockCoverage":true},{"functionName":"option","ranges":[{"startOffset":28740,"endOffset":33070,"count":34},{"startOffset":28871,"endOffset":28983,"count":0},{"startOffset":29040,"endOffset":29081,"count":0},{"startOffset":29262,"endOffset":29270,"count":0},{"startOffset":29300,"endOffset":29834,"count":0},{"startOffset":29965,"endOffset":29992,"count":15},{"startOffset":30083,"endOffset":30152,"count":0},{"startOffset":30247,"endOffset":30304,"count":0},{"startOffset":30339,"endOffset":30463,"count":0},{"startOffset":30495,"endOffset":30562,"count":0},{"startOffset":30597,"endOffset":30660,"count":7},{"startOffset":30704,"endOffset":30767,"count":0},{"startOffset":30809,"endOffset":30868,"count":0},{"startOffset":30897,"endOffset":30964,"count":0},{"startOffset":30996,"endOffset":31048,"count":0},{"startOffset":31078,"endOffset":31141,"count":0},{"startOffset":31170,"endOffset":31231,"count":0},{"startOffset":31374,"endOffset":31500,"count":15},{"startOffset":31462,"endOffset":31486,"count":5},{"startOffset":31552,"endOffset":31674,"count":9},{"startOffset":31638,"endOffset":31660,"count":3},{"startOffset":31728,"endOffset":31852,"count":4},{"startOffset":31906,"endOffset":32030,"count":6},{"startOffset":31993,"endOffset":32016,"count":3},{"startOffset":32082,"endOffset":32130,"count":0},{"startOffset":32180,"endOffset":32241,"count":0},{"startOffset":32282,"endOffset":32421,"count":0},{"startOffset":32458,"endOffset":32515,"count":0},{"startOffset":32573,"endOffset":32584,"count":0},{"startOffset":32767,"endOffset":32810,"count":0},{"startOffset":32898,"endOffset":32945,"count":0},{"startOffset":32979,"endOffset":33033,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28910,"endOffset":28971,"count":0}],"isBlockCoverage":false},{"functionName":"options","ranges":[{"startOffset":33075,"endOffset":33138,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":33143,"endOffset":35612,"count":1},{"startOffset":33509,"endOffset":33647,"count":0},{"startOffset":33696,"endOffset":33826,"count":0},{"startOffset":34018,"endOffset":34087,"count":0},{"startOffset":34337,"endOffset":35202,"count":0},{"startOffset":35309,"endOffset":35505,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34387,"endOffset":34733,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34758,"endOffset":35066,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35093,"endOffset":35190,"count":0}],"isBlockCoverage":false},{"functionName":"parseAsync","ranges":[{"startOffset":35617,"endOffset":35848,"count":0}],"isBlockCoverage":false},{"functionName":"parseSync","ranges":[{"startOffset":35853,"endOffset":36164,"count":1},{"startOffset":36003,"endOffset":36129,"count":0}],"isBlockCoverage":true},{"functionName":"parserConfiguration","ranges":[{"startOffset":36169,"endOffset":36362,"count":0}],"isBlockCoverage":false},{"functionName":"pkgConf","ranges":[{"startOffset":36367,"endOffset":37092,"count":0}],"isBlockCoverage":false},{"functionName":"positional","ranges":[{"startOffset":37097,"endOffset":38747,"count":0}],"isBlockCoverage":false},{"functionName":"recommendCommands","ranges":[{"startOffset":38752,"endOffset":38965,"count":0}],"isBlockCoverage":false},{"functionName":"required","ranges":[{"startOffset":38970,"endOffset":39046,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":39051,"endOffset":39126,"count":0}],"isBlockCoverage":false},{"functionName":"requiresArg","ranges":[{"startOffset":39131,"endOffset":39534,"count":0}],"isBlockCoverage":false},{"functionName":"showCompletionScript","ranges":[{"startOffset":39539,"endOffset":39945,"count":0}],"isBlockCoverage":false},{"functionName":"showHelp","ranges":[{"startOffset":39950,"endOffset":41150,"count":0}],"isBlockCoverage":false},{"functionName":"scriptName","ranges":[{"startOffset":41155,"endOffset":41274,"count":0}],"isBlockCoverage":false},{"functionName":"showHelpOnFail","ranges":[{"startOffset":41279,"endOffset":41522,"count":0}],"isBlockCoverage":false},{"functionName":"showVersion","ranges":[{"startOffset":41527,"endOffset":41723,"count":0}],"isBlockCoverage":false},{"functionName":"skipValidation","ranges":[{"startOffset":41728,"endOffset":41902,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":41907,"endOffset":42095,"count":0}],"isBlockCoverage":false},{"functionName":"strictCommands","ranges":[{"startOffset":42100,"endOffset":42304,"count":0}],"isBlockCoverage":false},{"functionName":"strictOptions","ranges":[{"startOffset":42309,"endOffset":42511,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":42516,"endOffset":42717,"count":9}],"isBlockCoverage":true},{"functionName":"terminalWidth","ranges":[{"startOffset":42722,"endOffset":42859,"count":1}],"isBlockCoverage":true},{"functionName":"updateLocale","ranges":[{"startOffset":42864,"endOffset":42929,"count":0}],"isBlockCoverage":false},{"functionName":"updateStrings","ranges":[{"startOffset":42934,"endOffset":43201,"count":0}],"isBlockCoverage":false},{"functionName":"usage","ranges":[{"startOffset":43206,"endOffset":43968,"count":0}],"isBlockCoverage":false},{"functionName":"usageConfiguration","ranges":[{"startOffset":43973,"endOffset":44164,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":44169,"endOffset":45641,"count":1},{"startOffset":44403,"endOffset":44691,"count":0},{"startOffset":44817,"endOffset":45111,"count":0},{"startOffset":45206,"endOffset":45225,"count":0},{"startOffset":45426,"endOffset":45438,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":45646,"endOffset":45831,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45836,"endOffset":47587,"count":1},{"startOffset":47433,"endOffset":47586,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":47592,"endOffset":48843,"count":1}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":47646,"endOffset":48224,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":48245,"endOffset":48825,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":48848,"endOffset":49551,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":49556,"endOffset":49925,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":49930,"endOffset":51516,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":51521,"endOffset":52801,"count":1},{"startOffset":51830,"endOffset":51962,"count":0},{"startOffset":52322,"endOffset":52482,"count":0},{"startOffset":52484,"endOffset":52776,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":52003,"endOffset":52197,"count":1},{"startOffset":52183,"endOffset":52186,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":52806,"endOffset":52920,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":52925,"endOffset":53037,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":53042,"endOffset":53599,"count":1},{"startOffset":53150,"endOffset":53157,"count":0},{"startOffset":53253,"endOffset":53344,"count":0},{"startOffset":53345,"endOffset":53429,"count":0},{"startOffset":53430,"endOffset":53518,"count":0},{"startOffset":53519,"endOffset":53541,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":53604,"endOffset":53706,"count":1},{"startOffset":53687,"endOffset":53699,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":53711,"endOffset":54132,"count":1},{"startOffset":53777,"endOffset":53789,"count":0},{"startOffset":53865,"endOffset":54105,"count":2},{"startOffset":53966,"endOffset":54039,"count":0},{"startOffset":54041,"endOffset":54095,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54137,"endOffset":55496,"count":1},{"startOffset":54284,"endOffset":54353,"count":0},{"startOffset":55312,"endOffset":55329,"count":0},{"startOffset":55406,"endOffset":55411,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":54832,"endOffset":55057,"count":3},{"startOffset":54902,"endOffset":54964,"count":1},{"startOffset":54964,"endOffset":55043,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55501,"endOffset":55751,"count":51}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55595,"endOffset":55743,"count":51}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55756,"endOffset":56030,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":55899,"endOffset":56022,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56035,"endOffset":56388,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56172,"endOffset":56380,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56393,"endOffset":56863,"count":58},{"startOffset":56504,"endOffset":56597,"count":0},{"startOffset":56656,"endOffset":56764,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56530,"endOffset":56585,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":56616,"endOffset":56648,"count":58}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56868,"endOffset":56982,"count":109},{"startOffset":56935,"endOffset":56956,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":56987,"endOffset":57134,"count":36}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57139,"endOffset":59505,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":57602,"endOffset":57680,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":57746,"endOffset":57828,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":57862,"endOffset":57939,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":57973,"endOffset":58050,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":58087,"endOffset":58167,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":58204,"endOffset":58284,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":58351,"endOffset":58428,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":58470,"endOffset":58555,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":58596,"endOffset":58680,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":58725,"endOffset":58813,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":58848,"endOffset":58926,"count":1}],"isBlockCoverage":true},{"functionName":"set value","ranges":[{"startOffset":58966,"endOffset":59049,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59510,"endOffset":59673,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":59585,"endOffset":59665,"count":1}],"isBlockCoverage":true},{"functionName":"getInternalMethods","ranges":[{"startOffset":59678,"endOffset":60790,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60795,"endOffset":60900,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":60905,"endOffset":61002,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61007,"endOffset":61108,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61113,"endOffset":61216,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61221,"endOffset":61334,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61339,"endOffset":61440,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61445,"endOffset":61556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61561,"endOffset":61666,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61671,"endOffset":61781,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61786,"endOffset":62575,"count":1},{"startOffset":61912,"endOffset":61924,"count":0},{"startOffset":61966,"endOffset":61978,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":62580,"endOffset":66700,"count":1},{"startOffset":64911,"endOffset":64987,"count":0},{"startOffset":65214,"endOffset":65295,"count":0},{"startOffset":65578,"endOffset":65645,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":63045,"endOffset":63197,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":63366,"endOffset":63640,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":64283,"endOffset":64428,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64394,"endOffset":64416,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":64461,"endOffset":64602,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64570,"endOffset":64590,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66705,"endOffset":66829,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66834,"endOffset":75563,"count":1},{"startOffset":67029,"endOffset":67093,"count":0},{"startOffset":68788,"endOffset":68900,"count":0},{"startOffset":69166,"endOffset":69171,"count":0},{"startOffset":69292,"endOffset":69384,"count":0},{"startOffset":69871,"endOffset":71299,"count":0},{"startOffset":71388,"endOffset":71495,"count":0},{"startOffset":71496,"endOffset":71538,"count":0},{"startOffset":71540,"endOffset":71772,"count":0},{"startOffset":71881,"endOffset":71903,"count":0},{"startOffset":71905,"endOffset":72200,"count":0},{"startOffset":72237,"endOffset":73119,"count":0},{"startOffset":73232,"endOffset":73500,"count":0},{"startOffset":73541,"endOffset":73863,"count":0},{"startOffset":73998,"endOffset":74191,"count":0},{"startOffset":74281,"endOffset":74320,"count":0},{"startOffset":74805,"endOffset":74811,"count":0},{"startOffset":74861,"endOffset":74882,"count":0},{"startOffset":74884,"endOffset":75153,"count":0},{"startOffset":75204,"endOffset":75406,"count":0},{"startOffset":75502,"endOffset":75508,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":68189,"endOffset":68512,"count":13},{"startOffset":68280,"endOffset":68292,"count":0},{"startOffset":68294,"endOffset":68344,"count":0},{"startOffset":68435,"endOffset":68447,"count":0},{"startOffset":68449,"endOffset":68502,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":69201,"endOffset":69218,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":72660,"endOffset":73005,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":74056,"endOffset":74175,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":74941,"endOffset":75129,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":75568,"endOffset":77082,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":75723,"endOffset":77075,"count":1},{"startOffset":75780,"endOffset":75818,"count":0},{"startOffset":76157,"endOffset":76295,"count":0},{"startOffset":76369,"endOffset":76393,"count":0},{"startOffset":76395,"endOffset":76555,"count":0},{"startOffset":76642,"endOffset":76785,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":77087,"endOffset":77187,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":77192,"endOffset":77531,"count":85},{"startOffset":77361,"endOffset":77525,"count":0}],"isBlockCoverage":true},{"functionName":"isYargsInstance","ranges":[{"startOffset":77541,"endOffset":77634,"count":0}],"isBlockCoverage":false}]},{"scriptId":"488","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/cliui@8.0.1/node_modules/cliui/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":309,"count":1}],"isBlockCoverage":true},{"functionName":"ui","ranges":[{"startOffset":170,"endOffset":308,"count":0}],"isBlockCoverage":false}]},{"scriptId":"489","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/esm/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1647,"count":1}],"isBlockCoverage":true},{"functionName":"globStreamSync","ranges":[{"startOffset":291,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"globStream","ranges":[{"startOffset":401,"endOffset":495,"count":0}],"isBlockCoverage":false},{"functionName":"globSync","ranges":[{"startOffset":503,"endOffset":597,"count":0}],"isBlockCoverage":false},{"functionName":"glob_","ranges":[{"startOffset":598,"endOffset":691,"count":1}],"isBlockCoverage":true},{"functionName":"globIterateSync","ranges":[{"startOffset":699,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"globIterate","ranges":[{"startOffset":811,"endOffset":907,"count":0}],"isBlockCoverage":false}]},{"scriptId":"490","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/escalade@3.2.0/node_modules/escalade/sync/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":404,"count":1}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":101,"endOffset":403,"count":1},{"startOffset":223,"endOffset":249,"count":0},{"startOffset":265,"endOffset":401,"count":3},{"startOffset":319,"endOffset":344,"count":1},{"startOffset":344,"endOffset":392,"count":2},{"startOffset":392,"endOffset":398,"count":0}],"isBlockCoverage":true}]},{"scriptId":"491","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/esm/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39098,"count":1},{"startOffset":2711,"endOffset":2720,"count":0},{"startOffset":2860,"endOffset":2876,"count":0}],"isBlockCoverage":true},{"functionName":"minimatch","ranges":[{"startOffset":239,"endOffset":486,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTest","ranges":[{"startOffset":614,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestDot","ranges":[{"startOffset":695,"endOffset":726,"count":0}],"isBlockCoverage":false},{"functionName":"starDotExtTestNocase","ranges":[{"startOffset":757,"endOffset":869,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":808,"endOffset":866,"count":4}],"isBlockCoverage":true},{"functionName":"starDotExtTestNocaseDot","ranges":[{"startOffset":903,"endOffset":993,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTest","ranges":[{"startOffset":1055,"endOffset":1099,"count":0}],"isBlockCoverage":false},{"functionName":"starDotStarTestDot","ranges":[{"startOffset":1128,"endOffset":1177,"count":0}],"isBlockCoverage":false},{"functionName":"dotStarTest","ranges":[{"startOffset":1228,"endOffset":1279,"count":0}],"isBlockCoverage":false},{"functionName":"starTest","ranges":[{"startOffset":1322,"endOffset":1365,"count":0}],"isBlockCoverage":false},{"functionName":"starTestDot","ranges":[{"startOffset":1387,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocase","ranges":[{"startOffset":1505,"endOffset":1695,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNocaseDot","ranges":[{"startOffset":1725,"endOffset":1918,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestDot","ranges":[{"startOffset":1942,"endOffset":2071,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTest","ranges":[{"startOffset":2092,"endOffset":2218,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExt","ranges":[{"startOffset":2244,"endOffset":2342,"count":0}],"isBlockCoverage":false},{"functionName":"qmarksTestNoExtDot","ranges":[{"startOffset":2371,"endOffset":2474,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":3543,"endOffset":3607,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":3648,"endOffset":3686,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":3712,"endOffset":5280,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":5590,"endOffset":5939,"count":1},{"startOffset":5909,"endOffset":5938,"count":0}],"isBlockCoverage":true},{"functionName":"makeRe","ranges":[{"startOffset":6644,"endOffset":6711,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":6761,"endOffset":6983,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":7108,"endOffset":7160,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7169,"endOffset":38797,"count":1}],"isBlockCoverage":true},{"functionName":"Minimatch","ranges":[{"startOffset":7449,"endOffset":8615,"count":1},{"startOffset":7549,"endOffset":7554,"count":0},{"startOffset":7661,"endOffset":7679,"count":0},{"startOffset":7892,"endOffset":7964,"count":0},{"startOffset":8388,"endOffset":8416,"count":0},{"startOffset":8453,"endOffset":8467,"count":0}],"isBlockCoverage":true},{"functionName":"hasMagic","ranges":[{"startOffset":8620,"endOffset":8947,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":8952,"endOffset":8967,"count":4}],"isBlockCoverage":true},{"functionName":"make","ranges":[{"startOffset":8972,"endOffset":11802,"count":1},{"startOffset":9142,"endOffset":9170,"count":0},{"startOffset":9172,"endOffset":9236,"count":0},{"startOffset":9259,"endOffset":9321,"count":0},{"startOffset":9512,"endOffset":9585,"count":0},{"startOffset":11366,"endOffset":11752,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":9539,"endOffset":9574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10215,"endOffset":10238,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10412,"endOffset":11120,"count":1},{"startOffset":10459,"endOffset":10485,"count":0},{"startOffset":10487,"endOffset":11062,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10877,"endOffset":10897,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11007,"endOffset":11027,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11088,"endOffset":11108,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11255,"endOffset":11283,"count":1}],"isBlockCoverage":true},{"functionName":"preprocess","ranges":[{"startOffset":12103,"endOffset":13171,"count":1},{"startOffset":12230,"endOffset":12515,"count":0},{"startOffset":12813,"endOffset":13139,"count":0}],"isBlockCoverage":true},{"functionName":"adjascentGlobstarOptimize","ranges":[{"startOffset":13221,"endOffset":13661,"count":0}],"isBlockCoverage":false},{"functionName":"levelOneOptimize","ranges":[{"startOffset":13721,"endOffset":14376,"count":0}],"isBlockCoverage":false},{"functionName":"levelTwoFileOptimize","ranges":[{"startOffset":14381,"endOffset":15869,"count":0}],"isBlockCoverage":false},{"functionName":"firstPhasePreProcess","ranges":[{"startOffset":16700,"endOffset":19937,"count":1},{"startOffset":17136,"endOffset":17255,"count":0},{"startOffset":17422,"endOffset":17501,"count":0},{"startOffset":17711,"endOffset":17775,"count":0},{"startOffset":17776,"endOffset":17813,"count":0},{"startOffset":17814,"endOffset":17844,"count":0},{"startOffset":17845,"endOffset":17882,"count":0},{"startOffset":17883,"endOffset":17921,"count":0},{"startOffset":17923,"endOffset":18302,"count":0},{"startOffset":18471,"endOffset":18911,"count":2},{"startOffset":18611,"endOffset":18622,"count":1},{"startOffset":18623,"endOffset":18641,"count":0},{"startOffset":18671,"endOffset":18680,"count":0},{"startOffset":18732,"endOffset":18889,"count":0},{"startOffset":18953,"endOffset":18998,"count":0},{"startOffset":18999,"endOffset":19063,"count":0},{"startOffset":19065,"endOffset":19170,"count":0},{"startOffset":19338,"endOffset":19859,"count":0}],"isBlockCoverage":true},{"functionName":"secondPhasePreProcess","ranges":[{"startOffset":20279,"endOffset":20778,"count":1},{"startOffset":20369,"endOffset":20722,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20755,"endOffset":20770,"count":1}],"isBlockCoverage":true},{"functionName":"partsMatch","ranges":[{"startOffset":20783,"endOffset":22360,"count":0}],"isBlockCoverage":false},{"functionName":"parseNegate","ranges":[{"startOffset":22365,"endOffset":22789,"count":1},{"startOffset":22427,"endOffset":22595,"count":0},{"startOffset":22602,"endOffset":22788,"count":0}],"isBlockCoverage":true},{"functionName":"matchOne","ranges":[{"startOffset":23032,"endOffset":31158,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":31163,"endOffset":31240,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":31245,"endOffset":32924,"count":4},{"startOffset":31400,"endOffset":31416,"count":1},{"startOffset":31416,"endOffset":31457,"count":3},{"startOffset":31457,"endOffset":31467,"count":0},{"startOffset":31467,"endOffset":31684,"count":3},{"startOffset":31684,"endOffset":31756,"count":0},{"startOffset":31756,"endOffset":32644,"count":3},{"startOffset":31809,"endOffset":32093,"count":1},{"startOffset":31900,"endOffset":31925,"count":0},{"startOffset":31985,"endOffset":32075,"count":0},{"startOffset":32093,"endOffset":32644,"count":2},{"startOffset":32142,"endOffset":32407,"count":0},{"startOffset":32461,"endOffset":32547,"count":0},{"startOffset":32597,"endOffset":32644,"count":0},{"startOffset":32644,"endOffset":32736,"count":3},{"startOffset":32736,"endOffset":32761,"count":1},{"startOffset":32763,"endOffset":32899,"count":1},{"startOffset":32899,"endOffset":32923,"count":3}],"isBlockCoverage":true},{"functionName":"makeRe","ranges":[{"startOffset":32929,"endOffset":36222,"count":0}],"isBlockCoverage":false},{"functionName":"slashSplit","ranges":[{"startOffset":36227,"endOffset":36796,"count":1},{"startOffset":36521,"endOffset":36565,"count":0},{"startOffset":36598,"endOffset":36622,"count":0},{"startOffset":36624,"endOffset":36730,"count":0}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":36801,"endOffset":38712,"count":0}],"isBlockCoverage":false},{"functionName":"defaults","ranges":[{"startOffset":38724,"endOffset":38795,"count":0}],"isBlockCoverage":false}]},{"scriptId":"492","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/utils/process-argv.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":436,"count":1}],"isBlockCoverage":true},{"functionName":"getProcessArgvBinIndex","ranges":[{"startOffset":0,"endOffset":101,"count":0}],"isBlockCoverage":false},{"functionName":"isBundledElectronApp","ranges":[{"startOffset":102,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"isElectronApp","ranges":[{"startOffset":189,"endOffset":257,"count":0}],"isBlockCoverage":false},{"functionName":"hideBin","ranges":[{"startOffset":265,"endOffset":344,"count":0}],"isBlockCoverage":false},{"functionName":"getProcessArgvBin","ranges":[{"startOffset":352,"endOffset":435,"count":0}],"isBlockCoverage":false}]},{"scriptId":"493","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/y18n@5.0.8/node_modules/y18n/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":183,"count":1}],"isBlockCoverage":true},{"functionName":"y18n","ranges":[{"startOffset":121,"endOffset":161,"count":1}],"isBlockCoverage":true}]},{"scriptId":"494","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs-parser@21.1.1/node_modules/yargs-parser/build/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2508,"count":1},{"startOffset":696,"endOffset":740,"count":0},{"startOffset":822,"endOffset":830,"count":0},{"startOffset":877,"endOffset":885,"count":0},{"startOffset":928,"endOffset":1051,"count":0},{"startOffset":1164,"endOffset":1362,"count":0},{"startOffset":1468,"endOffset":1472,"count":0}],"isBlockCoverage":true},{"functionName":"env","ranges":[{"startOffset":1538,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":1746,"endOffset":2131,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":2156,"endOffset":2264,"count":0}],"isBlockCoverage":false},{"functionName":"yargsParser.detailed","ranges":[{"startOffset":2289,"endOffset":2359,"count":1}],"isBlockCoverage":true}]},{"scriptId":"495","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/yerror.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":234,"count":1}],"isBlockCoverage":true},{"functionName":"YError","ranges":[{"startOffset":40,"endOffset":231,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/command.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19368,"count":1}],"isBlockCoverage":true},{"functionName":"CommandInstance","ranges":[{"startOffset":493,"endOffset":819,"count":1}],"isBlockCoverage":true},{"functionName":"addDirectory","ranges":[{"startOffset":824,"endOffset":1631,"count":0}],"isBlockCoverage":false},{"functionName":"addHandler","ranges":[{"startOffset":1636,"endOffset":4314,"count":0}],"isBlockCoverage":false},{"functionName":"getCommandHandlers","ranges":[{"startOffset":4319,"endOffset":4377,"count":0}],"isBlockCoverage":false},{"functionName":"getCommands","ranges":[{"startOffset":4382,"endOffset":4481,"count":1}],"isBlockCoverage":true},{"functionName":"hasDefaultCommand","ranges":[{"startOffset":4486,"endOffset":4551,"count":1}],"isBlockCoverage":true},{"functionName":"runCommand","ranges":[{"startOffset":4556,"endOffset":5681,"count":0}],"isBlockCoverage":false},{"functionName":"applyBuilderUpdateUsageAndParse","ranges":[{"startOffset":5686,"endOffset":6961,"count":0}],"isBlockCoverage":false},{"functionName":"parseAndUpdateUsage","ranges":[{"startOffset":6966,"endOffset":7936,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUpdateUsage","ranges":[{"startOffset":7941,"endOffset":8142,"count":0}],"isBlockCoverage":false},{"functionName":"usageFromParentCommandsCommandHandler","ranges":[{"startOffset":8147,"endOffset":8560,"count":0}],"isBlockCoverage":false},{"functionName":"handleValidationAndGetResult","ranges":[{"startOffset":8565,"endOffset":10490,"count":0}],"isBlockCoverage":false},{"functionName":"applyMiddlewareAndGetResult","ranges":[{"startOffset":10495,"endOffset":11519,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositionals","ranges":[{"startOffset":11524,"endOffset":12389,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositional","ranges":[{"startOffset":12394,"endOffset":12719,"count":0}],"isBlockCoverage":false},{"functionName":"cmdToParseOptions","ranges":[{"startOffset":12724,"endOffset":13581,"count":0}],"isBlockCoverage":false},{"functionName":"postProcessPositionals","ranges":[{"startOffset":13586,"endOffset":15927,"count":0}],"isBlockCoverage":false},{"functionName":"isDefaulted","ranges":[{"startOffset":15932,"endOffset":16186,"count":0}],"isBlockCoverage":false},{"functionName":"isInConfigs","ranges":[{"startOffset":16191,"endOffset":16477,"count":0}],"isBlockCoverage":false},{"functionName":"runDefaultBuilderOn","ranges":[{"startOffset":16482,"endOffset":17358,"count":0}],"isBlockCoverage":false},{"functionName":"moduleName","ranges":[{"startOffset":17363,"endOffset":17589,"count":0}],"isBlockCoverage":false},{"functionName":"commandFromFilename","ranges":[{"startOffset":17594,"endOffset":17715,"count":0}],"isBlockCoverage":false},{"functionName":"extractDesc","ranges":[{"startOffset":17720,"endOffset":18010,"count":0}],"isBlockCoverage":false},{"functionName":"freeze","ranges":[{"startOffset":18015,"endOffset":18194,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":18199,"endOffset":18475,"count":1}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":18480,"endOffset":18652,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":18662,"endOffset":18800,"count":1}],"isBlockCoverage":true},{"functionName":"isCommandBuilderDefinition","ranges":[{"startOffset":18808,"endOffset":18976,"count":0}],"isBlockCoverage":false},{"functionName":"isCommandAndAliases","ranges":[{"startOffset":18977,"endOffset":19064,"count":0}],"isBlockCoverage":false},{"functionName":"isCommandBuilderCallback","ranges":[{"startOffset":19072,"endOffset":19160,"count":0}],"isBlockCoverage":false},{"functionName":"isCommandBuilderOptionDefinitions","ranges":[{"startOffset":19161,"endOffset":19256,"count":0}],"isBlockCoverage":false},{"functionName":"isCommandHandlerDefinition","ranges":[{"startOffset":19264,"endOffset":19367,"count":0}],"isBlockCoverage":false}]},{"scriptId":"497","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/argsert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2477,"count":1}],"isBlockCoverage":true},{"functionName":"argsert","ranges":[{"startOffset":175,"endOffset":2088,"count":186},{"startOffset":644,"endOffset":682,"count":195},{"startOffset":696,"endOffset":707,"count":15},{"startOffset":739,"endOffset":753,"count":4},{"startOffset":800,"endOffset":939,"count":0},{"startOffset":1055,"endOffset":1182,"count":0},{"startOffset":2034,"endOffset":2086,"count":0}],"isBlockCoverage":true},{"functionName":"parseArgs","ranges":[{"startOffset":216,"endOffset":463,"count":186},{"startOffset":291,"endOffset":337,"count":3},{"startOffset":350,"endOffset":456,"count":183}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1215,"endOffset":1571,"count":213},{"startOffset":1478,"endOffset":1534,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1370,"endOffset":1415,"count":450},{"startOffset":1400,"endOffset":1415,"count":237}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1606,"endOffset":2021,"count":108},{"startOffset":1671,"endOffset":1678,"count":15},{"startOffset":1678,"endOffset":1928,"count":93},{"startOffset":1928,"endOffset":1984,"count":0},{"startOffset":1984,"endOffset":2020,"count":93}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1820,"endOffset":1865,"count":108},{"startOffset":1850,"endOffset":1865,"count":22}],"isBlockCoverage":true},{"functionName":"guessType","ranges":[{"startOffset":2089,"endOffset":2257,"count":306},{"startOffset":2143,"endOffset":2174,"count":0},{"startOffset":2202,"endOffset":2232,"count":0}],"isBlockCoverage":true},{"functionName":"argumentTypeError","ranges":[{"startOffset":2258,"endOffset":2476,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/typings/common-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":308,"count":1}],"isBlockCoverage":true},{"functionName":"assertNotStrictEqual","ranges":[{"startOffset":7,"endOffset":132,"count":4}],"isBlockCoverage":true},{"functionName":"assertSingleKey","ranges":[{"startOffset":140,"endOffset":236,"count":0}],"isBlockCoverage":false},{"functionName":"objectKeys","ranges":[{"startOffset":244,"endOffset":307,"count":10}],"isBlockCoverage":true}]},{"scriptId":"499","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/usage.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21402,"count":1}],"isBlockCoverage":true},{"functionName":"isBoolean","ranges":[{"startOffset":140,"endOffset":206,"count":0}],"isBlockCoverage":false},{"functionName":"usage","ranges":[{"startOffset":214,"endOffset":20976,"count":1}],"isBlockCoverage":true},{"functionName":"failFn","ranges":[{"startOffset":334,"endOffset":383,"count":0}],"isBlockCoverage":false},{"functionName":"showHelpOnFailFn","ranges":[{"startOffset":504,"endOffset":844,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":893,"endOffset":2441,"count":0}],"isBlockCoverage":false},{"functionName":"self.usage","ranges":[{"startOffset":2512,"endOffset":2762,"count":0}],"isBlockCoverage":false},{"functionName":"self.getUsage","ranges":[{"startOffset":2784,"endOffset":2820,"count":0}],"isBlockCoverage":false},{"functionName":"self.getUsageDisabled","ranges":[{"startOffset":2850,"endOffset":2893,"count":0}],"isBlockCoverage":false},{"functionName":"self.getPositionalGroupName","ranges":[{"startOffset":2929,"endOffset":2977,"count":0}],"isBlockCoverage":false},{"functionName":"self.example","ranges":[{"startOffset":3021,"endOffset":3099,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":3143,"endOffset":3477,"count":0}],"isBlockCoverage":false},{"functionName":"self.getCommands","ranges":[{"startOffset":3502,"endOffset":3516,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":3565,"endOffset":3993,"count":36},{"startOffset":3640,"endOffset":3744,"count":0},{"startOffset":3793,"endOffset":3918,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3672,"endOffset":3732,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3838,"endOffset":3906,"count":0}],"isBlockCoverage":false},{"functionName":"self.getDescriptions","ranges":[{"startOffset":4022,"endOffset":4040,"count":34}],"isBlockCoverage":true},{"functionName":"self.epilog","ranges":[{"startOffset":4082,"endOffset":4123,"count":1}],"isBlockCoverage":true},{"functionName":"self.wrap","ranges":[{"startOffset":4180,"endOffset":4240,"count":1}],"isBlockCoverage":true},{"functionName":"self.getWrap","ranges":[{"startOffset":4261,"endOffset":4475,"count":0}],"isBlockCoverage":false},{"functionName":"self.deferY18nLookup","ranges":[{"startOffset":4558,"endOffset":4592,"count":2}],"isBlockCoverage":true},{"functionName":"help","ranges":[{"startOffset":4610,"endOffset":14918,"count":0}],"isBlockCoverage":false},{"functionName":"maxWidth","ranges":[{"startOffset":14924,"endOffset":15401,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAliases","ranges":[{"startOffset":15406,"endOffset":16450,"count":0}],"isBlockCoverage":false},{"functionName":"self.cacheHelpMessage","ranges":[{"startOffset":16506,"endOffset":16566,"count":0}],"isBlockCoverage":false},{"functionName":"self.clearCachedHelpMessage","ranges":[{"startOffset":16602,"endOffset":16660,"count":1}],"isBlockCoverage":true},{"functionName":"self.hasCachedHelpMessage","ranges":[{"startOffset":16694,"endOffset":16749,"count":0}],"isBlockCoverage":false},{"functionName":"addUngroupedKeys","ranges":[{"startOffset":16755,"endOffset":17254,"count":0}],"isBlockCoverage":false},{"functionName":"filterHiddenOptions","ranges":[{"startOffset":17259,"endOffset":17435,"count":0}],"isBlockCoverage":false},{"functionName":"self.showHelp","ranges":[{"startOffset":17456,"endOffset":17695,"count":0}],"isBlockCoverage":false},{"functionName":"self.functionDescription","ranges":[{"startOffset":17728,"endOffset":17914,"count":0}],"isBlockCoverage":false},{"functionName":"stringifiedValues","ranges":[{"startOffset":17945,"endOffset":18343,"count":0}],"isBlockCoverage":false},{"functionName":"defaultString","ranges":[{"startOffset":18349,"endOffset":18996,"count":0}],"isBlockCoverage":false},{"functionName":"windowWidth","ranges":[{"startOffset":19001,"endOffset":19227,"count":0}],"isBlockCoverage":false},{"functionName":"self.version","ranges":[{"startOffset":19271,"endOffset":19308,"count":1}],"isBlockCoverage":true},{"functionName":"self.showVersion","ranges":[{"startOffset":19333,"endOffset":19566,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":19585,"endOffset":19890,"count":0}],"isBlockCoverage":false},{"functionName":"freeze","ranges":[{"startOffset":19934,"endOffset":20184,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":20206,"endOffset":20956,"count":1},{"startOffset":20321,"endOffset":20328,"count":0},{"startOffset":20357,"endOffset":20663,"count":0}],"isBlockCoverage":true},{"functionName":"isIndentedText","ranges":[{"startOffset":20977,"endOffset":21047,"count":0}],"isBlockCoverage":false},{"functionName":"addIndentation","ranges":[{"startOffset":21048,"endOffset":21232,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentation","ranges":[{"startOffset":21233,"endOffset":21322,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":21323,"endOffset":21401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"500","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/utils/obj-filter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":299,"count":1}],"isBlockCoverage":true},{"functionName":"objFilter","ranges":[{"startOffset":64,"endOffset":298,"count":10}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":107,"endOffset":117,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":174,"endOffset":278,"count":0}],"isBlockCoverage":false}]},{"scriptId":"501","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/validation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12653,"count":1}],"isBlockCoverage":true},{"functionName":"validation","ranges":[{"startOffset":270,"endOffset":12652,"count":1}],"isBlockCoverage":true},{"functionName":"nonOptionCount","ranges":[{"startOffset":419,"endOffset":2167,"count":1},{"startOffset":573,"endOffset":592,"count":0},{"startOffset":724,"endOffset":799,"count":0},{"startOffset":801,"endOffset":2161,"count":0}],"isBlockCoverage":true},{"functionName":"positionalCount","ranges":[{"startOffset":2196,"endOffset":2484,"count":0}],"isBlockCoverage":false},{"functionName":"requiredArguments","ranges":[{"startOffset":2515,"endOffset":3447,"count":1},{"startOffset":2651,"endOffset":2890,"count":0},{"startOffset":2912,"endOffset":3441,"count":0}],"isBlockCoverage":true},{"functionName":"unknownArguments","ranges":[{"startOffset":3477,"endOffset":5459,"count":0}],"isBlockCoverage":false},{"functionName":"unknownCommands","ranges":[{"startOffset":5488,"endOffset":6281,"count":0}],"isBlockCoverage":false},{"functionName":"isValidAndSomeAliasIsNotNew","ranges":[{"startOffset":6322,"endOffset":6658,"count":0}],"isBlockCoverage":false},{"functionName":"limitedChoices","ranges":[{"startOffset":6686,"endOffset":7734,"count":1},{"startOffset":6859,"endOffset":7733,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6894,"endOffset":7345,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7520,"endOffset":7701,"count":0}],"isBlockCoverage":false},{"functionName":"implies","ranges":[{"startOffset":7777,"endOffset":8440,"count":0}],"isBlockCoverage":false},{"functionName":"getImplied","ranges":[{"startOffset":8464,"endOffset":8517,"count":0}],"isBlockCoverage":false},{"functionName":"keyExists","ranges":[{"startOffset":8523,"endOffset":8998,"count":0}],"isBlockCoverage":false},{"functionName":"implications","ranges":[{"startOffset":9023,"endOffset":9752,"count":1},{"startOffset":9562,"endOffset":9746,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9120,"endOffset":9529,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9651,"endOffset":9705,"count":0}],"isBlockCoverage":false},{"functionName":"conflicts","ranges":[{"startOffset":9801,"endOffset":10413,"count":0}],"isBlockCoverage":false},{"functionName":"self.getConflicting","ranges":[{"startOffset":10441,"endOffset":10458,"count":0}],"isBlockCoverage":false},{"functionName":"conflictingFn","ranges":[{"startOffset":10483,"endOffset":11443,"count":1},{"startOffset":10981,"endOffset":11437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10548,"endOffset":10897,"count":14},{"startOffset":10591,"endOffset":10887,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10634,"endOffset":10871,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11028,"endOffset":11425,"count":0}],"isBlockCoverage":false},{"functionName":"recommendCommands","ranges":[{"startOffset":11474,"endOffset":12092,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":12111,"endOffset":12295,"count":0}],"isBlockCoverage":false},{"functionName":"freeze","ranges":[{"startOffset":12339,"endOffset":12445,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":12467,"endOffset":12632,"count":1}],"isBlockCoverage":true}]},{"scriptId":"502","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/utils/apply-extends.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2049,"count":1}],"isBlockCoverage":true},{"functionName":"applyExtends","ranges":[{"startOffset":91,"endOffset":1278,"count":0}],"isBlockCoverage":false},{"functionName":"checkForCircularExtends","ranges":[{"startOffset":1279,"endOffset":1465,"count":0}],"isBlockCoverage":false},{"functionName":"getPathToDefaultConfig","ranges":[{"startOffset":1466,"endOffset":1569,"count":0}],"isBlockCoverage":false},{"functionName":"mergeDeep","ranges":[{"startOffset":1570,"endOffset":2048,"count":0}],"isBlockCoverage":false}]},{"scriptId":"503","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/middleware.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3221,"count":1}],"isBlockCoverage":true},{"functionName":"GlobalMiddleware","ranges":[{"startOffset":127,"endOffset":244,"count":1}],"isBlockCoverage":true},{"functionName":"addMiddleware","ranges":[{"startOffset":249,"endOffset":1230,"count":0}],"isBlockCoverage":false},{"functionName":"addCoerceMiddleware","ranges":[{"startOffset":1235,"endOffset":1697,"count":0}],"isBlockCoverage":false},{"functionName":"getMiddleware","ranges":[{"startOffset":1702,"endOffset":1763,"count":2}],"isBlockCoverage":true},{"functionName":"freeze","ranges":[{"startOffset":1768,"endOffset":1839,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":1844,"endOffset":1983,"count":1}],"isBlockCoverage":true},{"functionName":"reset","ranges":[{"startOffset":1988,"endOffset":2080,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2059,"endOffset":2072,"count":0}],"isBlockCoverage":false},{"functionName":"commandMiddlewareFactory","ranges":[{"startOffset":2090,"endOffset":2327,"count":0}],"isBlockCoverage":false},{"functionName":"applyMiddleware","ranges":[{"startOffset":2335,"endOffset":3220,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2436,"endOffset":3210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"504","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/utils/is-promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":155,"count":1}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":7,"endOffset":154,"count":5},{"startOffset":100,"endOffset":150,"count":0}],"isBlockCoverage":true}]},{"scriptId":"505","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/utils/maybe-async-result.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":496,"count":1}],"isBlockCoverage":true},{"functionName":"maybeAsyncResult","ranges":[{"startOffset":52,"endOffset":428,"count":1},{"startOffset":205,"endOffset":218,"count":0},{"startOffset":277,"endOffset":325,"count":0},{"startOffset":373,"endOffset":426,"count":0}],"isBlockCoverage":true},{"functionName":"errorHandler","ranges":[{"startOffset":119,"endOffset":146,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":291,"endOffset":324,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":429,"endOffset":495,"count":1}],"isBlockCoverage":true}]},{"scriptId":"506","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/completion.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10495,"count":1}],"isBlockCoverage":true},{"functionName":"Completion","ranges":[{"startOffset":311,"endOffset":953,"count":1},{"startOffset":762,"endOffset":770,"count":0},{"startOffset":793,"endOffset":905,"count":0},{"startOffset":939,"endOffset":946,"count":0}],"isBlockCoverage":true},{"functionName":"defaultCompletion","ranges":[{"startOffset":958,"endOffset":1901,"count":0}],"isBlockCoverage":false},{"functionName":"commandCompletions","ranges":[{"startOffset":1906,"endOffset":2777,"count":0}],"isBlockCoverage":false},{"functionName":"optionCompletions","ranges":[{"startOffset":2782,"endOffset":3698,"count":0}],"isBlockCoverage":false},{"functionName":"choicesFromOptionsCompletions","ranges":[{"startOffset":3703,"endOffset":4036,"count":0}],"isBlockCoverage":false},{"functionName":"choicesFromPositionalsCompletions","ranges":[{"startOffset":4041,"endOffset":4882,"count":0}],"isBlockCoverage":false},{"functionName":"getPreviousArgChoices","ranges":[{"startOffset":4887,"endOffset":5958,"count":0}],"isBlockCoverage":false},{"functionName":"previousArgHasChoices","ranges":[{"startOffset":5963,"endOffset":6116,"count":0}],"isBlockCoverage":false},{"functionName":"argsContainKey","ranges":[{"startOffset":6121,"endOffset":6591,"count":0}],"isBlockCoverage":false},{"functionName":"completeOptionKey","ranges":[{"startOffset":6596,"endOffset":7850,"count":0}],"isBlockCoverage":false},{"functionName":"customCompletion","ranges":[{"startOffset":7855,"endOffset":9088,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletion","ranges":[{"startOffset":9093,"endOffset":9571,"count":0}],"isBlockCoverage":false},{"functionName":"generateCompletionScript","ranges":[{"startOffset":9576,"endOffset":10026,"count":0}],"isBlockCoverage":false},{"functionName":"registerFunction","ranges":[{"startOffset":10031,"endOffset":10103,"count":0}],"isBlockCoverage":false},{"functionName":"setParsed","ranges":[{"startOffset":10108,"endOffset":10172,"count":1}],"isBlockCoverage":true},{"functionName":"completion","ranges":[{"startOffset":10182,"endOffset":10290,"count":1}],"isBlockCoverage":true},{"functionName":"isSyncCompletionFunction","ranges":[{"startOffset":10291,"endOffset":10390,"count":0}],"isBlockCoverage":false},{"functionName":"isFallbackCompletionFunction","ranges":[{"startOffset":10391,"endOffset":10494,"count":0}],"isBlockCoverage":false}]},{"scriptId":"507","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/utils/set-blocking.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":386,"count":1}],"isBlockCoverage":true},{"functionName":"setBlocking","ranges":[{"startOffset":15,"endOffset":385,"count":0}],"isBlockCoverage":false}]},{"scriptId":"508","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/cliui@8.0.1/node_modules/cliui/build/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9667,"count":1}],"isBlockCoverage":true},{"functionName":"UI","ranges":[{"startOffset":168,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"span","ranges":[{"startOffset":347,"endOffset":434,"count":0}],"isBlockCoverage":false},{"functionName":"resetOutput","ranges":[{"startOffset":439,"endOffset":484,"count":0}],"isBlockCoverage":false},{"functionName":"div","ranges":[{"startOffset":489,"endOffset":962,"count":0}],"isBlockCoverage":false},{"functionName":"shouldApplyLayoutDSL","ranges":[{"startOffset":967,"endOffset":1107,"count":0}],"isBlockCoverage":false},{"functionName":"applyLayoutDSL","ranges":[{"startOffset":1112,"endOffset":2210,"count":0}],"isBlockCoverage":false},{"functionName":"colFromString","ranges":[{"startOffset":2215,"endOffset":2335,"count":0}],"isBlockCoverage":false},{"functionName":"measurePadding","ranges":[{"startOffset":2340,"endOffset":2552,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2557,"endOffset":2886,"count":0}],"isBlockCoverage":false},{"functionName":"rowToString","ranges":[{"startOffset":2891,"endOffset":4776,"count":0}],"isBlockCoverage":false},{"functionName":"renderInline","ranges":[{"startOffset":4854,"endOffset":5619,"count":0}],"isBlockCoverage":false},{"functionName":"rasterize","ranges":[{"startOffset":5624,"endOffset":7071,"count":0}],"isBlockCoverage":false},{"functionName":"negatePadding","ranges":[{"startOffset":7076,"endOffset":7348,"count":0}],"isBlockCoverage":false},{"functionName":"columnWidths","ranges":[{"startOffset":7353,"endOffset":8190,"count":0}],"isBlockCoverage":false},{"functionName":"addBorder","ranges":[{"startOffset":8193,"endOffset":8439,"count":0}],"isBlockCoverage":false},{"functionName":"_minWidth","ranges":[{"startOffset":8518,"endOffset":8733,"count":0}],"isBlockCoverage":false},{"functionName":"getWindowWidth","ranges":[{"startOffset":8734,"endOffset":8958,"count":0}],"isBlockCoverage":false},{"functionName":"alignRight","ranges":[{"startOffset":8959,"endOffset":9162,"count":0}],"isBlockCoverage":false},{"functionName":"alignCenter","ranges":[{"startOffset":9163,"endOffset":9406,"count":0}],"isBlockCoverage":false},{"functionName":"cliui","ranges":[{"startOffset":9425,"endOffset":9666,"count":0}],"isBlockCoverage":false}]},{"scriptId":"509","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/esm/has-magic.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":917,"count":1}],"isBlockCoverage":true},{"functionName":"hasMagic","ranges":[{"startOffset":648,"endOffset":878,"count":0}],"isBlockCoverage":false}]},{"scriptId":"510","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/cliui@8.0.1/node_modules/cliui/build/lib/string-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1011,"count":1}],"isBlockCoverage":true},{"functionName":"stripAnsi","ranges":[{"startOffset":548,"endOffset":609,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":617,"endOffset":1010,"count":0}],"isBlockCoverage":false}]},{"scriptId":"511","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/esm/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8339,"count":1},{"startOffset":504,"endOffset":513,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":585,"endOffset":8306,"count":1}],"isBlockCoverage":true},{"functionName":"Glob","ranges":[{"startOffset":1540,"endOffset":5775,"count":1},{"startOffset":1630,"endOffset":1675,"count":0},{"startOffset":1997,"endOffset":2035,"count":0},{"startOffset":2112,"endOffset":2171,"count":0},{"startOffset":2200,"endOffset":2205,"count":0},{"startOffset":2672,"endOffset":2687,"count":0},{"startOffset":2799,"endOffset":2829,"count":0},{"startOffset":2831,"endOffset":2917,"count":0},{"startOffset":3193,"endOffset":3267,"count":0},{"startOffset":3296,"endOffset":3505,"count":0},{"startOffset":3679,"endOffset":3927,"count":0},{"startOffset":3996,"endOffset":4013,"count":0},{"startOffset":4059,"endOffset":4077,"count":0},{"startOffset":4114,"endOffset":4131,"count":0},{"startOffset":4663,"endOffset":4691,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3229,"endOffset":3255,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3453,"endOffset":3493,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5253,"endOffset":5279,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5331,"endOffset":5454,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5504,"endOffset":5767,"count":1},{"startOffset":5624,"endOffset":5666,"count":0}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":5780,"endOffset":6517,"count":1},{"startOffset":6242,"endOffset":6303,"count":0}],"isBlockCoverage":true},{"functionName":"walkSync","ranges":[{"startOffset":6522,"endOffset":6977,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":6982,"endOffset":7373,"count":0}],"isBlockCoverage":false},{"functionName":"streamSync","ranges":[{"startOffset":7378,"endOffset":7777,"count":0}],"isBlockCoverage":false},{"functionName":"iterateSync","ranges":[{"startOffset":7897,"endOffset":7971,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7976,"endOffset":8038,"count":0}],"isBlockCoverage":false},{"functionName":"iterate","ranges":[{"startOffset":8165,"endOffset":8236,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8241,"endOffset":8304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"512","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/esm/ignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4101,"count":1},{"startOffset":422,"endOffset":431,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":490,"endOffset":4066,"count":0}],"isBlockCoverage":true}]},{"scriptId":"513","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/esm/assert-valid-pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":336,"count":1}],"isBlockCoverage":true},{"functionName":"assertValidPattern","ranges":[{"startOffset":72,"endOffset":286,"count":6},{"startOffset":124,"endOffset":179,"count":0},{"startOffset":225,"endOffset":284,"count":0}],"isBlockCoverage":true}]},{"scriptId":"514","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/esm/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":848,"count":1}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":458,"endOffset":812,"count":0}],"isBlockCoverage":false}]},{"scriptId":"515","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/esm/unescape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":847,"count":1}],"isBlockCoverage":true},{"functionName":"unescape","ranges":[{"startOffset":597,"endOffset":809,"count":6},{"startOffset":686,"endOffset":721,"count":0}],"isBlockCoverage":true}]},{"scriptId":"516","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/esm/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22588,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglobType","ranges":[{"startOffset":198,"endOffset":217,"count":16}],"isBlockCoverage":true},{"functionName":"regExpEscape","ranges":[{"startOffset":972,"endOffset":1024,"count":15}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1430,"endOffset":22556,"count":3}],"isBlockCoverage":true},{"functionName":"AST","ranges":[{"startOffset":1737,"endOffset":2306,"count":3},{"startOffset":1878,"endOffset":1900,"count":0},{"startOffset":1966,"endOffset":1986,"count":0},{"startOffset":2049,"endOffset":2070,"count":0},{"startOffset":2118,"endOffset":2136,"count":0},{"startOffset":2163,"endOffset":2189,"count":0},{"startOffset":2203,"endOffset":2225,"count":0},{"startOffset":2267,"endOffset":2295,"count":0}],"isBlockCoverage":true},{"functionName":"get hasMagic","ranges":[{"startOffset":2311,"endOffset":2781,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2818,"endOffset":3175,"count":6},{"startOffset":2885,"endOffset":3023,"count":3},{"startOffset":3023,"endOffset":3169,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2987,"endOffset":3001,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3126,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"#fillNegs","ranges":[{"startOffset":3180,"endOffset":4369,"count":3},{"startOffset":3269,"endOffset":3313,"count":0},{"startOffset":3356,"endOffset":3368,"count":0},{"startOffset":3559,"endOffset":4342,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":4374,"endOffset":4746,"count":3},{"startOffset":4466,"endOffset":4475,"count":0},{"startOffset":4548,"endOffset":4592,"count":0},{"startOffset":4594,"endOffset":4664,"count":0}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":4751,"endOffset":5221,"count":0}],"isBlockCoverage":false},{"functionName":"isStart","ranges":[{"startOffset":5226,"endOffset":5824,"count":6},{"startOffset":5295,"endOffset":5389,"count":0},{"startOffset":5405,"endOffset":5823,"count":0}],"isBlockCoverage":true},{"functionName":"isEnd","ranges":[{"startOffset":5829,"endOffset":6316,"count":6},{"startOffset":5896,"endOffset":5927,"count":0},{"startOffset":5949,"endOffset":5994,"count":0},{"startOffset":6010,"endOffset":6231,"count":0},{"startOffset":6232,"endOffset":6235,"count":0}],"isBlockCoverage":true},{"functionName":"copyIn","ranges":[{"startOffset":6321,"endOffset":6462,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":6467,"endOffset":6626,"count":0}],"isBlockCoverage":false},{"functionName":"#parseAST","ranges":[{"startOffset":6638,"endOffset":10622,"count":3},{"startOffset":6973,"endOffset":8349,"count":16},{"startOffset":7181,"endOffset":7302,"count":0},{"startOffset":7332,"endOffset":7750,"count":0},{"startOffset":7787,"endOffset":7976,"count":0},{"startOffset":8028,"endOffset":8052,"count":1},{"startOffset":8054,"endOffset":8309,"count":0},{"startOffset":8408,"endOffset":10621,"count":0}],"isBlockCoverage":true},{"functionName":"fromGlob","ranges":[{"startOffset":10634,"endOffset":10797,"count":3}],"isBlockCoverage":true},{"functionName":"toMMPattern","ranges":[{"startOffset":10897,"endOffset":11868,"count":3},{"startOffset":11029,"endOffset":11061,"count":0},{"startOffset":11425,"endOffset":11454,"count":2},{"startOffset":11455,"endOffset":11603,"count":2},{"startOffset":11542,"endOffset":11602,"count":0},{"startOffset":11628,"endOffset":11664,"count":2},{"startOffset":11664,"endOffset":11714,"count":1},{"startOffset":11715,"endOffset":11719,"count":0},{"startOffset":11730,"endOffset":11735,"count":0},{"startOffset":11736,"endOffset":11740,"count":1}],"isBlockCoverage":true},{"functionName":"get options","ranges":[{"startOffset":11873,"endOffset":11924,"count":0}],"isBlockCoverage":false},{"functionName":"toRegExpSource","ranges":[{"startOffset":15367,"endOffset":20430,"count":3},{"startOffset":16927,"endOffset":16952,"count":0},{"startOffset":17083,"endOffset":17108,"count":0},{"startOffset":17244,"endOffset":17269,"count":0},{"startOffset":17555,"endOffset":17573,"count":0},{"startOffset":17586,"endOffset":17598,"count":1},{"startOffset":17599,"endOffset":17603,"count":2},{"startOffset":17861,"endOffset":17867,"count":0},{"startOffset":17877,"endOffset":17927,"count":0},{"startOffset":18154,"endOffset":18411,"count":0},{"startOffset":18485,"endOffset":18498,"count":0},{"startOffset":18499,"endOffset":18506,"count":0},{"startOffset":18580,"endOffset":18595,"count":0},{"startOffset":18596,"endOffset":18604,"count":0},{"startOffset":18605,"endOffset":18625,"count":0},{"startOffset":18627,"endOffset":19058,"count":0},{"startOffset":19059,"endOffset":19065,"count":0},{"startOffset":19066,"endOffset":19080,"count":0},{"startOffset":19093,"endOffset":19097,"count":0},{"startOffset":19110,"endOffset":19137,"count":0},{"startOffset":19176,"endOffset":19452,"count":0},{"startOffset":19454,"endOffset":20429,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15653,"endOffset":15999,"count":3},{"startOffset":15816,"endOffset":15844,"count":0}],"isBlockCoverage":true},{"functionName":"#partsToRegExp","ranges":[{"startOffset":20435,"endOffset":21080,"count":0}],"isBlockCoverage":false},{"functionName":"#parseGlob","ranges":[{"startOffset":21092,"endOffset":22554,"count":3},{"startOffset":21262,"endOffset":22492,"count":16},{"startOffset":21328,"endOffset":21462,"count":0},{"startOffset":21491,"endOffset":21707,"count":0},{"startOffset":21735,"endOffset":22077,"count":0},{"startOffset":22105,"endOffset":22316,"count":1},{"startOffset":22172,"endOffset":22190,"count":0},{"startOffset":22316,"endOffset":22344,"count":15},{"startOffset":22344,"endOffset":22447,"count":0},{"startOffset":22447,"endOffset":22492,"count":15}],"isBlockCoverage":true}]},{"scriptId":"517","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/y18n@5.0.8/node_modules/y18n/build/lib/platform-shims/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":377,"count":1}],"isBlockCoverage":true},{"functionName":"exists","ranges":[{"startOffset":230,"endOffset":373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"518","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/y18n@5.0.8/node_modules/y18n/build/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6268,"count":1}],"isBlockCoverage":true},{"functionName":"Y18N","ranges":[{"startOffset":27,"endOffset":515,"count":1},{"startOffset":100,"endOffset":105,"count":0},{"startOffset":147,"endOffset":161,"count":0},{"startOffset":247,"endOffset":253,"count":0},{"startOffset":377,"endOffset":402,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":520,"endOffset":1587,"count":0}],"isBlockCoverage":false},{"functionName":"__n","ranges":[{"startOffset":1592,"endOffset":3115,"count":0}],"isBlockCoverage":false},{"functionName":"setLocale","ranges":[{"startOffset":3120,"endOffset":3175,"count":1}],"isBlockCoverage":true},{"functionName":"getLocale","ranges":[{"startOffset":3180,"endOffset":3227,"count":0}],"isBlockCoverage":false},{"functionName":"updateLocale","ranges":[{"startOffset":3232,"endOffset":3511,"count":0}],"isBlockCoverage":false},{"functionName":"_taggedLiteral","ranges":[{"startOffset":3516,"endOffset":3856,"count":0}],"isBlockCoverage":false},{"functionName":"_enqueueWrite","ranges":[{"startOffset":3861,"endOffset":4005,"count":0}],"isBlockCoverage":false},{"functionName":"_processWriteQueue","ranges":[{"startOffset":4010,"endOffset":4650,"count":0}],"isBlockCoverage":false},{"functionName":"_readLocaleFile","ranges":[{"startOffset":4655,"endOffset":5369,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveLocaleFile","ranges":[{"startOffset":5374,"endOffset":5850,"count":0}],"isBlockCoverage":false},{"functionName":"_fileExistsSync","ranges":[{"startOffset":5855,"endOffset":5918,"count":0}],"isBlockCoverage":false},{"functionName":"y18n","ranges":[{"startOffset":5928,"endOffset":6267,"count":1}],"isBlockCoverage":true}]},{"scriptId":"519","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs-parser@21.1.1/node_modules/yargs-parser/build/lib/string-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2084,"count":1}],"isBlockCoverage":true},{"functionName":"camelCase","ranges":[{"startOffset":95,"endOffset":1122,"count":15},{"startOffset":314,"endOffset":342,"count":0},{"startOffset":439,"endOffset":465,"count":0},{"startOffset":467,"endOffset":494,"count":0},{"startOffset":653,"endOffset":679,"count":0},{"startOffset":706,"endOffset":1088,"count":208},{"startOffset":775,"endOffset":869,"count":16},{"startOffset":894,"endOffset":925,"count":193},{"startOffset":910,"endOffset":924,"count":177},{"startOffset":927,"endOffset":979,"count":16},{"startOffset":979,"endOffset":1078,"count":192}],"isBlockCoverage":true},{"functionName":"decamelize","ranges":[{"startOffset":1130,"endOffset":1623,"count":15},{"startOffset":1238,"endOffset":1244,"count":0},{"startOffset":1314,"endOffset":1596,"count":192},{"startOffset":1438,"endOffset":1446,"count":16},{"startOffset":1448,"endOffset":1526,"count":16},{"startOffset":1526,"endOffset":1590,"count":176}],"isBlockCoverage":true},{"functionName":"looksLikeNumber","ranges":[{"startOffset":1631,"endOffset":2083,"count":2},{"startOffset":1708,"endOffset":1721,"count":0},{"startOffset":1816,"endOffset":1828,"count":0},{"startOffset":1891,"endOffset":1903,"count":0},{"startOffset":2004,"endOffset":2017,"count":0}],"isBlockCoverage":true}]},{"scriptId":"520","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs-parser@21.1.1/node_modules/yargs-parser/build/lib/yargs-parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":46827,"count":1}],"isBlockCoverage":true},{"functionName":"YargsParser","ranges":[{"startOffset":335,"endOffset":386,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":391,"endOffset":44624,"count":1},{"startOffset":2419,"endOffset":2424,"count":0},{"startOffset":2579,"endOffset":2584,"count":0},{"startOffset":2794,"endOffset":2809,"count":0},{"startOffset":3468,"endOffset":3473,"count":0},{"startOffset":4205,"endOffset":4210,"count":0},{"startOffset":4366,"endOffset":4371,"count":0},{"startOffset":4529,"endOffset":4534,"count":0},{"startOffset":4691,"endOffset":4696,"count":0},{"startOffset":4856,"endOffset":4861,"count":0},{"startOffset":5328,"endOffset":5584,"count":0},{"startOffset":5714,"endOffset":5894,"count":0},{"startOffset":7103,"endOffset":15678,"count":2},{"startOffset":7450,"endOffset":7478,"count":0},{"startOffset":7480,"endOffset":7573,"count":0},{"startOffset":7629,"endOffset":7801,"count":0},{"startOffset":7885,"endOffset":7906,"count":0},{"startOffset":7909,"endOffset":8770,"count":0},{"startOffset":8818,"endOffset":8854,"count":0},{"startOffset":8856,"endOffset":9168,"count":0},{"startOffset":9251,"endOffset":9274,"count":0},{"startOffset":9277,"endOffset":10729,"count":0},{"startOffset":10774,"endOffset":11030,"count":0},{"startOffset":11073,"endOffset":11096,"count":0},{"startOffset":11098,"endOffset":11705,"count":0},{"startOffset":11748,"endOffset":11771,"count":0},{"startOffset":11773,"endOffset":15033,"count":0},{"startOffset":15077,"endOffset":15115,"count":0},{"startOffset":15116,"endOffset":15177,"count":0},{"startOffset":15179,"endOffset":15339,"count":0},{"startOffset":15375,"endOffset":15459,"count":0},{"startOffset":15518,"endOffset":15598,"count":0},{"startOffset":16233,"endOffset":16258,"count":0},{"startOffset":16593,"endOffset":16617,"count":0},{"startOffset":16798,"endOffset":16955,"count":0},{"startOffset":17000,"endOffset":17356,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3499,"endOffset":4171,"count":12},{"startOffset":3564,"endOffset":3573,"count":0},{"startOffset":4027,"endOffset":4089,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3687,"endOffset":3934,"count":100}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4236,"endOffset":4333,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4397,"endOffset":4496,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4560,"endOffset":4659,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4722,"endOffset":4820,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4887,"endOffset":4988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5082,"endOffset":5270,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5378,"endOffset":5572,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5797,"endOffset":5878,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6003,"endOffset":6199,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6504,"endOffset":6661,"count":7},{"startOffset":6553,"endOffset":6558,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6568,"endOffset":6649,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16387,"endOffset":16492,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16643,"endOffset":16711,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16837,"endOffset":16877,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16887,"endOffset":16943,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17066,"endOffset":17081,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17092,"endOffset":17344,"count":0}],"isBlockCoverage":false},{"functionName":"pushPositional","ranges":[{"startOffset":17440,"endOffset":17711,"count":2},{"startOffset":17594,"endOffset":17635,"count":0}],"isBlockCoverage":true},{"functionName":"eatNargs","ranges":[{"startOffset":17807,"endOffset":19765,"count":0}],"isBlockCoverage":false},{"functionName":"eatArray","ranges":[{"startOffset":19951,"endOffset":22259,"count":0}],"isBlockCoverage":false},{"functionName":"setArg","ranges":[{"startOffset":22268,"endOffset":24658,"count":0}],"isBlockCoverage":false},{"functionName":"addNewAlias","ranges":[{"startOffset":24667,"endOffset":25012,"count":0}],"isBlockCoverage":false},{"functionName":"processValue","ranges":[{"startOffset":25021,"endOffset":26334,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCoerceNumber","ranges":[{"startOffset":26343,"endOffset":26987,"count":2},{"startOffset":26488,"endOffset":26579,"count":0},{"startOffset":26580,"endOffset":26604,"count":0},{"startOffset":26606,"endOffset":26986,"count":0}],"isBlockCoverage":true},{"functionName":"setConfig","ranges":[{"startOffset":27111,"endOffset":29020,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27424,"endOffset":29008,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigObject","ranges":[{"startOffset":29118,"endOffset":30217,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigObjects","ranges":[{"startOffset":30275,"endOffset":30519,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30399,"endOffset":30493,"count":0}],"isBlockCoverage":false},{"functionName":"applyEnvVars","ranges":[{"startOffset":30528,"endOffset":31483,"count":2},{"startOffset":30643,"endOffset":30712,"count":0},{"startOffset":30713,"endOffset":30717,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30793,"endOffset":31471,"count":0}],"isBlockCoverage":false},{"functionName":"applyCoercions","ranges":[{"startOffset":31492,"endOffset":32407,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31625,"endOffset":32395,"count":13},{"startOffset":31873,"endOffset":32363,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32069,"endOffset":32208,"count":0}],"isBlockCoverage":false},{"functionName":"setPlaceholderKeys","ranges":[{"startOffset":32416,"endOffset":32790,"count":0}],"isBlockCoverage":false},{"functionName":"applyDefaultsAndAliases","ranges":[{"startOffset":32799,"endOffset":33416,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":32916,"endOffset":33404,"count":24},{"startOffset":32983,"endOffset":33390,"count":14},{"startOffset":33105,"endOffset":33127,"count":7},{"startOffset":33162,"endOffset":33167,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33177,"endOffset":33370,"count":10},{"startOffset":33275,"endOffset":33282,"count":0}],"isBlockCoverage":true},{"functionName":"hasKey","ranges":[{"startOffset":33425,"endOffset":33850,"count":34},{"startOffset":33543,"endOffset":33567,"count":0},{"startOffset":33777,"endOffset":33790,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33606,"endOffset":33672,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":33859,"endOffset":36836,"count":24},{"startOffset":33984,"endOffset":34008,"count":0},{"startOffset":35486,"endOffset":35522,"count":0},{"startOffset":35524,"endOffset":35768,"count":0},{"startOffset":35808,"endOffset":35867,"count":0},{"startOffset":35912,"endOffset":36406,"count":0},{"startOffset":36465,"endOffset":36537,"count":0},{"startOffset":36595,"endOffset":36648,"count":0},{"startOffset":36649,"endOffset":36701,"count":0},{"startOffset":36704,"endOffset":36761,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34047,"endOffset":35008,"count":0}],"isBlockCoverage":false},{"functionName":"extendAliases","ranges":[{"startOffset":36903,"endOffset":38837,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36962,"endOffset":38825,"count":4},{"startOffset":37011,"endOffset":37016,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37026,"endOffset":38809,"count":85},{"startOffset":37311,"endOffset":37318,"count":49},{"startOffset":37318,"endOffset":37383,"count":36},{"startOffset":37383,"endOffset":37388,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37519,"endOffset":37946,"count":51},{"startOffset":37574,"endOffset":37614,"count":15},{"startOffset":37616,"endOffset":37924,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38080,"endOffset":38533,"count":66},{"startOffset":38136,"endOffset":38154,"count":52},{"startOffset":38155,"endOffset":38195,"count":15},{"startOffset":38197,"endOffset":38511,"count":15},{"startOffset":38299,"endOffset":38338,"count":0},{"startOffset":38340,"endOffset":38485,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38583,"endOffset":38789,"count":30}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38680,"endOffset":38764,"count":32}],"isBlockCoverage":true},{"functionName":"checkAllAliases","ranges":[{"startOffset":38846,"endOffset":39131,"count":37},{"startOffset":38941,"endOffset":38946,"count":1},{"startOffset":39096,"endOffset":39112,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39040,"endOffset":39065,"count":67}],"isBlockCoverage":true},{"functionName":"hasAnyFlag","ranges":[{"startOffset":39140,"endOffset":39438,"count":0}],"isBlockCoverage":false},{"functionName":"hasFlagsMatching","ranges":[{"startOffset":39447,"endOffset":39727,"count":0}],"isBlockCoverage":false},{"functionName":"hasAllShortFlags","ranges":[{"startOffset":39815,"endOffset":40773,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOptionAsArg","ranges":[{"startOffset":40782,"endOffset":40913,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOption","ranges":[{"startOffset":40922,"endOffset":42057,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":42169,"endOffset":42496,"count":0}],"isBlockCoverage":false},{"functionName":"defaultForType","ranges":[{"startOffset":42567,"endOffset":42903,"count":0}],"isBlockCoverage":false},{"functionName":"guessType","ranges":[{"startOffset":42961,"endOffset":43521,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":43530,"endOffset":43605,"count":0}],"isBlockCoverage":false},{"functionName":"checkConfiguration","ranges":[{"startOffset":43679,"endOffset":44309,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":43812,"endOffset":44297,"count":0}],"isBlockCoverage":false},{"functionName":"combineAliases","ranges":[{"startOffset":44701,"endOffset":46168,"count":1},{"startOffset":45228,"endOffset":45716,"count":15},{"startOffset":45294,"endOffset":45706,"count":105},{"startOffset":45487,"endOffset":45692,"count":0},{"startOffset":45706,"endOffset":45716,"count":105},{"startOffset":45716,"endOffset":45722,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":44975,"endOffset":45053,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45352,"endOffset":45446,"count":210}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45825,"endOffset":46143,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":45888,"endOffset":45963,"count":30}],"isBlockCoverage":true},{"functionName":"increment","ranges":[{"startOffset":46332,"endOffset":46406,"count":24},{"startOffset":46389,"endOffset":46399,"count":0}],"isBlockCoverage":true},{"functionName":"sanitizeKey","ranges":[{"startOffset":46509,"endOffset":46613,"count":24},{"startOffset":46574,"endOffset":46595,"count":0}],"isBlockCoverage":true},{"functionName":"stripQuotes","ranges":[{"startOffset":46614,"endOffset":46826,"count":0}],"isBlockCoverage":false}]},{"scriptId":"521","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/parse-command.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1060,"count":1}],"isBlockCoverage":true},{"functionName":"parseCommand","ranges":[{"startOffset":7,"endOffset":1059,"count":183},{"startOffset":299,"endOffset":346,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":498,"endOffset":1029,"count":321},{"startOffset":613,"endOffset":645,"count":0},{"startOffset":659,"endOffset":675,"count":0},{"startOffset":705,"endOffset":857,"count":108},{"startOffset":857,"endOffset":1023,"count":213}],"isBlockCoverage":true}]},{"scriptId":"522","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/utils/which-module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":321,"count":1}],"isBlockCoverage":true},{"functionName":"whichModule","ranges":[{"startOffset":15,"endOffset":320,"count":0}],"isBlockCoverage":false}]},{"scriptId":"523","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/completion-templates.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1452,"count":1}],"isBlockCoverage":true}]},{"scriptId":"524","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs@17.7.2/node_modules/yargs/build/lib/utils/levenshtein.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1031,"count":1}],"isBlockCoverage":true},{"functionName":"levenshtein","ranges":[{"startOffset":7,"endOffset":1030,"count":0}],"isBlockCoverage":false}]},{"scriptId":"525","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/esm/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7161,"count":1}],"isBlockCoverage":true},{"functionName":"isPatternList","ranges":[{"startOffset":134,"endOffset":156,"count":4}],"isBlockCoverage":true},{"functionName":"isGlobList","ranges":[{"startOffset":177,"endOffset":199,"count":4}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":295,"endOffset":7125,"count":4}],"isBlockCoverage":true},{"functionName":"Pattern","ranges":[{"startOffset":486,"endOffset":2859,"count":4},{"startOffset":581,"endOffset":647,"count":0},{"startOffset":683,"endOffset":746,"count":0},{"startOffset":799,"endOffset":892,"count":0},{"startOffset":982,"endOffset":1048,"count":0},{"startOffset":1296,"endOffset":2853,"count":1},{"startOffset":1640,"endOffset":2269,"count":0},{"startOffset":2328,"endOffset":2843,"count":0}],"isBlockCoverage":true},{"functionName":"pattern","ranges":[{"startOffset":2934,"endOffset":2998,"count":13}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":3064,"endOffset":3149,"count":0}],"isBlockCoverage":false},{"functionName":"isGlobstar","ranges":[{"startOffset":3215,"endOffset":3295,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":3358,"endOffset":3441,"count":0}],"isBlockCoverage":false},{"functionName":"globString","ranges":[{"startOffset":3526,"endOffset":3888,"count":2},{"startOffset":3643,"endOffset":3813,"count":1},{"startOffset":3683,"endOffset":3762,"count":0},{"startOffset":3834,"endOffset":3879,"count":1}],"isBlockCoverage":true},{"functionName":"hasMore","ranges":[{"startOffset":3968,"endOffset":4031,"count":8}],"isBlockCoverage":true},{"functionName":"rest","ranges":[{"startOffset":4127,"endOffset":4545,"count":12},{"startOffset":4186,"endOffset":4204,"count":8},{"startOffset":4204,"endOffset":4246,"count":4},{"startOffset":4246,"endOffset":4273,"count":1},{"startOffset":4273,"endOffset":4544,"count":3}],"isBlockCoverage":true},{"functionName":"isUNC","ranges":[{"startOffset":4629,"endOffset":5096,"count":2},{"startOffset":4718,"endOffset":4743,"count":1},{"startOffset":4756,"endOffset":5089,"count":1},{"startOffset":4816,"endOffset":4856,"count":0},{"startOffset":4857,"endOffset":4892,"count":0},{"startOffset":4893,"endOffset":4928,"count":0},{"startOffset":4929,"endOffset":4977,"count":0},{"startOffset":4978,"endOffset":5008,"count":0},{"startOffset":5009,"endOffset":5057,"count":0},{"startOffset":5058,"endOffset":5088,"count":0}],"isBlockCoverage":true},{"functionName":"isDrive","ranges":[{"startOffset":5433,"endOffset":5811,"count":2},{"startOffset":5526,"endOffset":5553,"count":1},{"startOffset":5566,"endOffset":5804,"count":1},{"startOffset":5628,"endOffset":5668,"count":0},{"startOffset":5669,"endOffset":5707,"count":0},{"startOffset":5708,"endOffset":5756,"count":0},{"startOffset":5757,"endOffset":5803,"count":0}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":6044,"endOffset":6337,"count":8},{"startOffset":6143,"endOffset":6173,"count":7},{"startOffset":6186,"endOffset":6330,"count":1},{"startOffset":6238,"endOffset":6254,"count":0}],"isBlockCoverage":true},{"functionName":"root","ranges":[{"startOffset":6412,"endOffset":6581,"count":1},{"startOffset":6520,"endOffset":6540,"count":0},{"startOffset":6542,"endOffset":6557,"count":0}],"isBlockCoverage":true},{"functionName":"checkFollowGlobstar","ranges":[{"startOffset":6699,"endOffset":6836,"count":0}],"isBlockCoverage":false},{"functionName":"markFollowGlobstar","ranges":[{"startOffset":6932,"endOffset":7123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"526","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/esm/brace-expressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5631,"count":1}],"isBlockCoverage":true},{"functionName":"braceEscape","ranges":[{"startOffset":894,"endOffset":931,"count":0}],"isBlockCoverage":false},{"functionName":"regexpEscape","ranges":[{"startOffset":992,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"rangesToString","ranges":[{"startOffset":1130,"endOffset":1157,"count":0}],"isBlockCoverage":false},{"functionName":"parseClass","ranges":[{"startOffset":1522,"endOffset":5584,"count":0}],"isBlockCoverage":false}]},{"scriptId":"527","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/esm/walker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12569,"count":1}],"isBlockCoverage":true},{"functionName":"makeIgnore","ranges":[{"startOffset":247,"endOffset":392,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":471,"endOffset":10321,"count":1}],"isBlockCoverage":true},{"functionName":"GlobUtil","ranges":[{"startOffset":683,"endOffset":1725,"count":1},{"startOffset":866,"endOffset":872,"count":0},{"startOffset":1005,"endOffset":1318,"count":0},{"startOffset":1485,"endOffset":1496,"count":0},{"startOffset":1552,"endOffset":1719,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1643,"endOffset":1707,"count":0}],"isBlockCoverage":false},{"functionName":"#ignored","ranges":[{"startOffset":1730,"endOffset":1823,"count":6},{"startOffset":1799,"endOffset":1816,"count":0}],"isBlockCoverage":true},{"functionName":"#childrenIgnored","ranges":[{"startOffset":1828,"endOffset":1914,"count":1},{"startOffset":1882,"endOffset":1907,"count":0}],"isBlockCoverage":true},{"functionName":"pause","ranges":[{"startOffset":1949,"endOffset":1992,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":1997,"endOffset":2275,"count":0}],"isBlockCoverage":false},{"functionName":"onResume","ranges":[{"startOffset":2280,"endOffset":2535,"count":0}],"isBlockCoverage":false},{"functionName":"matchCheck","ranges":[{"startOffset":2653,"endOffset":3427,"count":2},{"startOffset":2700,"endOffset":2718,"count":0},{"startOffset":2732,"endOffset":2749,"count":0},{"startOffset":2799,"endOffset":2949,"count":0},{"startOffset":3035,"endOffset":3053,"count":0},{"startOffset":3087,"endOffset":3105,"count":0},{"startOffset":3106,"endOffset":3128,"count":0},{"startOffset":3130,"endOffset":3375,"count":0}],"isBlockCoverage":true},{"functionName":"matchCheckTest","ranges":[{"startOffset":3432,"endOffset":3891,"count":2},{"startOffset":3520,"endOffset":3549,"count":0},{"startOffset":3574,"endOffset":3591,"count":0},{"startOffset":3626,"endOffset":3645,"count":0},{"startOffset":3680,"endOffset":3716,"count":0},{"startOffset":3717,"endOffset":3755,"count":0},{"startOffset":3756,"endOffset":3809,"count":0},{"startOffset":3873,"endOffset":3884,"count":0}],"isBlockCoverage":true},{"functionName":"matchCheckSync","ranges":[{"startOffset":3896,"endOffset":4592,"count":0}],"isBlockCoverage":false},{"functionName":"matchFinish","ranges":[{"startOffset":4597,"endOffset":5665,"count":2},{"startOffset":4666,"endOffset":4673,"count":0},{"startOffset":4782,"endOffset":4802,"count":0},{"startOffset":4804,"endOffset":4901,"count":0},{"startOffset":4966,"endOffset":4986,"count":0},{"startOffset":5050,"endOffset":5068,"count":0},{"startOffset":5069,"endOffset":5080,"count":0},{"startOffset":5161,"endOffset":5203,"count":0},{"startOffset":5226,"endOffset":5353,"count":0},{"startOffset":5409,"endOffset":5428,"count":0},{"startOffset":5491,"endOffset":5527,"count":0},{"startOffset":5528,"endOffset":5561,"count":0},{"startOffset":5616,"endOffset":5628,"count":0}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":5670,"endOffset":5818,"count":2}],"isBlockCoverage":true},{"functionName":"matchSync","ranges":[{"startOffset":5823,"endOffset":5967,"count":0}],"isBlockCoverage":false},{"functionName":"walkCB","ranges":[{"startOffset":5972,"endOffset":6189,"count":1},{"startOffset":6056,"endOffset":6065,"count":0},{"startOffset":6079,"endOffset":6084,"count":0}],"isBlockCoverage":true},{"functionName":"walkCB2","ranges":[{"startOffset":6194,"endOffset":7608,"count":1},{"startOffset":6292,"endOffset":6304,"count":0},{"startOffset":6328,"endOffset":6337,"count":0},{"startOffset":6351,"endOffset":6356,"count":0},{"startOffset":6382,"endOffset":6493,"count":0},{"startOffset":6948,"endOffset":7103,"count":0},{"startOffset":7201,"endOffset":7230,"count":0},{"startOffset":7232,"endOffset":7273,"count":0},{"startOffset":7400,"endOffset":7449,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6410,"endOffset":6461,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":6804,"endOffset":6874,"count":2},{"startOffset":6859,"endOffset":6864,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7079,"endOffset":7091,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7497,"endOffset":7554,"count":1}],"isBlockCoverage":true},{"functionName":"walkCB3","ranges":[{"startOffset":7613,"endOffset":8255,"count":1},{"startOffset":7905,"endOffset":8060,"count":2},{"startOffset":7957,"endOffset":7966,"count":0},{"startOffset":8132,"endOffset":8233,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":7761,"endOffset":7831,"count":3},{"startOffset":7816,"endOffset":7821,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8036,"endOffset":8048,"count":2}],"isBlockCoverage":true},{"functionName":"walkCBSync","ranges":[{"startOffset":8260,"endOffset":8485,"count":0}],"isBlockCoverage":false},{"functionName":"walkCB2Sync","ranges":[{"startOffset":8490,"endOffset":9700,"count":0}],"isBlockCoverage":false},{"functionName":"walkCB3Sync","ranges":[{"startOffset":9705,"endOffset":10319,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":10329,"endOffset":11478,"count":1}],"isBlockCoverage":true},{"functionName":"GlobWalker","ranges":[{"startOffset":10394,"endOffset":10472,"count":1}],"isBlockCoverage":true},{"functionName":"matchEmit","ranges":[{"startOffset":10477,"endOffset":10526,"count":2}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":10531,"endOffset":11051,"count":1},{"startOffset":10569,"endOffset":10578,"count":0},{"startOffset":10592,"endOffset":10617,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10728,"endOffset":11014,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10794,"endOffset":11002,"count":1},{"startOffset":10833,"endOffset":10842,"count":0},{"startOffset":10844,"endOffset":10908,"count":0}],"isBlockCoverage":true},{"functionName":"walkSync","ranges":[{"startOffset":11056,"endOffset":11476,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":11486,"endOffset":12534,"count":0}],"isBlockCoverage":true}]},{"scriptId":"528","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/path-scurry@1.11.1/node_modules/path-scurry/dist/esm/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":64317,"count":1},{"startOffset":63877,"endOffset":63888,"count":0},{"startOffset":64184,"endOffset":64201,"count":0},{"startOffset":64265,"endOffset":64282,"count":0}],"isBlockCoverage":true},{"functionName":"fsFromOption","ranges":[{"startOffset":794,"endOffset":1049,"count":2},{"startOffset":844,"endOffset":868,"count":0},{"startOffset":889,"endOffset":1049,"count":0}],"isBlockCoverage":true},{"functionName":"uncToDrive","ranges":[{"startOffset":1159,"endOffset":1234,"count":0}],"isBlockCoverage":false},{"functionName":"entToType","ranges":[{"startOffset":2360,"endOffset":2667,"count":5},{"startOffset":2378,"endOffset":2385,"count":4},{"startOffset":2390,"endOffset":2667,"count":1},{"startOffset":2424,"endOffset":2667,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":2753,"endOffset":2908,"count":11},{"startOffset":2818,"endOffset":2827,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeNocase","ranges":[{"startOffset":2974,"endOffset":3148,"count":17},{"startOffset":3045,"endOffset":3054,"count":6},{"startOffset":3054,"endOffset":3147,"count":11}],"isBlockCoverage":true},{"functionName":"ResolveCache","ranges":[{"startOffset":3286,"endOffset":3336,"count":2}],"isBlockCoverage":true},{"functionName":"ChildrenCache","ranges":[{"startOffset":4222,"endOffset":4392,"count":1}],"isBlockCoverage":true},{"functionName":"sizeCalculation","ranges":[{"startOffset":4356,"endOffset":4373,"count":7}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5011,"endOffset":36632,"count":11}],"isBlockCoverage":true},{"functionName":"get dev","ranges":[{"startOffset":6152,"endOffset":6195,"count":0}],"isBlockCoverage":false},{"functionName":"get mode","ranges":[{"startOffset":6211,"endOffset":6256,"count":0}],"isBlockCoverage":false},{"functionName":"get nlink","ranges":[{"startOffset":6273,"endOffset":6320,"count":0}],"isBlockCoverage":false},{"functionName":"get uid","ranges":[{"startOffset":6335,"endOffset":6378,"count":0}],"isBlockCoverage":false},{"functionName":"get gid","ranges":[{"startOffset":6393,"endOffset":6436,"count":0}],"isBlockCoverage":false},{"functionName":"get rdev","ranges":[{"startOffset":6452,"endOffset":6497,"count":0}],"isBlockCoverage":false},{"functionName":"get blksize","ranges":[{"startOffset":6516,"endOffset":6567,"count":0}],"isBlockCoverage":false},{"functionName":"get ino","ranges":[{"startOffset":6582,"endOffset":6625,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":6641,"endOffset":6686,"count":0}],"isBlockCoverage":false},{"functionName":"get blocks","ranges":[{"startOffset":6704,"endOffset":6753,"count":0}],"isBlockCoverage":false},{"functionName":"get atimeMs","ranges":[{"startOffset":6772,"endOffset":6823,"count":0}],"isBlockCoverage":false},{"functionName":"get mtimeMs","ranges":[{"startOffset":6842,"endOffset":6893,"count":0}],"isBlockCoverage":false},{"functionName":"get ctimeMs","ranges":[{"startOffset":6912,"endOffset":6963,"count":0}],"isBlockCoverage":false},{"functionName":"get birthtimeMs","ranges":[{"startOffset":6986,"endOffset":7045,"count":0}],"isBlockCoverage":false},{"functionName":"get atime","ranges":[{"startOffset":7062,"endOffset":7109,"count":0}],"isBlockCoverage":false},{"functionName":"get mtime","ranges":[{"startOffset":7126,"endOffset":7173,"count":0}],"isBlockCoverage":false},{"functionName":"get ctime","ranges":[{"startOffset":7190,"endOffset":7237,"count":0}],"isBlockCoverage":false},{"functionName":"get birthtime","ranges":[{"startOffset":7258,"endOffset":7313,"count":0}],"isBlockCoverage":false},{"functionName":"get parentPath","ranges":[{"startOffset":7735,"endOffset":7808,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":7985,"endOffset":8035,"count":0}],"isBlockCoverage":false},{"functionName":"PathBase","ranges":[{"startOffset":8228,"endOffset":8886,"count":11},{"startOffset":8384,"endOffset":8401,"count":0},{"startOffset":8524,"endOffset":8531,"count":1},{"startOffset":8758,"endOffset":8809,"count":10},{"startOffset":8809,"endOffset":8880,"count":1}],"isBlockCoverage":true},{"functionName":"depth","ranges":[{"startOffset":9039,"endOffset":9245,"count":0}],"isBlockCoverage":false},{"functionName":"childrenCache","ranges":[{"startOffset":9283,"endOffset":9337,"count":10}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":9440,"endOffset":9832,"count":2},{"startOffset":9475,"endOffset":9511,"count":0},{"startOffset":9699,"endOffset":9759,"count":0}],"isBlockCoverage":true},{"functionName":"#resolveParts","ranges":[{"startOffset":9837,"endOffset":9988,"count":2}],"isBlockCoverage":true},{"functionName":"children","ranges":[{"startOffset":10287,"endOffset":10585,"count":8},{"startOffset":10369,"endOffset":10407,"count":1},{"startOffset":10407,"endOffset":10584,"count":7}],"isBlockCoverage":true},{"functionName":"child","ranges":[{"startOffset":10990,"endOffset":12206,"count":6},{"startOffset":11063,"endOffset":11099,"count":0},{"startOffset":11131,"endOffset":11182,"count":0},{"startOffset":11312,"endOffset":11333,"count":0},{"startOffset":11369,"endOffset":11461,"count":0},{"startOffset":11667,"endOffset":11677,"count":5},{"startOffset":11678,"endOffset":11682,"count":1},{"startOffset":11724,"endOffset":11755,"count":2},{"startOffset":11756,"endOffset":11767,"count":4},{"startOffset":11940,"endOffset":11987,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":12373,"endOffset":12763,"count":8},{"startOffset":12422,"endOffset":12432,"count":0},{"startOffset":12475,"endOffset":12521,"count":2},{"startOffset":12521,"endOffset":12601,"count":6},{"startOffset":12601,"endOffset":12661,"count":0},{"startOffset":12661,"endOffset":12720,"count":6},{"startOffset":12720,"endOffset":12732,"count":4},{"startOffset":12733,"endOffset":12737,"count":2},{"startOffset":12738,"endOffset":12748,"count":4}],"isBlockCoverage":true},{"functionName":"relativePosix","ranges":[{"startOffset":13031,"endOffset":13506,"count":0}],"isBlockCoverage":false},{"functionName":"fullpath","ranges":[{"startOffset":13585,"endOffset":13963,"count":9},{"startOffset":13640,"endOffset":13686,"count":4},{"startOffset":13686,"endOffset":13766,"count":5},{"startOffset":13766,"endOffset":13826,"count":1},{"startOffset":13826,"endOffset":13895,"count":4},{"startOffset":13895,"endOffset":13899,"count":1},{"startOffset":13900,"endOffset":13910,"count":3}],"isBlockCoverage":true},{"functionName":"fullpathPosix","ranges":[{"startOffset":14162,"endOffset":14842,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknown","ranges":[{"startOffset":15113,"endOffset":15180,"count":3}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":15185,"endOffset":15241,"count":0}],"isBlockCoverage":false},{"functionName":"getType","ranges":[{"startOffset":15246,"endOffset":15822,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":15878,"endOffset":15940,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":15993,"endOffset":16060,"count":0}],"isBlockCoverage":false},{"functionName":"isCharacterDevice","ranges":[{"startOffset":16120,"endOffset":16193,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockDevice","ranges":[{"startOffset":16249,"endOffset":16318,"count":0}],"isBlockCoverage":false},{"functionName":"isFIFO","ranges":[{"startOffset":16371,"endOffset":16433,"count":0}],"isBlockCoverage":false},{"functionName":"isSocket","ranges":[{"startOffset":16483,"endOffset":16548,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolicLink","ranges":[{"startOffset":16605,"endOffset":16676,"count":1}],"isBlockCoverage":true},{"functionName":"lstatCached","ranges":[{"startOffset":16928,"endOffset":17010,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkCached","ranges":[{"startOffset":17371,"endOffset":17428,"count":0}],"isBlockCoverage":false},{"functionName":"realpathCached","ranges":[{"startOffset":17794,"endOffset":17849,"count":0}],"isBlockCoverage":false},{"functionName":"readdirCached","ranges":[{"startOffset":18232,"endOffset":18353,"count":1}],"isBlockCoverage":true},{"functionName":"canReadlink","ranges":[{"startOffset":18650,"endOffset":18999,"count":0}],"isBlockCoverage":false},{"functionName":"calledReaddir","ranges":[{"startOffset":19160,"endOffset":19231,"count":2}],"isBlockCoverage":true},{"functionName":"isENOENT","ranges":[{"startOffset":19480,"endOffset":19538,"count":1}],"isBlockCoverage":true},{"functionName":"isNamed","ranges":[{"startOffset":20007,"endOffset":20154,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":20468,"endOffset":21247,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkSync","ranges":[{"startOffset":21313,"endOffset":22075,"count":0}],"isBlockCoverage":false},{"functionName":"#readdirSuccess","ranges":[{"startOffset":22080,"endOffset":22426,"count":1},{"startOffset":22322,"endOffset":22420,"count":0}],"isBlockCoverage":true},{"functionName":"#markENOENT","ranges":[{"startOffset":22431,"endOffset":22638,"count":0}],"isBlockCoverage":false},{"functionName":"#markChildrenENOENT","ranges":[{"startOffset":22643,"endOffset":22880,"count":0}],"isBlockCoverage":false},{"functionName":"#markENOREALPATH","ranges":[{"startOffset":22885,"endOffset":22975,"count":0}],"isBlockCoverage":false},{"functionName":"#markENOTDIR","ranges":[{"startOffset":23044,"endOffset":23707,"count":0}],"isBlockCoverage":false},{"functionName":"#readdirFail","ranges":[{"startOffset":23712,"endOffset":24051,"count":0}],"isBlockCoverage":false},{"functionName":"#lstatFail","ranges":[{"startOffset":24056,"endOffset":24466,"count":0}],"isBlockCoverage":false},{"functionName":"#readlinkFail","ranges":[{"startOffset":24471,"endOffset":25215,"count":0}],"isBlockCoverage":false},{"functionName":"#readdirAddChild","ranges":[{"startOffset":25220,"endOffset":25351,"count":4}],"isBlockCoverage":true},{"functionName":"#readdirAddNewChild","ranges":[{"startOffset":25356,"endOffset":25783,"count":4}],"isBlockCoverage":true},{"functionName":"#readdirMaybePromoteChild","ranges":[{"startOffset":25788,"endOffset":26160,"count":4},{"startOffset":25877,"endOffset":26154,"count":0}],"isBlockCoverage":true},{"functionName":"#readdirPromoteChild","ranges":[{"startOffset":26165,"endOffset":26851,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":27488,"endOffset":27785,"count":1},{"startOffset":27701,"endOffset":27769,"count":0}],"isBlockCoverage":true},{"functionName":"lstatSync","ranges":[{"startOffset":27848,"endOffset":28132,"count":0}],"isBlockCoverage":false},{"functionName":"#applyStat","ranges":[{"startOffset":28137,"endOffset":29128,"count":1},{"startOffset":29057,"endOffset":29074,"count":0},{"startOffset":29076,"endOffset":29122,"count":0}],"isBlockCoverage":true},{"functionName":"#callOnReaddirCB","ranges":[{"startOffset":29188,"endOffset":29395,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29363,"endOffset":29387,"count":1}],"isBlockCoverage":true},{"functionName":"readdirCB","ranges":[{"startOffset":30161,"endOffset":31647,"count":1},{"startOffset":30229,"endOffset":30387,"count":0},{"startOffset":30464,"endOffset":30683,"count":0},{"startOffset":30815,"endOffset":30846,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30337,"endOffset":30355,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30634,"endOffset":30651,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31097,"endOffset":31639,"count":1},{"startOffset":31136,"endOffset":31237,"count":0},{"startOffset":31396,"endOffset":31471,"count":4}],"isBlockCoverage":true},{"functionName":"readdir","ranges":[{"startOffset":31948,"endOffset":33190,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":33255,"endOffset":34056,"count":0}],"isBlockCoverage":false},{"functionName":"canReaddir","ranges":[{"startOffset":34061,"endOffset":34445,"count":13},{"startOffset":34123,"endOffset":34136,"count":4},{"startOffset":34136,"endOffset":34314,"count":9},{"startOffset":34314,"endOffset":34331,"count":2},{"startOffset":34332,"endOffset":34349,"count":0},{"startOffset":34352,"endOffset":34389,"count":0},{"startOffset":34389,"endOffset":34444,"count":9}],"isBlockCoverage":true},{"functionName":"shouldWalk","ranges":[{"startOffset":34450,"endOffset":34655,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":34974,"endOffset":35375,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":35432,"endOffset":35820,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35974,"endOffset":36630,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":36811,"endOffset":38684,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":38781,"endOffset":39702,"count":11}],"isBlockCoverage":true},{"functionName":"PathPosix","ranges":[{"startOffset":39162,"endOffset":39304,"count":11}],"isBlockCoverage":true},{"functionName":"getRootString","ranges":[{"startOffset":39342,"endOffset":39417,"count":2},{"startOffset":39400,"endOffset":39405,"count":0}],"isBlockCoverage":true},{"functionName":"getRoot","ranges":[{"startOffset":39455,"endOffset":39507,"count":0}],"isBlockCoverage":false},{"functionName":"newChild","ranges":[{"startOffset":39545,"endOffset":39700,"count":10}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":40035,"endOffset":61046,"count":1}],"isBlockCoverage":true},{"functionName":"PathScurryBase","ranges":[{"startOffset":40880,"endOffset":42664,"count":1},{"startOffset":41093,"endOffset":41142,"count":0},{"startOffset":41745,"endOffset":41757,"count":0},{"startOffset":41759,"endOffset":41795,"count":0},{"startOffset":41860,"endOffset":41958,"count":0},{"startOffset":42310,"endOffset":42633,"count":4},{"startOffset":42554,"endOffset":42558,"count":3},{"startOffset":42559,"endOffset":42568,"count":1}],"isBlockCoverage":true},{"functionName":"depth","ranges":[{"startOffset":42745,"endOffset":42897,"count":0}],"isBlockCoverage":false},{"functionName":"childrenCache","ranges":[{"startOffset":43072,"endOffset":43126,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":43441,"endOffset":44142,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePosix","ranges":[{"startOffset":44604,"endOffset":45325,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":45426,"endOffset":45589,"count":0}],"isBlockCoverage":false},{"functionName":"relativePosix","ranges":[{"startOffset":45746,"endOffset":45919,"count":0}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":46006,"endOffset":46163,"count":0}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":46249,"endOffset":46429,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":46434,"endOffset":46966,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":46971,"endOffset":47545,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":48198,"endOffset":48361,"count":0}],"isBlockCoverage":false},{"functionName":"lstatSync","ranges":[{"startOffset":48430,"endOffset":48595,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":48600,"endOffset":49025,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkSync","ranges":[{"startOffset":49030,"endOffset":49451,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":49456,"endOffset":49881,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":49886,"endOffset":50307,"count":0}],"isBlockCoverage":false},{"functionName":"walk","ranges":[{"startOffset":50312,"endOffset":52449,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":52454,"endOffset":53642,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":53990,"endOffset":54053,"count":0}],"isBlockCoverage":false},{"functionName":"iterate","ranges":[{"startOffset":54058,"endOffset":54628,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":54772,"endOffset":54834,"count":0}],"isBlockCoverage":false},{"functionName":"iterateSync","ranges":[{"startOffset":54839,"endOffset":55963,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":55968,"endOffset":58904,"count":0}],"isBlockCoverage":false},{"functionName":"streamSync","ranges":[{"startOffset":58909,"endOffset":60863,"count":0}],"isBlockCoverage":false},{"functionName":"chdir","ranges":[{"startOffset":60868,"endOffset":61044,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":61232,"endOffset":62334,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":62559,"endOffset":63266,"count":1}],"isBlockCoverage":true},{"functionName":"PathScurryPosix","ranges":[{"startOffset":62686,"endOffset":62861,"count":1}],"isBlockCoverage":true},{"functionName":"parseRootPath","ranges":[{"startOffset":62899,"endOffset":62946,"count":1}],"isBlockCoverage":true},{"functionName":"newRoot","ranges":[{"startOffset":62984,"endOffset":63121,"count":1}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":63209,"endOffset":63264,"count":0}],"isBlockCoverage":false},{"functionName":"PathScurryDarwin","ranges":[{"startOffset":63539,"endOffset":63671,"count":1}],"isBlockCoverage":true}]},{"scriptId":"529","url":"node:fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":73,"count":1}],"isBlockCoverage":false}]},{"scriptId":"530","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs-parser@21.1.1/node_modules/yargs-parser/build/lib/yargs-parser-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":425,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":125,"endOffset":363,"count":1}],"isBlockCoverage":true}]},{"scriptId":"531","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/yargs-parser@21.1.1/node_modules/yargs-parser/build/lib/tokenize-arg-string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1092,"count":1}],"isBlockCoverage":true},{"functionName":"tokenizeArgString","ranges":[{"startOffset":144,"endOffset":1091,"count":1},{"startOffset":296,"endOffset":1090,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":249,"endOffset":288,"count":2},{"startOffset":276,"endOffset":284,"count":0}],"isBlockCoverage":true}]},{"scriptId":"532","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minipass@7.1.2/node_modules/minipass/dist/esm/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33228,"count":1},{"startOffset":70,"endOffset":123,"count":0}],"isBlockCoverage":true},{"functionName":"isStream","ranges":[{"startOffset":408,"endOffset":559,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":663,"endOffset":890,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":994,"endOffset":1138,"count":0}],"isBlockCoverage":false},{"functionName":"defer","ranges":[{"startOffset":2382,"endOffset":2416,"count":0}],"isBlockCoverage":false},{"functionName":"nodefer","ranges":[{"startOffset":2434,"endOffset":2446,"count":0}],"isBlockCoverage":false},{"functionName":"isEndish","ranges":[{"startOffset":2465,"endOffset":2526,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferLike","ranges":[{"startOffset":2554,"endOffset":2733,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayBufferView","ranges":[{"startOffset":2761,"endOffset":2812,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2901,"endOffset":3449,"count":0}],"isBlockCoverage":true},{"functionName":"unpipe","ranges":[{"startOffset":3606,"endOffset":3706,"count":0}],"isBlockCoverage":false},{"functionName":"PipeProxyErrors","ranges":[{"startOffset":3711,"endOffset":3879,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectModeOptions","ranges":[{"startOffset":3910,"endOffset":3931,"count":0}],"isBlockCoverage":false},{"functionName":"isEncodingOptions","ranges":[{"startOffset":3959,"endOffset":4022,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4384,"endOffset":33194,"count":0}],"isBlockCoverage":true}]},{"scriptId":"533","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/lru-cache@10.4.3/node_modules/lru-cache/dist/esm/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":54894,"count":1},{"startOffset":159,"endOffset":165,"count":0},{"startOffset":283,"endOffset":287,"count":0},{"startOffset":636,"endOffset":2205,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarning","ranges":[{"startOffset":332,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":664,"endOffset":850,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":878,"endOffset":1387,"count":0}],"isBlockCoverage":true},{"functionName":"warnACPolyfill","ranges":[{"startOffset":1499,"endOffset":2202,"count":0}],"isBlockCoverage":false},{"functionName":"shouldWarn","ranges":[{"startOffset":2246,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"isPosInt","ranges":[{"startOffset":2321,"endOffset":2376,"count":26},{"startOffset":2330,"endOffset":2352,"count":18},{"startOffset":2353,"endOffset":2361,"count":18},{"startOffset":2362,"endOffset":2376,"count":18}],"isBlockCoverage":true},{"functionName":"getUintArray","ranges":[{"startOffset":2891,"endOffset":3208,"count":5},{"startOffset":2919,"endOffset":2925,"count":1},{"startOffset":2930,"endOffset":3208,"count":4},{"startOffset":2983,"endOffset":3208,"count":0}],"isBlockCoverage":true},{"functionName":"ZeroArray","ranges":[{"startOffset":3267,"endOffset":3335,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3338,"endOffset":4088,"count":2}],"isBlockCoverage":true},{"functionName":"<static_initializer>","ranges":[{"startOffset":3405,"endOffset":3433,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":3446,"endOffset":3687,"count":3},{"startOffset":3537,"endOffset":3547,"count":1},{"startOffset":3547,"endOffset":3686,"count":2}],"isBlockCoverage":true},{"functionName":"Stack","ranges":[{"startOffset":3692,"endOffset":3969,"count":2},{"startOffset":3784,"endOffset":3871,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3974,"endOffset":4027,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":4032,"endOffset":4086,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4729,"endOffset":54860,"count":3}],"isBlockCoverage":true},{"functionName":"unsafeExposeInternals","ranges":[{"startOffset":6790,"endOffset":7700,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":7808,"endOffset":7851,"count":0}],"isBlockCoverage":false},{"functionName":"get maxSize","ranges":[{"startOffset":7928,"endOffset":7979,"count":0}],"isBlockCoverage":false},{"functionName":"get calculatedSize","ranges":[{"startOffset":8065,"endOffset":8130,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":8210,"endOffset":8255,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchMethod","ranges":[{"startOffset":8336,"endOffset":8395,"count":0}],"isBlockCoverage":false},{"functionName":"get memoMethod","ranges":[{"startOffset":8400,"endOffset":8457,"count":0}],"isBlockCoverage":false},{"functionName":"get dispose","ranges":[{"startOffset":8534,"endOffset":8585,"count":0}],"isBlockCoverage":false},{"functionName":"get disposeAfter","ranges":[{"startOffset":8667,"endOffset":8728,"count":0}],"isBlockCoverage":false},{"functionName":"LRUCache","ranges":[{"startOffset":8733,"endOffset":13374,"count":3},{"startOffset":9139,"endOffset":9156,"count":2},{"startOffset":9158,"endOffset":9246,"count":0},{"startOffset":9277,"endOffset":9296,"count":2},{"startOffset":9297,"endOffset":9304,"count":1},{"startOffset":9330,"endOffset":9399,"count":0},{"startOffset":9599,"endOffset":9939,"count":1},{"startOffset":9632,"endOffset":9653,"count":0},{"startOffset":9655,"endOffset":9777,"count":0},{"startOffset":9838,"endOffset":9929,"count":0},{"startOffset":9977,"endOffset":10024,"count":0},{"startOffset":10026,"endOffset":10114,"count":0},{"startOffset":10192,"endOffset":10240,"count":0},{"startOffset":10242,"endOffset":10333,"count":0},{"startOffset":10838,"endOffset":10886,"count":0},{"startOffset":10935,"endOffset":11026,"count":0},{"startOffset":11675,"endOffset":12096,"count":1},{"startOffset":11762,"endOffset":11873,"count":0},{"startOffset":11934,"endOffset":12042,"count":0},{"startOffset":12354,"endOffset":12376,"count":0},{"startOffset":12425,"endOffset":12428,"count":0},{"startOffset":12525,"endOffset":12716,"count":0},{"startOffset":12797,"endOffset":12814,"count":1},{"startOffset":12815,"endOffset":12837,"count":1},{"startOffset":12839,"endOffset":12935,"count":0},{"startOffset":12981,"endOffset":12998,"count":1},{"startOffset":13000,"endOffset":13368,"count":0}],"isBlockCoverage":true},{"functionName":"getRemainingTTL","ranges":[{"startOffset":13557,"endOffset":13638,"count":0}],"isBlockCoverage":false},{"functionName":"#initializeTTLTracking","ranges":[{"startOffset":13643,"endOffset":16319,"count":0}],"isBlockCoverage":false},{"functionName":"#updateItemAge","ranges":[{"startOffset":16397,"endOffset":16406,"count":0}],"isBlockCoverage":false},{"functionName":"#statusTTL","ranges":[{"startOffset":16425,"endOffset":16434,"count":0}],"isBlockCoverage":false},{"functionName":"#setItemTTL","ranges":[{"startOffset":16454,"endOffset":16463,"count":0}],"isBlockCoverage":false},{"functionName":"#isStale","ranges":[{"startOffset":16505,"endOffset":16516,"count":1}],"isBlockCoverage":true},{"functionName":"#initializeSizeTracking","ranges":[{"startOffset":16522,"endOffset":18388,"count":1}],"isBlockCoverage":true},{"functionName":"#removeItemSize","ranges":[{"startOffset":16692,"endOffset":16792,"count":0}],"isBlockCoverage":false},{"functionName":"#requireSize","ranges":[{"startOffset":16822,"endOffset":17861,"count":7},{"startOffset":17024,"endOffset":17065,"count":0},{"startOffset":17203,"endOffset":17309,"count":0},{"startOffset":17401,"endOffset":17529,"count":0},{"startOffset":17547,"endOffset":17812,"count":0}],"isBlockCoverage":true},{"functionName":"#addItemSize","ranges":[{"startOffset":17891,"endOffset":18381,"count":7},{"startOffset":18101,"endOffset":18159,"count":0},{"startOffset":18248,"endOffset":18371,"count":0}],"isBlockCoverage":true},{"functionName":"#removeItemSize","ranges":[{"startOffset":18411,"endOffset":18420,"count":0}],"isBlockCoverage":false},{"functionName":"#addItemSize","ranges":[{"startOffset":18441,"endOffset":18461,"count":0}],"isBlockCoverage":false},{"functionName":"#requireSize","ranges":[{"startOffset":18482,"endOffset":18692,"count":0}],"isBlockCoverage":false},{"functionName":"#indexes","ranges":[{"startOffset":18698,"endOffset":19208,"count":0}],"isBlockCoverage":false},{"functionName":"#rindexes","ranges":[{"startOffset":19213,"endOffset":19724,"count":0}],"isBlockCoverage":false},{"functionName":"#isValidIndex","ranges":[{"startOffset":19729,"endOffset":19859,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":20001,"endOffset":20308,"count":0}],"isBlockCoverage":false},{"functionName":"rentries","ranges":[{"startOffset":20514,"endOffset":20823,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":20966,"endOffset":21210,"count":0}],"isBlockCoverage":false},{"functionName":"rkeys","ranges":[{"startOffset":21414,"endOffset":21660,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":21805,"endOffset":22066,"count":0}],"isBlockCoverage":false},{"functionName":"rvalues","ranges":[{"startOffset":22274,"endOffset":22537,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22656,"endOffset":22714,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":23114,"endOffset":23548,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":23996,"endOffset":24359,"count":0}],"isBlockCoverage":false},{"functionName":"rforEach","ranges":[{"startOffset":24534,"endOffset":24899,"count":0}],"isBlockCoverage":false},{"functionName":"purgeStale","ranges":[{"startOffset":25015,"endOffset":25302,"count":0}],"isBlockCoverage":false},{"functionName":"info","ranges":[{"startOffset":25912,"endOffset":26681,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":27205,"endOffset":28155,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":28531,"endOffset":29176,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":30458,"endOffset":34391,"count":7},{"startOffset":30516,"endOffset":30580,"count":0},{"startOffset":31035,"endOffset":31303,"count":0},{"startOffset":31341,"endOffset":31352,"count":1},{"startOffset":31353,"endOffset":31374,"count":6},{"startOffset":31489,"endOffset":31501,"count":1},{"startOffset":31518,"endOffset":31711,"count":6},{"startOffset":31564,"endOffset":31582,"count":0},{"startOffset":31654,"endOffset":31674,"count":0},{"startOffset":32068,"endOffset":32087,"count":0},{"startOffset":32130,"endOffset":33815,"count":0},{"startOffset":33838,"endOffset":33852,"count":0},{"startOffset":33854,"endOffset":33908,"count":0},{"startOffset":33933,"endOffset":34115,"count":0},{"startOffset":34169,"endOffset":34186,"count":0},{"startOffset":34188,"endOffset":34364,"count":0}],"isBlockCoverage":true},{"functionName":"pop","ranges":[{"startOffset":34516,"endOffset":35273,"count":0}],"isBlockCoverage":false},{"functionName":"#evict","ranges":[{"startOffset":35278,"endOffset":36346,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":37089,"endOffset":38026,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":38255,"endOffset":38700,"count":0}],"isBlockCoverage":false},{"functionName":"#backgroundFetch","ranges":[{"startOffset":38705,"endOffset":43851,"count":0}],"isBlockCoverage":false},{"functionName":"#isBackgroundFetch","ranges":[{"startOffset":43856,"endOffset":44130,"count":8},{"startOffset":43940,"endOffset":44017,"count":0},{"startOffset":44018,"endOffset":44073,"count":0},{"startOffset":44074,"endOffset":44122,"count":0}],"isBlockCoverage":true},{"functionName":"fetch","ranges":[{"startOffset":44135,"endOffset":47465,"count":0}],"isBlockCoverage":false},{"functionName":"forceFetch","ranges":[{"startOffset":47470,"endOffset":47675,"count":0}],"isBlockCoverage":false},{"functionName":"memo","ranges":[{"startOffset":47680,"endOffset":48185,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":48371,"endOffset":50518,"count":8},{"startOffset":48627,"endOffset":50442,"count":1},{"startOffset":48778,"endOffset":48809,"count":0},{"startOffset":48848,"endOffset":49666,"count":0},{"startOffset":49734,"endOffset":49753,"count":0},{"startOffset":50169,"endOffset":50243,"count":0},{"startOffset":50321,"endOffset":50388,"count":0},{"startOffset":50442,"endOffset":50512,"count":7},{"startOffset":50468,"endOffset":50512,"count":0}],"isBlockCoverage":true},{"functionName":"#connect","ranges":[{"startOffset":50523,"endOffset":50599,"count":0}],"isBlockCoverage":false},{"functionName":"#moveToTail","ranges":[{"startOffset":50604,"endOffset":51266,"count":1},{"startOffset":50967,"endOffset":51260,"count":0}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":51394,"endOffset":51453,"count":0}],"isBlockCoverage":false},{"functionName":"#delete","ranges":[{"startOffset":51458,"endOffset":53477,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":53557,"endOffset":53610,"count":0}],"isBlockCoverage":false},{"functionName":"#clear","ranges":[{"startOffset":53615,"endOffset":54858,"count":0}],"isBlockCoverage":false}]},{"scriptId":"534","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/esm/processor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10453,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":189,"endOffset":770,"count":2}],"isBlockCoverage":true},{"functionName":"HasWalkedCache","ranges":[{"startOffset":227,"endOffset":293,"count":2}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":298,"endOffset":368,"count":1}],"isBlockCoverage":true},{"functionName":"hasWalked","ranges":[{"startOffset":373,"endOffset":484,"count":1},{"startOffset":450,"endOffset":455,"count":0}],"isBlockCoverage":true},{"functionName":"storeWalked","ranges":[{"startOffset":489,"endOffset":768,"count":2},{"startOffset":645,"endOffset":678,"count":0}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":993,"endOffset":1445,"count":2}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":1040,"endOffset":1253,"count":2},{"startOffset":1099,"endOffset":1102,"count":0},{"startOffset":1117,"endOffset":1120,"count":0},{"startOffset":1232,"endOffset":1245,"count":0}],"isBlockCoverage":true},{"functionName":"entries","ranges":[{"startOffset":1288,"endOffset":1443,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1345,"endOffset":1435,"count":2}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1554,"endOffset":2368,"count":2}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":1598,"endOffset":1953,"count":1},{"startOffset":1655,"endOffset":1686,"count":0},{"startOffset":1750,"endOffset":1887,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1823,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1958,"endOffset":2197,"count":1},{"startOffset":2066,"endOffset":2141,"count":0}],"isBlockCoverage":true},{"functionName":"entries","ranges":[{"startOffset":2202,"endOffset":2280,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2245,"endOffset":2272,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":2285,"endOffset":2366,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2339,"endOffset":2358,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2545,"endOffset":10415,"count":2}],"isBlockCoverage":true},{"functionName":"Processor","ranges":[{"startOffset":2696,"endOffset":2936,"count":2},{"startOffset":2883,"endOffset":2906,"count":1},{"startOffset":2907,"endOffset":2929,"count":1}],"isBlockCoverage":true},{"functionName":"processPatterns","ranges":[{"startOffset":2941,"endOffset":6855,"count":1},{"startOffset":3392,"endOffset":3423,"count":0},{"startOffset":3494,"endOffset":3903,"count":0},{"startOffset":3950,"endOffset":3959,"count":0},{"startOffset":4097,"endOffset":4139,"count":2},{"startOffset":4141,"endOffset":4283,"count":2},{"startOffset":4464,"endOffset":4473,"count":0},{"startOffset":4769,"endOffset":5054,"count":0},{"startOffset":5483,"endOffset":5517,"count":0},{"startOffset":5518,"endOffset":5570,"count":0},{"startOffset":5787,"endOffset":5796,"count":0},{"startOffset":5799,"endOffset":6030,"count":0},{"startOffset":6091,"endOffset":6681,"count":0},{"startOffset":6713,"endOffset":6818,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3054,"endOffset":3070,"count":1}],"isBlockCoverage":true},{"functionName":"subwalkTargets","ranges":[{"startOffset":6860,"endOffset":6921,"count":1}],"isBlockCoverage":true},{"functionName":"child","ranges":[{"startOffset":6926,"endOffset":7003,"count":1}],"isBlockCoverage":true},{"functionName":"filterEntries","ranges":[{"startOffset":7199,"endOffset":8024,"count":1},{"startOffset":7421,"endOffset":7994,"count":4},{"startOffset":7739,"endOffset":7970,"count":0}],"isBlockCoverage":true},{"functionName":"testGlobstar","ranges":[{"startOffset":8029,"endOffset":9903,"count":4},{"startOffset":8159,"endOffset":8228,"count":0},{"startOffset":8261,"endOffset":9136,"count":0},{"startOffset":9329,"endOffset":9414,"count":0},{"startOffset":9415,"endOffset":9443,"count":0},{"startOffset":9444,"endOffset":9473,"count":0},{"startOffset":9475,"endOffset":9553,"count":0},{"startOffset":9588,"endOffset":9765,"count":0}],"isBlockCoverage":true},{"functionName":"testRegExp","ranges":[{"startOffset":9908,"endOffset":10143,"count":4},{"startOffset":9984,"endOffset":10072,"count":2},{"startOffset":10072,"endOffset":10137,"count":0}],"isBlockCoverage":true},{"functionName":"testString","ranges":[{"startOffset":10148,"endOffset":10413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"535","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28375,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":1627,"endOffset":1681,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":1699,"endOffset":1877,"count":0}],"isBlockCoverage":false},{"functionName":"unifyPaths","ranges":[{"startOffset":1899,"endOffset":2164,"count":0}],"isBlockCoverage":false},{"functionName":"toUnix","ranges":[{"startOffset":2322,"endOffset":2619,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePathToUnix","ranges":[{"startOffset":2754,"endOffset":2803,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeIgnored","ranges":[{"startOffset":2831,"endOffset":3002,"count":0}],"isBlockCoverage":false},{"functionName":"getAbsolutePath","ranges":[{"startOffset":3029,"endOffset":3223,"count":0}],"isBlockCoverage":false},{"functionName":"undef","ranges":[{"startOffset":3240,"endOffset":3278,"count":0}],"isBlockCoverage":false},{"functionName":"DirEntry","ranges":[{"startOffset":3456,"endOffset":3612,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":3616,"endOffset":3745,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":3749,"endOffset":4084,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":4088,"endOffset":4181,"count":0}],"isBlockCoverage":false},{"functionName":"getChildren","ranges":[{"startOffset":4227,"endOffset":4328,"count":0}],"isBlockCoverage":false},{"functionName":"dispose","ranges":[{"startOffset":4332,"endOffset":4473,"count":0}],"isBlockCoverage":false},{"functionName":"WatchHelper","ranges":[{"startOffset":4560,"endOffset":5278,"count":0}],"isBlockCoverage":false},{"functionName":"checkGlobSymlink","ranges":[{"startOffset":5282,"endOffset":5763,"count":0}],"isBlockCoverage":false},{"functionName":"entryPath","ranges":[{"startOffset":5767,"endOffset":5905,"count":0}],"isBlockCoverage":false},{"functionName":"filterPath","ranges":[{"startOffset":5909,"endOffset":6326,"count":0}],"isBlockCoverage":false},{"functionName":"getDirParts","ranges":[{"startOffset":6330,"endOffset":6644,"count":0}],"isBlockCoverage":false},{"functionName":"filterDir","ranges":[{"startOffset":6648,"endOffset":7167,"count":0}],"isBlockCoverage":false},{"functionName":"FSWatcher","ranges":[{"startOffset":7511,"endOffset":11137,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":11450,"endOffset":13187,"count":0}],"isBlockCoverage":false},{"functionName":"unwatch","ranges":[{"startOffset":13398,"endOffset":14076,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14177,"endOffset":14941,"count":0}],"isBlockCoverage":false},{"functionName":"getWatched","ranges":[{"startOffset":15016,"endOffset":15266,"count":0}],"isBlockCoverage":false},{"functionName":"emitWithAll","ranges":[{"startOffset":15268,"endOffset":15372,"count":0}],"isBlockCoverage":false},{"functionName":"_emit","ranges":[{"startOffset":15781,"endOffset":18082,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":18257,"endOffset":18533,"count":0}],"isBlockCoverage":false},{"functionName":"_throttle","ranges":[{"startOffset":18829,"endOffset":19563,"count":0}],"isBlockCoverage":false},{"functionName":"_incrReadyCount","ranges":[{"startOffset":19565,"endOffset":19615,"count":0}],"isBlockCoverage":false},{"functionName":"_awaitWriteFinish","ranges":[{"startOffset":20062,"endOffset":21418,"count":0}],"isBlockCoverage":false},{"functionName":"_getGlobIgnored","ranges":[{"startOffset":21420,"endOffset":21484,"count":0}],"isBlockCoverage":false},{"functionName":"_isIgnored","ranges":[{"startOffset":21658,"endOffset":22258,"count":0}],"isBlockCoverage":false},{"functionName":"_isntIgnored","ranges":[{"startOffset":22260,"endOffset":22327,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchHelpers","ranges":[{"startOffset":22624,"endOffset":22863,"count":0}],"isBlockCoverage":false},{"functionName":"_getWatchedDir","ranges":[{"startOffset":23061,"endOffset":23329,"count":0}],"isBlockCoverage":false},{"functionName":"_hasReadPermissions","ranges":[{"startOffset":23594,"endOffset":23870,"count":0}],"isBlockCoverage":false},{"functionName":"_remove","ranges":[{"startOffset":24176,"endOffset":26865,"count":0}],"isBlockCoverage":false},{"functionName":"_closePath","ranges":[{"startOffset":26931,"endOffset":27071,"count":0}],"isBlockCoverage":false},{"functionName":"_closeFile","ranges":[{"startOffset":27141,"endOffset":27297,"count":0}],"isBlockCoverage":false},{"functionName":"_addPathCloser","ranges":[{"startOffset":27360,"endOffset":27543,"count":0}],"isBlockCoverage":false},{"functionName":"_readdirp","ranges":[{"startOffset":27545,"endOffset":27943,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":28244,"endOffset":28349,"count":0}],"isBlockCoverage":false}]},{"scriptId":"536","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/readdirp@3.6.0/node_modules/readdirp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8876,"count":1},{"startOffset":1140,"endOffset":1181,"count":0}],"isBlockCoverage":true},{"functionName":"isNormalFlowError","ranges":[{"startOffset":942,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1055,"endOffset":1082,"count":2}],"isBlockCoverage":true},{"functionName":"normalizeFilter","ranges":[{"startOffset":1208,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultOptions","ranges":[{"startOffset":2119,"endOffset":2430,"count":0}],"isBlockCoverage":false},{"functionName":"ReaddirpStream","ranges":[{"startOffset":2434,"endOffset":3722,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":3726,"endOffset":5128,"count":0}],"isBlockCoverage":false},{"functionName":"_exploreDir","ranges":[{"startOffset":5132,"endOffset":5336,"count":0}],"isBlockCoverage":false},{"functionName":"_formatEntry","ranges":[{"startOffset":5340,"endOffset":5774,"count":0}],"isBlockCoverage":false},{"functionName":"_onError","ranges":[{"startOffset":5778,"endOffset":5924,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntryType","ranges":[{"startOffset":5928,"endOffset":7108,"count":0}],"isBlockCoverage":false},{"functionName":"_includeAsFile","ranges":[{"startOffset":7112,"endOffset":7258,"count":0}],"isBlockCoverage":false},{"functionName":"readdirp","ranges":[{"startOffset":7820,"endOffset":8455,"count":0}],"isBlockCoverage":false},{"functionName":"readdirpPromise","ranges":[{"startOffset":8482,"endOffset":8738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"537","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":60,"count":1}],"isBlockCoverage":true}]},{"scriptId":"538","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9956,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":204,"endOffset":264,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch","ranges":[{"startOffset":1018,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3384,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4600,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5423,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5894,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6697,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7228,"endOffset":7738,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":8611,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9579,"endOffset":9807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"539","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9189,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1512,"endOffset":9163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"540","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":242,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":337,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":397,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":474,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":555,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":626,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":771,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":983,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1156,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1427,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1608,"endOffset":1883,"count":0}],"isBlockCoverage":false}]},{"scriptId":"541","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3985,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"globChars","ranges":[{"startOffset":4365,"endOffset":4444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"542","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/picomatch@2.3.1/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27763,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":25216,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":25439,"endOffset":27736,"count":0}],"isBlockCoverage":false}]},{"scriptId":"543","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/anymatch@3.1.3/node_modules/anymatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3180,"count":1}],"isBlockCoverage":true},{"functionName":"arrify","ranges":[{"startOffset":432,"endOffset":477,"count":0}],"isBlockCoverage":false},{"functionName":"createPattern","ranges":[{"startOffset":598,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"matchPatterns","ranges":[{"startOffset":1145,"endOffset":1958,"count":0}],"isBlockCoverage":false},{"functionName":"anymatch","ranges":[{"startOffset":2124,"endOffset":3121,"count":0}],"isBlockCoverage":false}]},{"scriptId":"544","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/normalize-path@3.0.0/node_modules/normalize-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":176,"endOffset":1022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"545","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob-parent@5.1.2/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1120,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":461,"endOffset":1118,"count":0}],"isBlockCoverage":false}]},{"scriptId":"546","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/is-glob@4.0.3/node_modules/is-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3628,"count":1}],"isBlockCoverage":true},{"functionName":"strictCheck","ranges":[{"startOffset":247,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"relaxedCheck","ranges":[{"startOffset":2767,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"isGlob","ranges":[{"startOffset":3324,"endOffset":3626,"count":0}],"isBlockCoverage":false}]},{"scriptId":"547","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/is-extglob@2.1.1/node_modules/is-extglob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglob","ranges":[{"startOffset":168,"endOffset":439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"548","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/braces@3.0.3/node_modules/braces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4380,"count":1}],"isBlockCoverage":true},{"functionName":"braces","ranges":[{"startOffset":543,"endOffset":1034,"count":0}],"isBlockCoverage":false},{"functionName":"braces.parse","ranges":[{"startOffset":1363,"endOffset":1409,"count":0}],"isBlockCoverage":false},{"functionName":"braces.stringify","ranges":[{"startOffset":1799,"endOffset":1963,"count":0}],"isBlockCoverage":false},{"functionName":"braces.compile","ranges":[{"startOffset":2411,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"braces.expand","ranges":[{"startOffset":3145,"endOffset":3545,"count":0}],"isBlockCoverage":false},{"functionName":"braces.create","ranges":[{"startOffset":4122,"endOffset":4324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"549","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":708,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":67,"endOffset":705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"550","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2518,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isInteger","ranges":[{"startOffset":35,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":292,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exceedsLimit","ranges":[{"startOffset":419,"endOffset":626,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeNode","ranges":[{"startOffset":712,"endOffset":987,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encloseBrace","ranges":[{"startOffset":1099,"endOffset":1268,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isInvalidBrace","ranges":[{"startOffset":1349,"endOffset":1682,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isOpenOrClose","ranges":[{"startOffset":1769,"endOffset":1908,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reduce","ranges":[{"startOffset":1971,"endOffset":2129,"count":0}],"isBlockCoverage":false},{"functionName":"exports.flatten","ranges":[{"startOffset":2179,"endOffset":2516,"count":0}],"isBlockCoverage":false}]},{"scriptId":"551","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/compile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1501,"count":1}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":102,"endOffset":1472,"count":0}],"isBlockCoverage":false}]},{"scriptId":"552","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/fill-range@7.1.1/node_modules/fill-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6406,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":265,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":355,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":463,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":578,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":624,"endOffset":817,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":838,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":1001,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"toMaxLen","ranges":[{"startOffset":1315,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":1574,"endOffset":2292,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":2311,"endOffset":2564,"count":0}],"isBlockCoverage":false},{"functionName":"toRegex","ranges":[{"startOffset":2583,"endOffset":2842,"count":0}],"isBlockCoverage":false},{"functionName":"rangeError","ranges":[{"startOffset":2864,"endOffset":2958,"count":0}],"isBlockCoverage":false},{"functionName":"invalidRange","ranges":[{"startOffset":2982,"endOffset":3092,"count":0}],"isBlockCoverage":false},{"functionName":"invalidStep","ranges":[{"startOffset":3115,"endOffset":3260,"count":0}],"isBlockCoverage":false},{"functionName":"fillNumbers","ranges":[{"startOffset":3283,"endOffset":4774,"count":0}],"isBlockCoverage":false},{"functionName":"fillLetters","ranges":[{"startOffset":4797,"endOffset":5577,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":5593,"endOffset":6380,"count":0}],"isBlockCoverage":false}]},{"scriptId":"553","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/to-regex-range@5.0.1/node_modules/to-regex-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6481,"count":1}],"isBlockCoverage":true},{"functionName":"toRegexRange","ranges":[{"startOffset":235,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"collatePatterns","ranges":[{"startOffset":2180,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":2556,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":3159,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":3834,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":4634,"endOffset":5094,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":5120,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5235,"endOffset":5298,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":5300,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":5382,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":5480,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":5573,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":5743,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"hasPadding","ranges":[{"startOffset":5839,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":5901,"endOffset":6311,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange.clearCache","ranges":[{"startOffset":6382,"endOffset":6413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"554","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/is-number@7.0.0/node_modules/is-number/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":411,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":184,"endOffset":409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"555","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/expand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2797,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":143,"endOffset":814,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":832,"endOffset":2769,"count":0}],"isBlockCoverage":false}]},{"scriptId":"556","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6899,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":576,"endOffset":6872,"count":0}],"isBlockCoverage":false}]},{"scriptId":"557","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/braces@3.0.3/node_modules/braces/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1589,"count":1}],"isBlockCoverage":true}]},{"scriptId":"558","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/lib/nodefs-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20067,"count":1}],"isBlockCoverage":true},{"functionName":"foreach","ranges":[{"startOffset":725,"endOffset":818,"count":0}],"isBlockCoverage":false},{"functionName":"addAndConvert","ranges":[{"startOffset":843,"endOffset":1013,"count":0}],"isBlockCoverage":false},{"functionName":"clearItem","ranges":[{"startOffset":1034,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"delFromSet","ranges":[{"startOffset":1181,"endOffset":1362,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptySet","ranges":[{"startOffset":1384,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"createFsWatchInstance","ranges":[{"startOffset":2240,"endOffset":2860,"count":0}],"isBlockCoverage":false},{"functionName":"fsWatchBroadcast","ranges":[{"startOffset":3167,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchListener","ranges":[{"startOffset":3691,"endOffset":5797,"count":0}],"isBlockCoverage":false},{"functionName":"setFsWatchFileListener","ranges":[{"startOffset":6374,"endOffset":8442,"count":0}],"isBlockCoverage":false},{"functionName":"NodeFsHandler","ranges":[{"startOffset":8539,"endOffset":8640,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithNodeFs","ranges":[{"startOffset":8844,"endOffset":9693,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFile","ranges":[{"startOffset":9953,"endOffset":12010,"count":0}],"isBlockCoverage":false},{"functionName":"_handleSymlink","ranges":[{"startOffset":12337,"endOffset":13370,"count":0}],"isBlockCoverage":false},{"functionName":"_handleRead","ranges":[{"startOffset":13372,"endOffset":15882,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDir","ranges":[{"startOffset":16330,"endOffset":17387,"count":0}],"isBlockCoverage":false},{"functionName":"_addToNodeFs","ranges":[{"startOffset":17835,"endOffset":20030,"count":0}],"isBlockCoverage":false}]},{"scriptId":"559","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/is-binary-path@2.1.0/node_modules/is-binary-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":239,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":164,"endOffset":237,"count":0}],"isBlockCoverage":false}]},{"scriptId":"560","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/binary-extensions@2.3.0/node_modules/binary-extensions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":54,"count":1}],"isBlockCoverage":true}]},{"scriptId":"561","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1878,"count":1}],"isBlockCoverage":true},{"functionName":"exports.EMPTY_FN","ranges":[{"startOffset":1670,"endOffset":1678,"count":0}],"isBlockCoverage":false},{"functionName":"exports.IDENTITY_FN","ranges":[{"startOffset":1702,"endOffset":1712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"562","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/chokidar@3.6.0/node_modules/chokidar/lib/fsevents-handler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16368,"count":1},{"startOffset":170,"endOffset":266,"count":0},{"startOffset":507,"endOffset":518,"count":0},{"startOffset":520,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"Depth","ranges":[{"startOffset":1007,"endOffset":1052,"count":0}],"isBlockCoverage":false},{"functionName":"createFSEventsInstance","ranges":[{"startOffset":2098,"endOffset":2185,"count":0}],"isBlockCoverage":false},{"functionName":"setFSEventsListener","ranges":[{"startOffset":2586,"endOffset":4967,"count":0}],"isBlockCoverage":false},{"functionName":"couldConsolidate","ranges":[{"startOffset":5072,"endOffset":5311,"count":0}],"isBlockCoverage":false},{"functionName":"canUse","ranges":[{"startOffset":5388,"endOffset":5433,"count":0}],"isBlockCoverage":false},{"functionName":"calcDepth","ranges":[{"startOffset":5516,"endOffset":5638,"count":0}],"isBlockCoverage":false},{"functionName":"sameTypes","ranges":[{"startOffset":5774,"endOffset":5977,"count":0}],"isBlockCoverage":false},{"functionName":"FsEventsHandler","ranges":[{"startOffset":6075,"endOffset":6113,"count":0}],"isBlockCoverage":false},{"functionName":"checkIgnored","ranges":[{"startOffset":6114,"endOffset":6418,"count":0}],"isBlockCoverage":false},{"functionName":"addOrChange","ranges":[{"startOffset":6420,"endOffset":6649,"count":0}],"isBlockCoverage":false},{"functionName":"checkExists","ranges":[{"startOffset":6651,"endOffset":7317,"count":0}],"isBlockCoverage":false},{"functionName":"handleEvent","ranges":[{"startOffset":7319,"endOffset":8613,"count":0}],"isBlockCoverage":false},{"functionName":"_watchWithFsEvents","ranges":[{"startOffset":9001,"endOffset":10995,"count":0}],"isBlockCoverage":false},{"functionName":"_handleFsEventsSymlink","ranges":[{"startOffset":11330,"endOffset":12413,"count":0}],"isBlockCoverage":false},{"functionName":"emitAdd","ranges":[{"startOffset":12478,"endOffset":12951,"count":0}],"isBlockCoverage":false},{"functionName":"initWatch","ranges":[{"startOffset":12953,"endOffset":13218,"count":0}],"isBlockCoverage":false},{"functionName":"_addToFsEvents","ranges":[{"startOffset":13558,"endOffset":16297,"count":0}],"isBlockCoverage":false}]},{"scriptId":"563","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/fsevents@2.3.3/node_modules/fsevents/fsevents.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2482,"count":1},{"startOffset":184,"endOffset":281,"count":0}],"isBlockCoverage":true},{"functionName":"watch","ranges":[{"startOffset":360,"endOffset":1229,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":1231,"endOffset":1399,"count":0}],"isBlockCoverage":false},{"functionName":"getFileType","ranges":[{"startOffset":1401,"endOffset":1645,"count":0}],"isBlockCoverage":false},{"functionName":"anyIsTrue","ranges":[{"startOffset":1646,"endOffset":1749,"count":0}],"isBlockCoverage":false},{"functionName":"getEventType","ranges":[{"startOffset":1750,"endOffset":2160,"count":0}],"isBlockCoverage":false},{"functionName":"getFileChanges","ranges":[{"startOffset":2161,"endOffset":2402,"count":0}],"isBlockCoverage":false}]},{"scriptId":"564","url":"node:internal/modules/esm/initialize_import_meta","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1960,"count":1}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":617,"endOffset":1368,"count":2}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":880,"endOffset":1365,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":1633,"endOffset":1912,"count":2}],"isBlockCoverage":true}]},{"scriptId":"565","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6077,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":2162,"endOffset":2740,"count":1}],"isBlockCoverage":true},{"functionName":"resolveSync","ranges":[{"startOffset":3142,"endOffset":3376,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3627,"endOffset":4620,"count":0}],"isBlockCoverage":false},{"functionName":"createSync","ranges":[{"startOffset":4740,"endOffset":5344,"count":0}],"isBlockCoverage":false},{"functionName":"mergeExports","ranges":[{"startOffset":5488,"endOffset":5668,"count":2}],"isBlockCoverage":true},{"functionName":"get sync","ranges":[{"startOffset":5713,"endOffset":5750,"count":0}],"isBlockCoverage":false},{"functionName":"get sync","ranges":[{"startOffset":5786,"endOffset":5824,"count":0}],"isBlockCoverage":false},{"functionName":"get CloneBasenamePlugin","ranges":[{"startOffset":5874,"endOffset":5947,"count":0}],"isBlockCoverage":false},{"functionName":"get LogInfoPlugin","ranges":[{"startOffset":5950,"endOffset":6011,"count":0}],"isBlockCoverage":false},{"functionName":"get forEachBail","ranges":[{"startOffset":6014,"endOffset":6071,"count":0}],"isBlockCoverage":false}]},{"scriptId":"566","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/graceful-fs@4.2.11/node_modules/graceful-fs/graceful-fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12680,"count":1},{"startOffset":529,"endOffset":624,"count":0},{"startOffset":859,"endOffset":1061,"count":0},{"startOffset":2292,"endOffset":2430,"count":0},{"startOffset":2590,"endOffset":2606,"count":0},{"startOffset":2608,"endOffset":2667,"count":0}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":626,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"publishQueue","ranges":[{"startOffset":647,"endOffset":790,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":746,"endOffset":783,"count":367}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":927,"endOffset":1061,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1492,"endOffset":1899,"count":1}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":1518,"endOffset":1797,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1930,"endOffset":2221,"count":1}],"isBlockCoverage":true},{"functionName":"closeSync","ranges":[{"startOffset":1960,"endOffset":2107,"count":183}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2317,"endOffset":2425,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":2669,"endOffset":10035,"count":1},{"startOffset":6760,"endOffset":6877,"count":0}],"isBlockCoverage":true},{"functionName":"readFile","ranges":[{"startOffset":2948,"endOffset":3507,"count":5}],"isBlockCoverage":true},{"functionName":"go$readFile","ranges":[{"startOffset":3110,"endOffset":3503,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3204,"endOffset":3496,"count":5},{"startOffset":3237,"endOffset":3288,"count":3},{"startOffset":3300,"endOffset":3385,"count":0}],"isBlockCoverage":true},{"functionName":"writeFile","ranges":[{"startOffset":3572,"endOffset":4166,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":4258,"endOffset":4857,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":4939,"endOffset":5516,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":5617,"endOffset":6711,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7295,"endOffset":7338,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7349,"endOffset":7394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7500,"endOffset":7544,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7555,"endOffset":7601,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7763,"endOffset":7810,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7821,"endOffset":7870,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8016,"endOffset":8064,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8075,"endOffset":8125,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":8180,"endOffset":8400,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream$open","ranges":[{"startOffset":8404,"endOffset":8725,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":8729,"endOffset":8954,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream$open","ranges":[{"startOffset":8958,"endOffset":9229,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":9233,"endOffset":9324,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":9328,"endOffset":9421,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":9466,"endOffset":10020,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":10037,"endOffset":10147,"count":0}],"isBlockCoverage":false},{"functionName":"resetQueue","ranges":[{"startOffset":10396,"endOffset":10864,"count":183},{"startOffset":10497,"endOffset":10787,"count":0}],"isBlockCoverage":true},{"functionName":"retry","ranges":[{"startOffset":10866,"endOffset":12679,"count":183},{"startOffset":11061,"endOffset":12677,"count":0}],"isBlockCoverage":true}]},{"scriptId":"567","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/graceful-fs@4.2.11/node_modules/graceful-fs/polyfills.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10141,"count":1},{"startOffset":259,"endOffset":272,"count":0}],"isBlockCoverage":true},{"functionName":"process.cwd","ranges":[{"startOffset":163,"endOffset":234,"count":3},{"startOffset":192,"endOffset":219,"count":1}],"isBlockCoverage":true},{"functionName":"process.chdir","ranges":[{"startOffset":416,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":577,"endOffset":10140,"count":1},{"startOffset":832,"endOffset":857,"count":0},{"startOffset":916,"endOffset":942,"count":0},{"startOffset":1963,"endOffset":2088,"count":0},{"startOffset":2119,"endOffset":2248,"count":0},{"startOffset":2875,"endOffset":3782,"count":0},{"startOffset":3881,"endOffset":3890,"count":0},{"startOffset":4689,"endOffset":4702,"count":0}],"isBlockCoverage":true},{"functionName":"fs.lchmod","ranges":[{"startOffset":1981,"endOffset":2049,"count":0}],"isBlockCoverage":false},{"functionName":"fs.lchmodSync","ranges":[{"startOffset":2070,"endOffset":2084,"count":0}],"isBlockCoverage":false},{"functionName":"fs.lchown","ranges":[{"startOffset":2137,"endOffset":2209,"count":0}],"isBlockCoverage":false},{"functionName":"fs.lchownSync","ranges":[{"startOffset":2230,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2944,"endOffset":3766,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3896,"endOffset":4627,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":3921,"endOffset":4462,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4708,"endOffset":5082,"count":1}],"isBlockCoverage":true},{"functionName":"fs.readSync","ranges":[{"startOffset":4740,"endOffset":5081,"count":0}],"isBlockCoverage":false},{"functionName":"patchLchmod","ranges":[{"startOffset":5100,"endOffset":6268,"count":0}],"isBlockCoverage":false},{"functionName":"patchLutimes","ranges":[{"startOffset":6272,"endOffset":7328,"count":0}],"isBlockCoverage":false},{"functionName":"chmodFix","ranges":[{"startOffset":7332,"endOffset":7581,"count":3},{"startOffset":7374,"endOffset":7385,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7397,"endOffset":7577,"count":0}],"isBlockCoverage":false},{"functionName":"chmodFixSync","ranges":[{"startOffset":7585,"endOffset":7810,"count":3},{"startOffset":7631,"endOffset":7642,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7654,"endOffset":7806,"count":0}],"isBlockCoverage":false},{"functionName":"chownFix","ranges":[{"startOffset":7815,"endOffset":8072,"count":3},{"startOffset":7857,"endOffset":7868,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7880,"endOffset":8068,"count":0}],"isBlockCoverage":false},{"functionName":"chownFixSync","ranges":[{"startOffset":8076,"endOffset":8309,"count":3},{"startOffset":8122,"endOffset":8133,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8145,"endOffset":8305,"count":0}],"isBlockCoverage":false},{"functionName":"statFix","ranges":[{"startOffset":8313,"endOffset":8936,"count":3},{"startOffset":8354,"endOffset":8365,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8466,"endOffset":8932,"count":6},{"startOffset":8842,"endOffset":8884,"count":0}],"isBlockCoverage":true},{"functionName":"callback","ranges":[{"startOffset":8600,"endOffset":8820,"count":6},{"startOffset":8651,"endOffset":8770,"count":3},{"startOffset":8682,"endOffset":8706,"count":0},{"startOffset":8736,"endOffset":8760,"count":0}],"isBlockCoverage":true},{"functionName":"statFixSync","ranges":[{"startOffset":8940,"endOffset":9377,"count":3},{"startOffset":8985,"endOffset":8996,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9097,"endOffset":9373,"count":0}],"isBlockCoverage":false},{"functionName":"chownErOk","ranges":[{"startOffset":9850,"endOffset":10138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"568","url":"node:constants","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1713,"count":1}],"isBlockCoverage":false}]},{"scriptId":"569","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/graceful-fs@4.2.11/node_modules/graceful-fs/legacy-streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2655,"count":1}],"isBlockCoverage":true},{"functionName":"legacy","ranges":[{"startOffset":64,"endOffset":2654,"count":0}],"isBlockCoverage":false}]},{"scriptId":"570","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/graceful-fs@4.2.11/node_modules/graceful-fs/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":496,"count":1},{"startOffset":81,"endOffset":125,"count":0}],"isBlockCoverage":true},{"functionName":"getPrototypeOf","ranges":[{"startOffset":84,"endOffset":125,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":127,"endOffset":495,"count":1},{"startOffset":201,"endOffset":211,"count":0},{"startOffset":291,"endOffset":333,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":377,"endOffset":477,"count":103}],"isBlockCoverage":true}]},{"scriptId":"571","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18657,"count":1}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":673,"endOffset":901,"count":0}],"isBlockCoverage":false},{"functionName":"runCallbacks","ranges":[{"startOffset":1067,"endOffset":1379,"count":33},{"startOffset":1193,"endOffset":1377,"count":0}],"isBlockCoverage":true},{"functionName":"OperationMergerBackend","ranges":[{"startOffset":1858,"endOffset":3993,"count":0}],"isBlockCoverage":false},{"functionName":"purge","ranges":[{"startOffset":3996,"endOffset":4006,"count":0}],"isBlockCoverage":false},{"functionName":"purgeParent","ranges":[{"startOffset":4009,"endOffset":4025,"count":0}],"isBlockCoverage":false},{"functionName":"CacheBackend","ranges":[{"startOffset":5107,"endOffset":6338,"count":7},{"startOffset":5622,"endOffset":5651,"count":70},{"startOffset":5697,"endOffset":5726,"count":0},{"startOffset":6190,"endOffset":6196,"count":0},{"startOffset":6328,"endOffset":6334,"count":0}],"isBlockCoverage":true},{"functionName":"provide","ranges":[{"startOffset":6532,"endOffset":8248,"count":49},{"startOffset":6692,"endOffset":6720,"count":0},{"startOffset":6721,"endOffset":6749,"count":0},{"startOffset":6750,"endOffset":6780,"count":0},{"startOffset":6785,"endOffset":6877,"count":0},{"startOffset":6921,"endOffset":6938,"count":0},{"startOffset":6962,"endOffset":7103,"count":0},{"startOffset":7194,"endOffset":7226,"count":0},{"startOffset":7326,"endOffset":7452,"count":16},{"startOffset":7351,"endOffset":7393,"count":11},{"startOffset":7393,"endOffset":7452,"count":5},{"startOffset":7452,"endOffset":7603,"count":33},{"startOffset":7603,"endOffset":7648,"count":0},{"startOffset":7648,"endOffset":8247,"count":33}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7936,"endOffset":8239,"count":33}],"isBlockCoverage":true},{"functionName":"provideSync","ranges":[{"startOffset":8393,"endOffset":9924,"count":0}],"isBlockCoverage":false},{"functionName":"purge","ranges":[{"startOffset":10078,"endOffset":11040,"count":0}],"isBlockCoverage":false},{"functionName":"purgeParent","ranges":[{"startOffset":11194,"endOffset":11682,"count":0}],"isBlockCoverage":false},{"functionName":"_storeResult","ranges":[{"startOffset":11801,"endOffset":11990,"count":33},{"startOffset":11863,"endOffset":11870,"count":0}],"isBlockCoverage":true},{"functionName":"_decayLevel","ranges":[{"startOffset":11993,"endOffset":12374,"count":4},{"startOffset":12180,"endOffset":12213,"count":0},{"startOffset":12260,"endOffset":12291,"count":0}],"isBlockCoverage":true},{"functionName":"_runDecays","ranges":[{"startOffset":12377,"endOffset":12533,"count":4}],"isBlockCoverage":true},{"functionName":"_enterAsyncMode","ranges":[{"startOffset":12536,"endOffset":13317,"count":33},{"startOffset":12602,"endOffset":12638,"count":29},{"startOffset":12642,"endOffset":12765,"count":4},{"startOffset":12769,"endOffset":13117,"count":0},{"startOffset":13121,"endOffset":13316,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13182,"endOffset":13250,"count":4}],"isBlockCoverage":true},{"functionName":"_enterSyncModeWhenIdle","ranges":[{"startOffset":13320,"endOffset":13484,"count":0}],"isBlockCoverage":false},{"functionName":"_enterIdleMode","ranges":[{"startOffset":13487,"endOffset":13623,"count":0}],"isBlockCoverage":false},{"functionName":"createBackend","ranges":[{"startOffset":14066,"endOffset":14303,"count":7},{"startOffset":14224,"endOffset":14302,"count":0}],"isBlockCoverage":true},{"functionName":"CachedInputFileSystem","ranges":[{"startOffset":14476,"endOffset":18226,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16329,"endOffset":16761,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16378,"endOffset":16751,"count":5},{"startOffset":16414,"endOffset":16435,"count":3},{"startOffset":16435,"endOffset":16478,"count":2},{"startOffset":16489,"endOffset":16537,"count":0},{"startOffset":16537,"endOffset":16633,"count":2},{"startOffset":16633,"endOffset":16712,"count":0},{"startOffset":16712,"endOffset":16750,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16961,"endOffset":17104,"count":0}],"isBlockCoverage":false},{"functionName":"purge","ranges":[{"startOffset":18380,"endOffset":18653,"count":0}],"isBlockCoverage":false}]},{"scriptId":"572","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/ResolverFactory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22116,"count":1}],"isBlockCoverage":true},{"functionName":"processPnpApiOption","ranges":[{"startOffset":7507,"endOffset":8129,"count":2},{"startOffset":7650,"endOffset":8102,"count":0}],"isBlockCoverage":true},{"functionName":"resolveToUnqualified","ranges":[{"startOffset":7847,"endOffset":8088,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAlias","ranges":[{"startOffset":8261,"endOffset":8692,"count":4},{"startOffset":8328,"endOffset":8352,"count":0},{"startOffset":8353,"endOffset":8370,"count":0},{"startOffset":8373,"endOffset":8632,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8398,"endOffset":8631,"count":0}],"isBlockCoverage":false},{"functionName":"mergeFilteredToArray","ranges":[{"startOffset":8878,"endOffset":9316,"count":2},{"startOffset":9110,"endOffset":9137,"count":0},{"startOffset":9186,"endOffset":9220,"count":0},{"startOffset":9261,"endOffset":9294,"count":0}],"isBlockCoverage":true},{"functionName":"createOptions","ranges":[{"startOffset":9423,"endOffset":12268,"count":2},{"startOffset":9736,"endOffset":9981,"count":0},{"startOffset":10295,"endOffset":10321,"count":0},{"startOffset":10736,"endOffset":10762,"count":0},{"startOffset":10805,"endOffset":10833,"count":0},{"startOffset":10880,"endOffset":11049,"count":0},{"startOffset":11107,"endOffset":11243,"count":1},{"startOffset":11247,"endOffset":11267,"count":1},{"startOffset":11307,"endOffset":11349,"count":0},{"startOffset":11354,"endOffset":11381,"count":0},{"startOffset":11470,"endOffset":11488,"count":0},{"startOffset":11598,"endOffset":11615,"count":0},{"startOffset":11643,"endOffset":11662,"count":0}],"isBlockCoverage":true},{"functionName":"trueFn","ranges":[{"startOffset":10177,"endOffset":10218,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10922,"endOffset":11048,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11691,"endOffset":11806,"count":2},{"startOffset":11771,"endOffset":11800,"count":0}],"isBlockCoverage":true},{"functionName":"createResolver","ranges":[{"startOffset":12405,"endOffset":22114,"count":2},{"startOffset":14502,"endOffset":14920,"count":4},{"startOffset":14523,"endOffset":14830,"count":0},{"startOffset":15262,"endOffset":15358,"count":0},{"startOffset":15399,"endOffset":15478,"count":0},{"startOffset":15512,"endOffset":15595,"count":0},{"startOffset":15632,"endOffset":15725,"count":0},{"startOffset":15831,"endOffset":15910,"count":0},{"startOffset":16237,"endOffset":16316,"count":0},{"startOffset":16338,"endOffset":16418,"count":0},{"startOffset":17020,"endOffset":17502,"count":0},{"startOffset":17648,"endOffset":17731,"count":0},{"startOffset":19137,"endOffset":19208,"count":0},{"startOffset":19651,"endOffset":19769,"count":0},{"startOffset":20995,"endOffset":21061,"count":6},{"startOffset":21097,"endOffset":21171,"count":0},{"startOffset":21206,"endOffset":21284,"count":0},{"startOffset":21729,"endOffset":21797,"count":0},{"startOffset":21896,"endOffset":22093,"count":82},{"startOffset":21934,"endOffset":22040,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17127,"endOffset":17154,"count":0}],"isBlockCoverage":false}]},{"scriptId":"573","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/Resolver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26298,"count":1}],"isBlockCoverage":true},{"functionName":"toCamelCase","ranges":[{"startOffset":14956,"endOffset":15056,"count":228}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15017,"endOffset":15052,"count":192}],"isBlockCoverage":true},{"functionName":"createStackEntry","ranges":[{"startOffset":15214,"endOffset":15454,"count":44},{"startOffset":15308,"endOffset":15313,"count":22},{"startOffset":15392,"endOffset":15406,"count":0},{"startOffset":15432,"endOffset":15443,"count":5},{"startOffset":15444,"endOffset":15448,"count":39}],"isBlockCoverage":true},{"functionName":"Resolver","ranges":[{"startOffset":15559,"endOffset":15998,"count":2}],"isBlockCoverage":true},{"functionName":"ensureHook","ranges":[{"startOffset":16119,"endOffset":16949,"count":134},{"startOffset":16170,"endOffset":16191,"count":0},{"startOffset":16253,"endOffset":16404,"count":0},{"startOffset":16437,"endOffset":16587,"count":0},{"startOffset":16710,"endOffset":16931,"count":50},{"startOffset":16931,"endOffset":16948,"count":84}],"isBlockCoverage":true},{"functionName":"getHook","ranges":[{"startOffset":17070,"endOffset":17725,"count":94},{"startOffset":17118,"endOffset":17139,"count":0},{"startOffset":17201,"endOffset":17349,"count":0},{"startOffset":17382,"endOffset":17529,"count":14},{"startOffset":17529,"endOffset":17652,"count":80},{"startOffset":17652,"endOffset":17707,"count":0},{"startOffset":17707,"endOffset":17724,"count":80}],"isBlockCoverage":true},{"functionName":"resolveSync","ranges":[{"startOffset":17911,"endOffset":18413,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":18697,"endOffset":22942,"count":1},{"startOffset":18804,"endOffset":18877,"count":0},{"startOffset":18910,"endOffset":18979,"count":0},{"startOffset":19015,"endOffset":19087,"count":0},{"startOffset":19111,"endOffset":19185,"count":0},{"startOffset":19482,"endOffset":19865,"count":0},{"startOffset":20593,"endOffset":21469,"count":0}],"isBlockCoverage":true},{"functionName":"yield_","ranges":[{"startOffset":19588,"endOffset":19641,"count":0}],"isBlockCoverage":false},{"functionName":"finishYield","ranges":[{"startOffset":19740,"endOffset":19860,"count":0}],"isBlockCoverage":false},{"functionName":"finishResolved","ranges":[{"startOffset":20024,"endOffset":20255,"count":1},{"startOffset":20090,"endOffset":20097,"count":0},{"startOffset":20164,"endOffset":20199,"count":0}],"isBlockCoverage":true},{"functionName":"finishWithoutResolve","ranges":[{"startOffset":20354,"endOffset":20564,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":20829,"endOffset":20889,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21136,"endOffset":21458,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21885,"endOffset":22933,"count":1},{"startOffset":21917,"endOffset":21938,"count":0},{"startOffset":21983,"endOffset":22106,"count":0},{"startOffset":22154,"endOffset":22932,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":22471,"endOffset":22493,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22564,"endOffset":22920,"count":0}],"isBlockCoverage":false},{"functionName":"doResolve","ranges":[{"startOffset":23241,"endOffset":24789,"count":44},{"startOffset":23452,"endOffset":23961,"count":43},{"startOffset":23544,"endOffset":23928,"count":0},{"startOffset":23961,"endOffset":24184,"count":1},{"startOffset":24772,"endOffset":24788,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24645,"endOffset":24766,"count":44},{"startOffset":24677,"endOffset":24698,"count":0},{"startOffset":24715,"endOffset":24745,"count":25},{"startOffset":24745,"endOffset":24765,"count":19}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":24894,"endOffset":25496,"count":1},{"startOffset":25141,"endOffset":25153,"count":0},{"startOffset":25421,"endOffset":25473,"count":0}],"isBlockCoverage":true},{"functionName":"isModule","ranges":[{"startOffset":25592,"endOffset":25655,"count":1}],"isBlockCoverage":true},{"functionName":"isPrivate","ranges":[{"startOffset":25750,"endOffset":25816,"count":1}],"isBlockCoverage":true},{"functionName":"isDirectory","ranges":[{"startOffset":25922,"endOffset":25973,"count":1}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":26086,"endOffset":26140,"count":29}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":26221,"endOffset":26267,"count":0}],"isBlockCoverage":false}]},{"scriptId":"574","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/tapable@2.2.2/node_modules/tapable/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":814,"count":1}],"isBlockCoverage":true}]},{"scriptId":"575","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/tapable@2.2.2/node_modules/tapable/lib/SyncHook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1025,"count":1}],"isBlockCoverage":true},{"functionName":"content","ranges":[{"startOffset":255,"endOffset":414,"count":1}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":348,"endOffset":372,"count":0}],"isBlockCoverage":false},{"functionName":"TAP_ASYNC","ranges":[{"startOffset":480,"endOffset":550,"count":0}],"isBlockCoverage":false},{"functionName":"TAP_PROMISE","ranges":[{"startOffset":573,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"COMPILE","ranges":[{"startOffset":664,"endOffset":750,"count":1}],"isBlockCoverage":true},{"functionName":"SyncHook","ranges":[{"startOffset":753,"endOffset":968,"count":4}],"isBlockCoverage":true}]},{"scriptId":"576","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/tapable@2.2.2/node_modules/tapable/lib/Hook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4074,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":188,"endOffset":196,"count":0}],"isBlockCoverage":false},{"functionName":"CALL_DELEGATE","ranges":[{"startOffset":274,"endOffset":363,"count":1}],"isBlockCoverage":true},{"functionName":"CALL_ASYNC_DELEGATE","ranges":[{"startOffset":393,"endOffset":493,"count":23}],"isBlockCoverage":true},{"functionName":"PROMISE_DELEGATE","ranges":[{"startOffset":520,"endOffset":618,"count":0}],"isBlockCoverage":false},{"functionName":"Hook","ranges":[{"startOffset":635,"endOffset":1124,"count":58}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":1127,"endOffset":1201,"count":0}],"isBlockCoverage":false},{"functionName":"_createCall","ranges":[{"startOffset":1204,"endOffset":1347,"count":24}],"isBlockCoverage":true},{"functionName":"_tap","ranges":[{"startOffset":1350,"endOffset":1887,"count":82},{"startOffset":1411,"endOffset":1462,"count":68},{"startOffset":1462,"endOffset":1569,"count":14},{"startOffset":1521,"endOffset":1569,"count":0},{"startOffset":1633,"endOffset":1682,"count":0},{"startOffset":1729,"endOffset":1757,"count":0}],"isBlockCoverage":true},{"functionName":"tap","ranges":[{"startOffset":1890,"endOffset":1945,"count":0}],"isBlockCoverage":false},{"functionName":"tapAsync","ranges":[{"startOffset":1948,"endOffset":2009,"count":82}],"isBlockCoverage":true},{"functionName":"tapPromise","ranges":[{"startOffset":2012,"endOffset":2077,"count":0}],"isBlockCoverage":false},{"functionName":"_runRegisterInterceptors","ranges":[{"startOffset":2080,"endOffset":2348,"count":82},{"startOffset":2163,"endOffset":2327,"count":0}],"isBlockCoverage":true},{"functionName":"withOptions","ranges":[{"startOffset":2351,"endOffset":2862,"count":14}],"isBlockCoverage":true},{"functionName":"mergeOptions","ranges":[{"startOffset":2397,"endOffset":2482,"count":14},{"startOffset":2476,"endOffset":2481,"count":0}],"isBlockCoverage":true},{"functionName":"tap","ranges":[{"startOffset":2524,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"tapAsync","ranges":[{"startOffset":2583,"endOffset":2632,"count":14}],"isBlockCoverage":true},{"functionName":"tapPromise","ranges":[{"startOffset":2649,"endOffset":2700,"count":0}],"isBlockCoverage":false},{"functionName":"intercept","ranges":[{"startOffset":2716,"endOffset":2760,"count":0}],"isBlockCoverage":false},{"functionName":"isUsed","ranges":[{"startOffset":2773,"endOffset":2792,"count":0}],"isBlockCoverage":false},{"functionName":"withOptions","ranges":[{"startOffset":2810,"endOffset":2854,"count":0}],"isBlockCoverage":false},{"functionName":"isUsed","ranges":[{"startOffset":2865,"endOffset":2941,"count":44},{"startOffset":2906,"endOffset":2937,"count":0}],"isBlockCoverage":true},{"functionName":"intercept","ranges":[{"startOffset":2944,"endOffset":3199,"count":0}],"isBlockCoverage":false},{"functionName":"_resetCompilation","ranges":[{"startOffset":3202,"endOffset":3320,"count":82}],"isBlockCoverage":true},{"functionName":"_insert","ranges":[{"startOffset":3323,"endOffset":4001,"count":82},{"startOffset":3420,"endOffset":3461,"count":0},{"startOffset":3499,"endOffset":3538,"count":0},{"startOffset":3594,"endOffset":3622,"count":14},{"startOffset":3667,"endOffset":3975,"count":34},{"startOffset":3755,"endOffset":3759,"count":30},{"startOffset":3776,"endOffset":3909,"count":0},{"startOffset":3933,"endOffset":3953,"count":0}],"isBlockCoverage":true}]},{"scriptId":"577","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/tapable@2.2.2/node_modules/tapable/lib/HookCodeFactory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11984,"count":1}],"isBlockCoverage":true},{"functionName":"HookCodeFactory","ranges":[{"startOffset":140,"endOffset":242,"count":10}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":245,"endOffset":1967,"count":24},{"startOffset":329,"endOffset":673,"count":1},{"startOffset":677,"endOffset":1024,"count":23},{"startOffset":1028,"endOffset":1930,"count":0}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":483,"endOffset":509,"count":0}],"isBlockCoverage":false},{"functionName":"onResult","ranges":[{"startOffset":528,"endOffset":561,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":606,"endOffset":614,"count":1}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":865,"endOffset":896,"count":39}],"isBlockCoverage":true},{"functionName":"onResult","ranges":[{"startOffset":915,"endOffset":958,"count":39}],"isBlockCoverage":true},{"functionName":"onDone","ranges":[{"startOffset":975,"endOffset":997,"count":23}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":1142,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"onResult","ranges":[{"startOffset":1240,"endOffset":1276,"count":0}],"isBlockCoverage":false},{"functionName":"onDone","ranges":[{"startOffset":1291,"endOffset":1312,"count":0}],"isBlockCoverage":false},{"functionName":"setup","ranges":[{"startOffset":1970,"endOffset":2046,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2030,"endOffset":2041,"count":39}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":2171,"endOffset":2252,"count":24}],"isBlockCoverage":true},{"functionName":"deinit","ranges":[{"startOffset":2255,"endOffset":2322,"count":24}],"isBlockCoverage":true},{"functionName":"contentWithInterceptors","ranges":[{"startOffset":2325,"endOffset":4064,"count":24},{"startOffset":2404,"endOffset":4017,"count":0}],"isBlockCoverage":true},{"functionName":"code.content.Object.assign.onError","ranges":[{"startOffset":2914,"endOffset":3244,"count":0}],"isBlockCoverage":false},{"functionName":"code.content.Object.assign.onResult","ranges":[{"startOffset":3287,"endOffset":3629,"count":0}],"isBlockCoverage":false},{"functionName":"code.content.Object.assign.onDone","ranges":[{"startOffset":3668,"endOffset":3983,"count":0}],"isBlockCoverage":false},{"functionName":"header","ranges":[{"startOffset":4067,"endOffset":4397,"count":24},{"startOffset":4121,"endOffset":4161,"count":0},{"startOffset":4280,"endOffset":4379,"count":0}],"isBlockCoverage":true},{"functionName":"needContext","ranges":[{"startOffset":4400,"endOffset":4503,"count":24},{"startOffset":4455,"endOffset":4484,"count":39},{"startOffset":4472,"endOffset":4484,"count":0}],"isBlockCoverage":true},{"functionName":"callTap","ranges":[{"startOffset":4506,"endOffset":7388,"count":39},{"startOffset":4682,"endOffset":5012,"count":0},{"startOffset":5145,"endOffset":5949,"count":0},{"startOffset":6074,"endOffset":6127,"count":0},{"startOffset":6328,"endOffset":6360,"count":0},{"startOffset":6469,"endOffset":6481,"count":0},{"startOffset":6542,"endOffset":7366,"count":0}],"isBlockCoverage":true},{"functionName":"callTapsSeries","ranges":[{"startOffset":7391,"endOffset":8660,"count":24},{"startOffset":7537,"endOffset":7553,"count":2},{"startOffset":7553,"endOffset":7685,"count":22},{"startOffset":7811,"endOffset":8621,"count":39},{"startOffset":7870,"endOffset":7939,"count":17},{"startOffset":7915,"endOffset":7938,"count":0},{"startOffset":7956,"endOffset":8141,"count":17},{"startOffset":8490,"endOffset":8497,"count":0},{"startOffset":8545,"endOffset":8582,"count":0},{"startOffset":8621,"endOffset":8659,"count":39}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7603,"endOffset":7627,"count":22}],"isBlockCoverage":true},{"functionName":"current","ranges":[{"startOffset":8077,"endOffset":8135,"count":17},{"startOffset":8103,"endOffset":8114,"count":0}],"isBlockCoverage":true},{"functionName":"doneBreak","ranges":[{"startOffset":8188,"endOffset":8258,"count":39},{"startOffset":8232,"endOffset":8257,"count":0}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":8310,"endOffset":8355,"count":39}],"isBlockCoverage":true},{"functionName":"content.callTap.onResult","ranges":[{"startOffset":8394,"endOffset":8465,"count":39}],"isBlockCoverage":true},{"functionName":"current","ranges":[{"startOffset":8603,"endOffset":8616,"count":39}],"isBlockCoverage":true},{"functionName":"callTapsLooping","ranges":[{"startOffset":8663,"endOffset":10060,"count":0}],"isBlockCoverage":false},{"functionName":"callTapsParallel","ranges":[{"startOffset":10063,"endOffset":11547,"count":0}],"isBlockCoverage":false},{"functionName":"args","ranges":[{"startOffset":11550,"endOffset":11796,"count":63},{"startOffset":11623,"endOffset":11658,"count":0},{"startOffset":11672,"endOffset":11704,"count":62},{"startOffset":11733,"endOffset":11752,"count":0}],"isBlockCoverage":true},{"functionName":"getTapFn","ranges":[{"startOffset":11799,"endOffset":11840,"count":39}],"isBlockCoverage":true},{"functionName":"getTap","ranges":[{"startOffset":11843,"endOffset":11885,"count":0}],"isBlockCoverage":false},{"functionName":"getInterceptor","ranges":[{"startOffset":11888,"endOffset":11946,"count":0}],"isBlockCoverage":false}]},{"scriptId":"578","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/tapable@2.2.2/node_modules/tapable/lib/SyncBailHook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1228,"count":1}],"isBlockCoverage":true},{"functionName":"content","ranges":[{"startOffset":259,"endOffset":589,"count":0}],"isBlockCoverage":false},{"functionName":"TAP_ASYNC","ranges":[{"startOffset":659,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"TAP_PROMISE","ranges":[{"startOffset":756,"endOffset":832,"count":0}],"isBlockCoverage":false},{"functionName":"COMPILE","ranges":[{"startOffset":851,"endOffset":937,"count":0}],"isBlockCoverage":false},{"functionName":"SyncBailHook","ranges":[{"startOffset":940,"endOffset":1163,"count":0}],"isBlockCoverage":false}]},{"scriptId":"579","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/tapable@2.2.2/node_modules/tapable/lib/SyncWaterfallHook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1479,"count":1}],"isBlockCoverage":true},{"functionName":"content","ranges":[{"startOffset":264,"endOffset":713,"count":0}],"isBlockCoverage":false},{"functionName":"TAP_ASYNC","ranges":[{"startOffset":788,"endOffset":867,"count":0}],"isBlockCoverage":false},{"functionName":"TAP_PROMISE","ranges":[{"startOffset":890,"endOffset":971,"count":0}],"isBlockCoverage":false},{"functionName":"COMPILE","ranges":[{"startOffset":990,"endOffset":1076,"count":0}],"isBlockCoverage":false},{"functionName":"SyncWaterfallHook","ranges":[{"startOffset":1079,"endOffset":1404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"580","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/tapable@2.2.2/node_modules/tapable/lib/SyncLoopHook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1058,"count":1}],"isBlockCoverage":true},{"functionName":"content","ranges":[{"startOffset":259,"endOffset":419,"count":0}],"isBlockCoverage":false},{"functionName":"TAP_ASYNC","ranges":[{"startOffset":489,"endOffset":563,"count":0}],"isBlockCoverage":false},{"functionName":"TAP_PROMISE","ranges":[{"startOffset":586,"endOffset":662,"count":0}],"isBlockCoverage":false},{"functionName":"COMPILE","ranges":[{"startOffset":681,"endOffset":767,"count":0}],"isBlockCoverage":false},{"functionName":"SyncLoopHook","ranges":[{"startOffset":770,"endOffset":993,"count":0}],"isBlockCoverage":false}]},{"scriptId":"581","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/tapable@2.2.2/node_modules/tapable/lib/AsyncParallelHook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":878,"count":1}],"isBlockCoverage":true},{"functionName":"content","ranges":[{"startOffset":264,"endOffset":419,"count":0}],"isBlockCoverage":false},{"functionName":"COMPILE","ranges":[{"startOffset":492,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncParallelHook","ranges":[{"startOffset":581,"endOffset":803,"count":0}],"isBlockCoverage":false}]},{"scriptId":"582","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/tapable@2.2.2/node_modules/tapable/lib/AsyncParallelBailHook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2366,"count":1}],"isBlockCoverage":true},{"functionName":"content","ranges":[{"startOffset":268,"endOffset":1887,"count":0}],"isBlockCoverage":false},{"functionName":"COMPILE","ranges":[{"startOffset":1964,"endOffset":2050,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncParallelBailHook","ranges":[{"startOffset":2053,"endOffset":2283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"583","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/tapable@2.2.2/node_modules/tapable/lib/AsyncSeriesHook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":864,"count":1}],"isBlockCoverage":true},{"functionName":"content","ranges":[{"startOffset":262,"endOffset":415,"count":1}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":336,"endOffset":395,"count":0}],"isBlockCoverage":false},{"functionName":"COMPILE","ranges":[{"startOffset":486,"endOffset":572,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncSeriesHook","ranges":[{"startOffset":575,"endOffset":793,"count":2}],"isBlockCoverage":true}]},{"scriptId":"584","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/tapable@2.2.2/node_modules/tapable/lib/AsyncSeriesBailHook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1058,"count":1}],"isBlockCoverage":true},{"functionName":"content","ranges":[{"startOffset":266,"endOffset":589,"count":22}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":365,"endOffset":424,"count":39}],"isBlockCoverage":true},{"functionName":"onResult","ranges":[{"startOffset":439,"endOffset":551,"count":39}],"isBlockCoverage":true},{"functionName":"COMPILE","ranges":[{"startOffset":664,"endOffset":750,"count":22}],"isBlockCoverage":true},{"functionName":"AsyncSeriesBailHook","ranges":[{"startOffset":753,"endOffset":979,"count":52}],"isBlockCoverage":true}]},{"scriptId":"585","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/tapable@2.2.2/node_modules/tapable/lib/AsyncSeriesLoopHook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":889,"count":1}],"isBlockCoverage":true},{"functionName":"content","ranges":[{"startOffset":266,"endOffset":420,"count":0}],"isBlockCoverage":false},{"functionName":"COMPILE","ranges":[{"startOffset":495,"endOffset":581,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncSeriesLoopHook","ranges":[{"startOffset":584,"endOffset":810,"count":0}],"isBlockCoverage":false}]},{"scriptId":"586","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/tapable@2.2.2/node_modules/tapable/lib/AsyncSeriesWaterfallHook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1262,"count":1}],"isBlockCoverage":true},{"functionName":"content","ranges":[{"startOffset":271,"endOffset":676,"count":0}],"isBlockCoverage":false},{"functionName":"COMPILE","ranges":[{"startOffset":756,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"AsyncSeriesWaterfallHook","ranges":[{"startOffset":845,"endOffset":1173,"count":0}],"isBlockCoverage":false}]},{"scriptId":"587","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/tapable@2.2.2/node_modules/tapable/lib/HookMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1508,"count":1}],"isBlockCoverage":true},{"functionName":"defaultFactory","ranges":[{"startOffset":169,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"HookMap","ranges":[{"startOffset":208,"endOffset":350,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":353,"endOffset":395,"count":0}],"isBlockCoverage":false},{"functionName":"for","ranges":[{"startOffset":398,"endOffset":723,"count":0}],"isBlockCoverage":false},{"functionName":"intercept","ranges":[{"startOffset":726,"endOffset":866,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":909,"endOffset":980,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1102,"endOffset":1178,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1312,"endOffset":1390,"count":0}],"isBlockCoverage":false}]},{"scriptId":"588","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/tapable@2.2.2/node_modules/tapable/lib/MultiHook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":900,"count":1}],"isBlockCoverage":true},{"functionName":"MultiHook","ranges":[{"startOffset":167,"endOffset":250,"count":0}],"isBlockCoverage":false},{"functionName":"tap","ranges":[{"startOffset":253,"endOffset":339,"count":0}],"isBlockCoverage":false},{"functionName":"tapAsync","ranges":[{"startOffset":342,"endOffset":438,"count":0}],"isBlockCoverage":false},{"functionName":"tapPromise","ranges":[{"startOffset":441,"endOffset":541,"count":0}],"isBlockCoverage":false},{"functionName":"isUsed","ranges":[{"startOffset":544,"endOffset":647,"count":0}],"isBlockCoverage":false},{"functionName":"intercept","ranges":[{"startOffset":650,"endOffset":748,"count":0}],"isBlockCoverage":false},{"functionName":"withOptions","ranges":[{"startOffset":751,"endOffset":868,"count":0}],"isBlockCoverage":false}]},{"scriptId":"589","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/createInnerContext.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1060,"count":1}],"isBlockCoverage":true},{"functionName":"createInnerContext","ranges":[{"startOffset":362,"endOffset":1058,"count":44},{"startOffset":473,"endOffset":826,"count":0}],"isBlockCoverage":true},{"functionName":"innerLog","ranges":[{"startOffset":554,"endOffset":780,"count":0}],"isBlockCoverage":false}]},{"scriptId":"590","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/util/identifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1590,"count":1}],"isBlockCoverage":true},{"functionName":"parseIdentifier","ranges":[{"startOffset":353,"endOffset":1538,"count":1},{"startOffset":410,"endOffset":429,"count":0},{"startOffset":830,"endOffset":1008,"count":0},{"startOffset":1010,"endOffset":1508,"count":0},{"startOffset":1509,"endOffset":1513,"count":0},{"startOffset":1526,"endOffset":1531,"count":0}],"isBlockCoverage":true}]},{"scriptId":"591","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/util/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5267,"count":1}],"isBlockCoverage":true},{"functionName":"getType","ranges":[{"startOffset":1412,"endOffset":3161,"count":53},{"startOffset":1460,"endOffset":1493,"count":0},{"startOffset":1496,"endOffset":1755,"count":7},{"startOffset":1566,"endOffset":1611,"count":5},{"startOffset":1616,"endOffset":1668,"count":2},{"startOffset":1673,"endOffset":1719,"count":0},{"startOffset":1724,"endOffset":1755,"count":0},{"startOffset":1758,"endOffset":2372,"count":0},{"startOffset":2375,"endOffset":2430,"count":46},{"startOffset":2430,"endOffset":2741,"count":6},{"startOffset":2507,"endOffset":2554,"count":4},{"startOffset":2559,"endOffset":2705,"count":2},{"startOffset":2670,"endOffset":2705,"count":0},{"startOffset":2710,"endOffset":2741,"count":0},{"startOffset":2744,"endOffset":2794,"count":19},{"startOffset":2797,"endOffset":2841,"count":0},{"startOffset":2844,"endOffset":2906,"count":21},{"startOffset":2906,"endOffset":3134,"count":0},{"startOffset":3134,"endOffset":3160,"count":21}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":3302,"endOffset":3628,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3826,"endOffset":4569,"count":24},{"startOffset":3866,"endOffset":3893,"count":0},{"startOffset":3959,"endOffset":4022,"count":0},{"startOffset":4025,"endOffset":4084,"count":0},{"startOffset":4120,"endOffset":4141,"count":0},{"startOffset":4144,"endOffset":4167,"count":3},{"startOffset":4253,"endOffset":4330,"count":0},{"startOffset":4333,"endOffset":4400,"count":0},{"startOffset":4403,"endOffset":4530,"count":0},{"startOffset":4533,"endOffset":4568,"count":0}],"isBlockCoverage":true},{"functionName":"cachedJoin","ranges":[{"startOffset":4841,"endOffset":5224,"count":29},{"startOffset":4982,"endOffset":5034,"count":12},{"startOffset":5034,"endOffset":5130,"count":17},{"startOffset":5109,"endOffset":5127,"count":5},{"startOffset":5130,"endOffset":5223,"count":24}],"isBlockCoverage":true}]},{"scriptId":"592","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/SyncAsyncFileSystemDecorator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6059,"count":1}],"isBlockCoverage":true},{"functionName":"SyncAsyncFileSystemDecorator","ranges":[{"startOffset":605,"endOffset":6010,"count":1}],"isBlockCoverage":true},{"functionName":"SyncAsyncFileSystemDecorator.lstat","ranges":[{"startOffset":826,"endOffset":1290,"count":0}],"isBlockCoverage":false},{"functionName":"SyncAsyncFileSystemDecorator.lstatSync","ranges":[{"startOffset":1366,"endOffset":1416,"count":0}],"isBlockCoverage":false},{"functionName":"SyncAsyncFileSystemDecorator.stat","ranges":[{"startOffset":1479,"endOffset":1912,"count":0}],"isBlockCoverage":false},{"functionName":"SyncAsyncFileSystemDecorator.statSync","ranges":[{"startOffset":1982,"endOffset":2025,"count":0}],"isBlockCoverage":false},{"functionName":"SyncAsyncFileSystemDecorator.readdir","ranges":[{"startOffset":2091,"endOffset":2699,"count":0}],"isBlockCoverage":false},{"functionName":"SyncAsyncFileSystemDecorator.readdirSync","ranges":[{"startOffset":2779,"endOffset":2908,"count":0}],"isBlockCoverage":false},{"functionName":"SyncAsyncFileSystemDecorator.readFile","ranges":[{"startOffset":2979,"endOffset":3420,"count":0}],"isBlockCoverage":false},{"functionName":"SyncAsyncFileSystemDecorator.readFileSync","ranges":[{"startOffset":3498,"endOffset":3545,"count":0}],"isBlockCoverage":false},{"functionName":"SyncAsyncFileSystemDecorator.readlink","ranges":[{"startOffset":3613,"endOffset":4168,"count":0}],"isBlockCoverage":false},{"functionName":"SyncAsyncFileSystemDecorator.readlinkSync","ranges":[{"startOffset":4250,"endOffset":4394,"count":0}],"isBlockCoverage":false},{"functionName":"SyncAsyncFileSystemDecorator.readJson","ranges":[{"startOffset":4580,"endOffset":4833,"count":0}],"isBlockCoverage":false},{"functionName":"SyncAsyncFileSystemDecorator.readJsonSync","ranges":[{"startOffset":4915,"endOffset":4950,"count":0}],"isBlockCoverage":false},{"functionName":"SyncAsyncFileSystemDecorator.realpath","ranges":[{"startOffset":5136,"endOffset":5746,"count":0}],"isBlockCoverage":false},{"functionName":"SyncAsyncFileSystemDecorator.realpathSync","ranges":[{"startOffset":5833,"endOffset":5999,"count":0}],"isBlockCoverage":false}]},{"scriptId":"593","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/AliasFieldPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3061,"count":1}],"isBlockCoverage":true},{"functionName":"AliasFieldPlugin","ranges":[{"startOffset":696,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":882,"endOffset":3057,"count":0}],"isBlockCoverage":false}]},{"scriptId":"594","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/DescriptionFileUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5340,"count":1}],"isBlockCoverage":true},{"functionName":"cdUp","ranges":[{"startOffset":1059,"endOffset":1323,"count":8},{"startOffset":1110,"endOffset":1122,"count":0},{"startOffset":1222,"endOffset":1225,"count":0},{"startOffset":1238,"endOffset":1253,"count":0},{"startOffset":1270,"endOffset":1282,"count":0},{"startOffset":1315,"endOffset":1319,"count":0}],"isBlockCoverage":true},{"functionName":"loadDescriptionFile","ranges":[{"startOffset":1616,"endOffset":4683,"count":6}],"isBlockCoverage":true},{"functionName":"findDescriptionFile","ranges":[{"startOffset":1725,"endOffset":4677,"count":11},{"startOffset":1772,"endOffset":1806,"count":10},{"startOffset":1808,"endOffset":1911,"count":2},{"startOffset":1911,"endOffset":4676,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2102,"endOffset":4301,"count":9},{"startOffset":3547,"endOffset":4296,"count":0}],"isBlockCoverage":true},{"functionName":"onJson","ranges":[{"startOffset":2334,"endOffset":2818,"count":4},{"startOffset":2388,"endOffset":2671,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2915,"endOffset":3539,"count":9},{"startOffset":2950,"endOffset":3385,"count":5},{"startOffset":3112,"endOffset":3193,"count":0},{"startOffset":3229,"endOffset":3385,"count":0},{"startOffset":3385,"endOffset":3429,"count":4},{"startOffset":3429,"endOffset":3503,"count":0},{"startOffset":3503,"endOffset":3538,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3610,"endOffset":4288,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4429,"endOffset":4668,"count":9},{"startOffset":4461,"endOffset":4482,"count":0},{"startOffset":4499,"endOffset":4529,"count":4},{"startOffset":4529,"endOffset":4577,"count":5},{"startOffset":4577,"endOffset":4608,"count":0},{"startOffset":4608,"endOffset":4667,"count":5}],"isBlockCoverage":true},{"functionName":"getField","ranges":[{"startOffset":4819,"endOffset":5216,"count":3},{"startOffset":4870,"endOffset":4887,"count":0},{"startOffset":4915,"endOffset":5190,"count":1},{"startOffset":5068,"endOffset":5105,"count":0},{"startOffset":5190,"endOffset":5215,"count":2}],"isBlockCoverage":true}]},{"scriptId":"595","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/forEachBail.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1122,"count":1}],"isBlockCoverage":true},{"functionName":"forEachBail","ranges":[{"startOffset":653,"endOffset":1120,"count":12},{"startOffset":728,"endOffset":746,"count":0},{"startOffset":1117,"endOffset":1118,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":774,"endOffset":1100,"count":33}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":859,"endOffset":1043,"count":33},{"startOffset":914,"endOffset":934,"count":28},{"startOffset":936,"endOffset":981,"count":12},{"startOffset":981,"endOffset":1021,"count":21},{"startOffset":1020,"endOffset":1021,"count":0},{"startOffset":1021,"endOffset":1042,"count":21}],"isBlockCoverage":true}]},{"scriptId":"596","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/getInnerRequest.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1205,"count":1}],"isBlockCoverage":true},{"functionName":"getInnerRequest","ranges":[{"startOffset":375,"endOffset":1203,"count":0}],"isBlockCoverage":false}]},{"scriptId":"597","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/AliasPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5195,"count":1}],"isBlockCoverage":true},{"functionName":"AliasPlugin","ranges":[{"startOffset":756,"endOffset":908,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":985,"endOffset":5191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"598","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/AppendPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1201,"count":1}],"isBlockCoverage":true},{"functionName":"AppendPlugin","ranges":[{"startOffset":498,"endOffset":619,"count":6}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":696,"endOffset":1197,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":830,"endOffset":1192,"count":6}],"isBlockCoverage":true}]},{"scriptId":"599","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/ConditionalPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1723,"count":1}],"isBlockCoverage":true},{"functionName":"ConditionalPlugin","ranges":[{"startOffset":676,"endOffset":882,"count":12}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":959,"endOffset":1719,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1227,"endOffset":1714,"count":8},{"startOffset":1297,"endOffset":1362,"count":9},{"startOffset":1338,"endOffset":1356,"count":3},{"startOffset":1362,"endOffset":1478,"count":5},{"startOffset":1478,"endOffset":1488,"count":4},{"startOffset":1495,"endOffset":1701,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1497,"endOffset":1701,"count":1},{"startOffset":1533,"endOffset":1554,"count":0},{"startOffset":1632,"endOffset":1660,"count":0}],"isBlockCoverage":true}]},{"scriptId":"600","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/DescriptionFilePlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2684,"count":1}],"isBlockCoverage":true},{"functionName":"DescriptionFilePlugin","ranges":[{"startOffset":617,"endOffset":782,"count":10}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":859,"endOffset":2680,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1011,"endOffset":2670,"count":6},{"startOffset":1099,"endOffset":1117,"count":0},{"startOffset":1163,"endOffset":1196,"count":3},{"startOffset":1203,"endOffset":1209,"count":3},{"startOffset":1232,"endOffset":1250,"count":0},{"startOffset":1394,"endOffset":1591,"count":5},{"startOffset":1599,"endOffset":1610,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1640,"endOffset":2655,"count":6},{"startOffset":1675,"endOffset":1696,"count":0},{"startOffset":1717,"endOffset":1903,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2429,"endOffset":2636,"count":6},{"startOffset":2466,"endOffset":2487,"count":0},{"startOffset":2565,"endOffset":2593,"count":1},{"startOffset":2593,"endOffset":2635,"count":5}],"isBlockCoverage":true}]},{"scriptId":"601","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/DirectoryExistsPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1753,"count":1}],"isBlockCoverage":true},{"functionName":"DirectoryExistsPlugin","ranges":[{"startOffset":398,"endOffset":478,"count":4}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":555,"endOffset":1749,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":707,"endOffset":1739,"count":2},{"startOffset":843,"endOffset":861,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":886,"endOffset":1731,"count":2},{"startOffset":927,"endOffset":1179,"count":0},{"startOffset":1211,"endOffset":1468,"count":0},{"startOffset":1512,"endOffset":1576,"count":0}],"isBlockCoverage":true}]},{"scriptId":"602","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/ExportsFieldPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6154,"count":1}],"isBlockCoverage":true},{"functionName":"ExportsFieldPlugin","ranges":[{"startOffset":1108,"endOffset":1390,"count":2}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":1467,"endOffset":6150,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1607,"endOffset":6145,"count":1},{"startOffset":1734,"endOffset":1752,"count":0},{"startOffset":1968,"endOffset":1999,"count":0},{"startOffset":2075,"endOffset":2176,"count":0},{"startOffset":2463,"endOffset":6144,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4224,"endOffset":5938,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6086,"endOffset":6132,"count":0}],"isBlockCoverage":false}]},{"scriptId":"603","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/util/entrypoints.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14430,"count":1}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":2279,"endOffset":2769,"count":0}],"isBlockCoverage":false},{"functionName":"findMatch","ranges":[{"startOffset":3112,"endOffset":4665,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalMapping","ranges":[{"startOffset":4788,"endOffset":4921,"count":0}],"isBlockCoverage":false},{"functionName":"conditionalMapping","ranges":[{"startOffset":5116,"endOffset":6437,"count":0}],"isBlockCoverage":false},{"functionName":"targetMapping","ranges":[{"startOffset":6858,"endOffset":7357,"count":0}],"isBlockCoverage":false},{"functionName":"directMapping","ranges":[{"startOffset":7845,"endOffset":8776,"count":0}],"isBlockCoverage":false},{"functionName":"createFieldProcessor","ranges":[{"startOffset":9157,"endOffset":10050,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportsFieldRequest","ranges":[{"startOffset":10132,"endOffset":10598,"count":0}],"isBlockCoverage":false},{"functionName":"buildExportsField","ranges":[{"startOffset":10705,"endOffset":11857,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportTarget","ranges":[{"startOffset":11956,"endOffset":12502,"count":0}],"isBlockCoverage":false},{"functionName":"processExportsField","ranges":[{"startOffset":12651,"endOffset":12883,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportsFieldRequest","ranges":[{"startOffset":12966,"endOffset":13453,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportTarget","ranges":[{"startOffset":13552,"endOffset":14098,"count":0}],"isBlockCoverage":false},{"functionName":"processImportsField","ranges":[{"startOffset":14247,"endOffset":14428,"count":0}],"isBlockCoverage":false}]},{"scriptId":"604","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/ExtensionAliasPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3053,"count":1}],"isBlockCoverage":true},{"functionName":"ExtensionAliasPlugin","ranges":[{"startOffset":648,"endOffset":763,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":840,"endOffset":3049,"count":0}],"isBlockCoverage":false}]},{"scriptId":"605","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/FileExistsPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1600,"count":1}],"isBlockCoverage":true},{"functionName":"FileExistsPlugin","ranges":[{"startOffset":393,"endOffset":473,"count":2}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":550,"endOffset":1596,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":722,"endOffset":1591,"count":9},{"startOffset":809,"endOffset":827,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":846,"endOffset":1584,"count":9},{"startOffset":876,"endOffset":884,"count":3},{"startOffset":886,"endOffset":1103,"count":6},{"startOffset":934,"endOffset":996,"count":0},{"startOffset":1027,"endOffset":1071,"count":0},{"startOffset":1103,"endOffset":1129,"count":3},{"startOffset":1129,"endOffset":1346,"count":2},{"startOffset":1177,"endOffset":1239,"count":0},{"startOffset":1270,"endOffset":1314,"count":0},{"startOffset":1346,"endOffset":1389,"count":1},{"startOffset":1389,"endOffset":1446,"count":0},{"startOffset":1446,"endOffset":1583,"count":1}],"isBlockCoverage":true}]},{"scriptId":"606","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/ImportsFieldPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6589,"count":1}],"isBlockCoverage":true},{"functionName":"ImportsFieldPlugin","ranges":[{"startOffset":1220,"endOffset":1581,"count":2}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":1658,"endOffset":6585,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1872,"endOffset":6580,"count":0}],"isBlockCoverage":false}]},{"scriptId":"607","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/JoinRequestPartPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1922,"count":1}],"isBlockCoverage":true},{"functionName":"JoinRequestPartPlugin","ranges":[{"startOffset":518,"endOffset":598,"count":2}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":675,"endOffset":1918,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":827,"endOffset":1908,"count":1},{"startOffset":901,"endOffset":906,"count":0},{"startOffset":1316,"endOffset":1483,"count":0}],"isBlockCoverage":true}]},{"scriptId":"608","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/JoinRequestPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1276,"count":1}],"isBlockCoverage":true},{"functionName":"JoinRequestPlugin","ranges":[{"startOffset":463,"endOffset":543,"count":4}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":620,"endOffset":1272,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":759,"endOffset":1267,"count":2}],"isBlockCoverage":true}]},{"scriptId":"609","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/MainFieldPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2456,"count":1}],"isBlockCoverage":true},{"functionName":"MainFieldPlugin","ranges":[{"startOffset":816,"endOffset":931,"count":2}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":1008,"endOffset":2452,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1145,"endOffset":2447,"count":1},{"startOffset":1435,"endOffset":1466,"count":0},{"startOffset":1872,"endOffset":1903,"count":0},{"startOffset":1972,"endOffset":2016,"count":0}],"isBlockCoverage":true}]},{"scriptId":"610","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/ModulesInHierarchicalDirectoriesPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2474,"count":1}],"isBlockCoverage":true},{"functionName":"ModulesInHierarchicalDirectoriesPlugin","ranges":[{"startOffset":631,"endOffset":792,"count":2}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":869,"endOffset":2470,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1038,"endOffset":2460,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1199,"endOffset":1300,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1237,"endOffset":1290,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1324,"endOffset":1399,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1616,"endOffset":2429,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1659,"endOffset":2419,"count":1},{"startOffset":2126,"endOffset":2418,"count":0}],"isBlockCoverage":true}]},{"scriptId":"611","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/getPaths.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1206,"count":1}],"isBlockCoverage":true},{"functionName":"getPaths","ranges":[{"startOffset":242,"endOffset":836,"count":3},{"startOffset":287,"endOffset":327,"count":0},{"startOffset":589,"endOffset":739,"count":22},{"startOffset":693,"endOffset":699,"count":3}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":945,"endOffset":1204,"count":0}],"isBlockCoverage":false}]},{"scriptId":"612","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/ModulesInRootPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1163,"count":1}],"isBlockCoverage":true},{"functionName":"ModulesInRootPlugin","ranges":[{"startOffset":495,"endOffset":601,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":678,"endOffset":1159,"count":0}],"isBlockCoverage":false}]},{"scriptId":"613","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/NextPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":803,"count":1}],"isBlockCoverage":true},{"functionName":"NextPlugin","ranges":[{"startOffset":387,"endOffset":467,"count":18}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":544,"endOffset":799,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":676,"endOffset":794,"count":13}],"isBlockCoverage":true}]},{"scriptId":"614","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/ParsePlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2323,"count":1}],"isBlockCoverage":true},{"functionName":"ParsePlugin","ranges":[{"startOffset":525,"endOffset":661,"count":4}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":738,"endOffset":2319,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":871,"endOffset":2314,"count":1},{"startOffset":1111,"endOffset":1127,"count":0},{"startOffset":1129,"endOffset":1168,"count":0},{"startOffset":1194,"endOffset":1213,"count":0},{"startOffset":1215,"endOffset":1260,"count":0},{"startOffset":1299,"endOffset":1475,"count":0},{"startOffset":1619,"endOffset":2240,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2026,"endOffset":2212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"615","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/PnpPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4040,"count":1}],"isBlockCoverage":true},{"functionName":"PnpPlugin","ranges":[{"startOffset":755,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":1003,"endOffset":4036,"count":0}],"isBlockCoverage":false}]},{"scriptId":"616","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/RestrictionsPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1816,"count":1}],"isBlockCoverage":true},{"functionName":"isInside","ranges":[{"startOffset":464,"endOffset":691,"count":0}],"isBlockCoverage":false},{"functionName":"RestrictionsPlugin","ranges":[{"startOffset":861,"endOffset":959,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":1036,"endOffset":1812,"count":0}],"isBlockCoverage":false}]},{"scriptId":"617","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/ResultPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":982,"count":1}],"isBlockCoverage":true},{"functionName":"ResultPlugin","ranges":[{"startOffset":328,"endOffset":376,"count":2}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":453,"endOffset":978,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":517,"endOffset":969,"count":1},{"startOffset":620,"endOffset":685,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":744,"endOffset":962,"count":1},{"startOffset":769,"endOffset":790,"count":0},{"startOffset":845,"endOffset":915,"count":0}],"isBlockCoverage":true}]},{"scriptId":"618","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/RootsPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1650,"count":1}],"isBlockCoverage":true},{"functionName":"RootsPlugin","ranges":[{"startOffset":534,"endOffset":648,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":725,"endOffset":1616,"count":0}],"isBlockCoverage":false}]},{"scriptId":"619","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/SelfReferencePlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2205,"count":1}],"isBlockCoverage":true},{"functionName":"SelfReferencePlugin","ranges":[{"startOffset":684,"endOffset":813,"count":2}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":890,"endOffset":2201,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1031,"endOffset":2196,"count":1},{"startOffset":1110,"endOffset":1128,"count":0},{"startOffset":1177,"endOffset":1195,"count":0},{"startOffset":1448,"endOffset":1756,"count":0},{"startOffset":1763,"endOffset":2191,"count":0}],"isBlockCoverage":true}]},{"scriptId":"620","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/SymlinkPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2732,"count":1}],"isBlockCoverage":true},{"functionName":"SymlinkPlugin","ranges":[{"startOffset":600,"endOffset":680,"count":2}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":757,"endOffset":2728,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":926,"endOffset":2723,"count":2},{"startOffset":999,"endOffset":1017,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1418,"endOffset":2034,"count":23},{"startOffset":1496,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1580,"endOffset":2025,"count":23},{"startOffset":1615,"endOffset":1624,"count":1},{"startOffset":1626,"endOffset":1998,"count":1},{"startOffset":1941,"endOffset":1989,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2169,"endOffset":2710,"count":2},{"startOffset":2213,"endOffset":2300,"count":1},{"startOffset":2300,"endOffset":2332,"count":0},{"startOffset":2341,"endOffset":2360,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2410,"endOffset":2446,"count":9}],"isBlockCoverage":true}]},{"scriptId":"621","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/TryNextPlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":920,"count":1}],"isBlockCoverage":true},{"functionName":"TryNextPlugin","ranges":[{"startOffset":426,"endOffset":541,"count":2}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":618,"endOffset":916,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":753,"endOffset":911,"count":3}],"isBlockCoverage":true}]},{"scriptId":"622","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/UnsafeCachePlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3268,"count":1}],"isBlockCoverage":true},{"functionName":"getCacheId","ranges":[{"startOffset":642,"endOffset":882,"count":0}],"isBlockCoverage":false},{"functionName":"UnsafeCachePlugin","ranges":[{"startOffset":1200,"endOffset":1415,"count":0}],"isBlockCoverage":false},{"functionName":"apply","ranges":[{"startOffset":1492,"endOffset":3264,"count":0}],"isBlockCoverage":false}]},{"scriptId":"623","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/enhanced-resolve@5.18.2/node_modules/enhanced-resolve/lib/UseFilePlugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1314,"count":1}],"isBlockCoverage":true},{"functionName":"UseFilePlugin","ranges":[{"startOffset":497,"endOffset":615,"count":4}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":692,"endOffset":1310,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":827,"endOffset":1305,"count":0}],"isBlockCoverage":false}]},{"scriptId":"624","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/c8@9.1.0/node_modules/c8/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41,"count":1}],"isBlockCoverage":true}]},{"scriptId":"625","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/c8@9.1.0/node_modules/c8/lib/report.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12015,"count":1},{"startOffset":250,"endOffset":308,"count":0}],"isBlockCoverage":true},{"functionName":"Report","ranges":[{"startOffset":741,"endOffset":1817,"count":0}],"isBlockCoverage":false},{"functionName":"_getSrc","ranges":[{"startOffset":1821,"endOffset":1996,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":2000,"endOffset":2469,"count":0}],"isBlockCoverage":false},{"functionName":"getCoverageMapFromAllCoverageFiles","ranges":[{"startOffset":2473,"endOffset":3957,"count":0}],"isBlockCoverage":false},{"functionName":"_getSourceMap","ranges":[{"startOffset":4280,"endOffset":4915,"count":0}],"isBlockCoverage":false},{"functionName":"_getMergedProcessCov","ranges":[{"startOffset":5183,"endOffset":5920,"count":0}],"isBlockCoverage":false},{"functionName":"_getMergedProcessCovAsync","ranges":[{"startOffset":6290,"endOffset":7452,"count":0}],"isBlockCoverage":false},{"functionName":"_includeUncoveredFiles","ranges":[{"startOffset":7717,"endOffset":8809,"count":0}],"isBlockCoverage":false},{"functionName":"_isCoverageObject","ranges":[{"startOffset":8967,"endOffset":9082,"count":0}],"isBlockCoverage":false},{"functionName":"_loadReports","ranges":[{"startOffset":9247,"endOffset":9569,"count":0}],"isBlockCoverage":false},{"functionName":"_normalizeProcessCov","ranges":[{"startOffset":10193,"endOffset":11032,"count":0}],"isBlockCoverage":false},{"functionName":"_normalizeSourceMapCache","ranges":[{"startOffset":11310,"endOffset":11546,"count":0}],"isBlockCoverage":false},{"functionName":"_shouldInstrument","ranges":[{"startOffset":11650,"endOffset":11948,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":11969,"endOffset":12014,"count":0}],"isBlockCoverage":false}]},{"scriptId":"626","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/test-exclude@6.0.0/node_modules/test-exclude/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5211,"count":1}],"isBlockCoverage":true},{"functionName":"TestExclude","ranges":[{"startOffset":292,"endOffset":1487,"count":0}],"isBlockCoverage":false},{"functionName":"handleNegation","ranges":[{"startOffset":1722,"endOffset":2337,"count":0}],"isBlockCoverage":false},{"functionName":"shouldInstrument","ranges":[{"startOffset":2343,"endOffset":3245,"count":0}],"isBlockCoverage":false},{"functionName":"globSync","ranges":[{"startOffset":3251,"endOffset":3831,"count":0}],"isBlockCoverage":false},{"functionName":"glob","ranges":[{"startOffset":3837,"endOffset":4421,"count":0}],"isBlockCoverage":false},{"functionName":"prepGlobPatterns","ranges":[{"startOffset":4425,"endOffset":4932,"count":0}],"isBlockCoverage":false},{"functionName":"getExtensionPattern","ranges":[{"startOffset":4934,"endOffset":5179,"count":0}],"isBlockCoverage":false}]},{"scriptId":"627","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@7.2.3/node_modules/glob/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19445,"count":1}],"isBlockCoverage":true},{"functionName":"glob","ranges":[{"startOffset":2096,"endOffset":2407,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":2517,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"glob.hasMagic","ranges":[{"startOffset":2763,"endOffset":3120,"count":0}],"isBlockCoverage":false},{"functionName":"Glob","ranges":[{"startOffset":3158,"endOffset":4588,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._finish","ranges":[{"startOffset":4615,"endOffset":4818,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpath","ranges":[{"startOffset":4847,"endOffset":5162,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpathSet","ranges":[{"startOffset":5194,"endOffset":6010,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._mark","ranges":[{"startOffset":6035,"endOffset":6081,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._makeAbs","ranges":[{"startOffset":6109,"endOffset":6158,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.abort","ranges":[{"startOffset":6183,"endOffset":6241,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.pause","ranges":[{"startOffset":6266,"endOffset":6353,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.resume","ranges":[{"startOffset":6379,"endOffset":6961,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._process","ranges":[{"startOffset":6989,"endOffset":8838,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir","ranges":[{"startOffset":8873,"endOffset":9109,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir2","ranges":[{"startOffset":9145,"endOffset":11189,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._emitMatch","ranges":[{"startOffset":11219,"endOffset":11787,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirInGlobStar","ranges":[{"startOffset":11825,"endOffset":12627,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdir","ranges":[{"startOffset":12655,"endOffset":13172,"count":0}],"isBlockCoverage":false},{"functionName":"readdirCb","ranges":[{"startOffset":13174,"endOffset":13354,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirEntries","ranges":[{"startOffset":13389,"endOffset":13886,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirError","ranges":[{"startOffset":13919,"endOffset":15004,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processGlobStar","ranges":[{"startOffset":15040,"endOffset":15270,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processGlobStar2","ranges":[{"startOffset":15308,"endOffset":16455,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple","ranges":[{"startOffset":16489,"endOffset":16745,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple2","ranges":[{"startOffset":16779,"endOffset":17461,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat","ranges":[{"startOffset":17528,"endOffset":18919,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat2","ranges":[{"startOffset":18945,"endOffset":19444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"628","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/fs.realpath@1.0.0/node_modules/fs.realpath/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1308,"count":1}],"isBlockCoverage":true},{"functionName":"newError","ranges":[{"startOffset":386,"endOffset":548,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":550,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":867,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"monkeypatch","ranges":[{"startOffset":1125,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"unmonkeypatch","ranges":[{"startOffset":1212,"endOffset":1307,"count":0}],"isBlockCoverage":false}]},{"scriptId":"629","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/fs.realpath@1.0.0/node_modules/fs.realpath/old.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8542,"count":1},{"startOffset":1341,"endOffset":1377,"count":0},{"startOffset":2489,"endOffset":2534,"count":0},{"startOffset":2673,"endOffset":2754,"count":0}],"isBlockCoverage":true},{"functionName":"rethrow","ranges":[{"startOffset":1380,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCallback","ranges":[{"startOffset":2226,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":2818,"endOffset":5360,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":5383,"endOffset":8540,"count":0}],"isBlockCoverage":false}]},{"scriptId":"630","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@3.1.2/node_modules/minimatch/minimatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26266,"count":1},{"startOffset":134,"endOffset":151,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":72,"endOffset":130,"count":1},{"startOffset":117,"endOffset":129,"count":0}],"isBlockCoverage":true},{"functionName":"charSet","ranges":[{"startOffset":1148,"endOffset":1262,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1199,"endOffset":1255,"count":14}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":1337,"endOffset":1480,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":1482,"endOffset":1665,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.defaults","ranges":[{"startOffset":1688,"endOffset":2709,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.defaults","ranges":[{"startOffset":2732,"endOffset":2793,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch","ranges":[{"startOffset":2795,"endOffset":3068,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch","ranges":[{"startOffset":3070,"endOffset":3676,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.debug","ranges":[{"startOffset":3706,"endOffset":3720,"count":0}],"isBlockCoverage":false},{"functionName":"make","ranges":[{"startOffset":3754,"endOffset":5005,"count":0}],"isBlockCoverage":false},{"functionName":"parseNegate","ranges":[{"startOffset":5053,"endOffset":5438,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.braceExpand","ranges":[{"startOffset":5714,"endOffset":5784,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":5833,"endOffset":6374,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidPattern","ranges":[{"startOffset":6436,"endOffset":6639,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7337,"endOffset":17832,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.makeRe","ranges":[{"startOffset":17853,"endOffset":17940,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":17978,"endOffset":19165,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.match","ranges":[{"startOffset":19185,"endOffset":19439,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":19469,"endOffset":20941,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.matchOne","ranges":[{"startOffset":21192,"endOffset":26081,"count":0}],"isBlockCoverage":false},{"functionName":"globUnescape","ranges":[{"startOffset":26115,"endOffset":26179,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":26181,"endOffset":26265,"count":0}],"isBlockCoverage":false}]},{"scriptId":"631","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/brace-expansion@1.1.12/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4797,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":337,"endOffset":445,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":447,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":686,"endOffset":915,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1079,"endOffset":1545,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1547,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":2126,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2164,"endOffset":2215,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2216,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2271,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2311,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2352,"endOffset":4795,"count":0}],"isBlockCoverage":false}]},{"scriptId":"632","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/concat-map@0.0.1/node_modules/concat-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1},{"startOffset":255,"endOffset":343,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":224,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":258,"endOffset":343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"633","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/balanced-match@1.0.2/node_modules/balanced-match/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"balanced","ranges":[{"startOffset":41,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMatch","ranges":[{"startOffset":370,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":481,"endOffset":1218,"count":0}],"isBlockCoverage":false}]},{"scriptId":"634","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/inherits@2.0.4/node_modules/inherits/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1},{"startOffset":108,"endOffset":117,"count":0},{"startOffset":154,"endOffset":249,"count":0}],"isBlockCoverage":true}]},{"scriptId":"635","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/path-is-absolute@1.0.1/node_modules/path-is-absolute/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":611,"count":1},{"startOffset":534,"endOffset":541,"count":0}],"isBlockCoverage":true},{"functionName":"posix","ranges":[{"startOffset":15,"endOffset":71,"count":0}],"isBlockCoverage":false},{"functionName":"win32","ranges":[{"startOffset":73,"endOffset":486,"count":0}],"isBlockCoverage":false}]},{"scriptId":"636","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@7.2.3/node_modules/glob/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12020,"count":1}],"isBlockCoverage":true},{"functionName":"globSync","ranges":[{"startOffset":501,"endOffset":790,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync","ranges":[{"startOffset":792,"endOffset":1419,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._finish","ranges":[{"startOffset":1450,"endOffset":2010,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._process","ranges":[{"startOffset":2043,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processReaddir","ranges":[{"startOffset":3670,"endOffset":5628,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._emitMatch","ranges":[{"startOffset":5663,"endOffset":6051,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirInGlobStar","ranges":[{"startOffset":6094,"endOffset":6806,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdir","ranges":[{"startOffset":6838,"endOffset":7269,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirEntries","ranges":[{"startOffset":7308,"endOffset":7789,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirError","ranges":[{"startOffset":7826,"endOffset":8690,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processGlobStar","ranges":[{"startOffset":8730,"endOffset":9828,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processSimple","ranges":[{"startOffset":9866,"endOffset":10612,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._stat","ranges":[{"startOffset":10683,"endOffset":11863,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._mark","ranges":[{"startOffset":11892,"endOffset":11938,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._makeAbs","ranges":[{"startOffset":11970,"endOffset":12019,"count":0}],"isBlockCoverage":false}]},{"scriptId":"637","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@7.2.3/node_modules/glob/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6149,"count":1}],"isBlockCoverage":true},{"functionName":"ownProp","ranges":[{"startOffset":195,"endOffset":286,"count":0}],"isBlockCoverage":false},{"functionName":"alphasort","ranges":[{"startOffset":457,"endOffset":520,"count":0}],"isBlockCoverage":false},{"functionName":"setupIgnores","ranges":[{"startOffset":522,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"ignoreMap","ranges":[{"startOffset":796,"endOffset":1089,"count":0}],"isBlockCoverage":false},{"functionName":"setopts","ranges":[{"startOffset":1091,"endOffset":3396,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":3398,"endOffset":4715,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":4717,"endOffset":5168,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbs","ranges":[{"startOffset":5189,"endOffset":5544,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":5740,"endOffset":5954,"count":0}],"isBlockCoverage":false},{"functionName":"childrenIgnored","ranges":[{"startOffset":5956,"endOffset":6148,"count":0}],"isBlockCoverage":false}]},{"scriptId":"638","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/inflight@1.0.6/node_modules/inflight/inflight.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1365,"count":1}],"isBlockCoverage":true},{"functionName":"inflight","ranges":[{"startOffset":125,"endOffset":274,"count":0}],"isBlockCoverage":false},{"functionName":"makeres","ranges":[{"startOffset":276,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":1225,"endOffset":1364,"count":0}],"isBlockCoverage":false}]},{"scriptId":"639","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/wrappy@1.0.2/node_modules/wrappy/wrappy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":905,"count":1}],"isBlockCoverage":true},{"functionName":"wrappy","ranges":[{"startOffset":301,"endOffset":904,"count":3},{"startOffset":344,"endOffset":365,"count":0},{"startOffset":403,"endOffset":447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":475,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"wrapper","ranges":[{"startOffset":539,"endOffset":902,"count":0}],"isBlockCoverage":false}]},{"scriptId":"640","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/once@1.4.0/node_modules/once/once.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":935,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":123,"endOffset":427,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":430,"endOffset":610,"count":1}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":461,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"onceStrict","ranges":[{"startOffset":612,"endOffset":934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"641","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@istanbuljs+schema@0.1.3/node_modules/@istanbuljs/schema/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10972,"count":1}],"isBlockCoverage":true},{"functionName":"get default","ranges":[{"startOffset":541,"endOffset":583,"count":0}],"isBlockCoverage":false},{"functionName":"defaultsReducer","ranges":[{"startOffset":10310,"endOffset":10548,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10624,"endOffset":10959,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10711,"endOffset":10927,"count":0}],"isBlockCoverage":false}]},{"scriptId":"642","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@istanbuljs+schema@0.1.3/node_modules/@istanbuljs/schema/default-exclude.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":578,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":125,"endOffset":156,"count":6}],"isBlockCoverage":true}]},{"scriptId":"643","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@istanbuljs+schema@0.1.3/node_modules/@istanbuljs/schema/default-extension.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":88,"count":1}],"isBlockCoverage":true}]},{"scriptId":"644","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/test-exclude@6.0.0/node_modules/test-exclude/is-outside-dir.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":174,"count":1},{"startOffset":49,"endOffset":108,"count":0}],"isBlockCoverage":true}]},{"scriptId":"645","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/test-exclude@6.0.0/node_modules/test-exclude/is-outside-dir-posix.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":147,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":63,"endOffset":145,"count":0}],"isBlockCoverage":false}]},{"scriptId":"646","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/istanbul-lib-coverage@3.2.2/node_modules/istanbul-lib-coverage/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1898,"count":1}],"isBlockCoverage":true},{"functionName":"createCoverageSummary","ranges":[{"startOffset":851,"endOffset":1013,"count":0}],"isBlockCoverage":false},{"functionName":"createCoverageMap","ranges":[{"startOffset":1233,"endOffset":1383,"count":0}],"isBlockCoverage":false},{"functionName":"createFileCoverage","ranges":[{"startOffset":1606,"endOffset":1759,"count":0}],"isBlockCoverage":false}]},{"scriptId":"647","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/istanbul-lib-coverage@3.2.2/node_modules/istanbul-lib-coverage/lib/file-coverage.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14049,"count":1}],"isBlockCoverage":true},{"functionName":"emptyCoverage","ranges":[{"startOffset":355,"endOffset":615,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidObject","ranges":[{"startOffset":678,"endOffset":1059,"count":0}],"isBlockCoverage":false},{"functionName":"keyFromLoc","ranges":[{"startOffset":1080,"endOffset":1161,"count":0}],"isBlockCoverage":false},{"functionName":"isObj","ranges":[{"startOffset":1178,"endOffset":1211,"count":0}],"isBlockCoverage":false},{"functionName":"isLineCol","ranges":[{"startOffset":1231,"endOffset":1310,"count":0}],"isBlockCoverage":false},{"functionName":"isLoc","ranges":[{"startOffset":1326,"endOffset":1381,"count":0}],"isBlockCoverage":false},{"functionName":"getLoc","ranges":[{"startOffset":1398,"endOffset":1447,"count":0}],"isBlockCoverage":false},{"functionName":"findNearestContainer","ranges":[{"startOffset":1803,"endOffset":3815,"count":0}],"isBlockCoverage":false},{"functionName":"addHits","ranges":[{"startOffset":3899,"endOffset":4166,"count":0}],"isBlockCoverage":false},{"functionName":"addNearestContainerHits","ranges":[{"startOffset":4201,"endOffset":4412,"count":0}],"isBlockCoverage":false},{"functionName":"mergeProp","ranges":[{"startOffset":4433,"endOffset":6032,"count":0}],"isBlockCoverage":false},{"functionName":"FileCoverage","ranges":[{"startOffset":6870,"endOffset":7502,"count":0}],"isBlockCoverage":false},{"functionName":"getLineCoverage","ranges":[{"startOffset":7652,"endOffset":8259,"count":0}],"isBlockCoverage":false},{"functionName":"getUncoveredLines","ranges":[{"startOffset":8428,"endOffset":8679,"count":0}],"isBlockCoverage":false},{"functionName":"getBranchCoverageByLine","ranges":[{"startOffset":8903,"endOffset":9661,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":9752,"endOffset":9794,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":10066,"endOffset":11443,"count":0}],"isBlockCoverage":false},{"functionName":"computeSimpleTotals","ranges":[{"startOffset":11449,"endOffset":11855,"count":0}],"isBlockCoverage":false},{"functionName":"computeBranchTotals","ranges":[{"startOffset":11861,"endOffset":12240,"count":0}],"isBlockCoverage":false},{"functionName":"resetHits","ranges":[{"startOffset":12389,"endOffset":13071,"count":0}],"isBlockCoverage":false},{"functionName":"toSummary","ranges":[{"startOffset":13190,"endOffset":13730,"count":0}],"isBlockCoverage":false}]},{"scriptId":"648","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/istanbul-lib-coverage@3.2.2/node_modules/istanbul-lib-coverage/lib/percent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":367,"count":1}],"isBlockCoverage":true},{"functionName":"percent","ranges":[{"startOffset":165,"endOffset":365,"count":0}],"isBlockCoverage":false}]},{"scriptId":"649","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/istanbul-lib-coverage@3.2.2/node_modules/istanbul-lib-coverage/lib/data-properties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":283,"count":1}],"isBlockCoverage":true},{"functionName":"dataProperties","ranges":[{"startOffset":32,"endOffset":281,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100,"endOffset":277,"count":14}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":201,"endOffset":259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"650","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/istanbul-lib-coverage@3.2.2/node_modules/istanbul-lib-coverage/lib/coverage-summary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2811,"count":1}],"isBlockCoverage":true},{"functionName":"blankSummary","ranges":[{"startOffset":240,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidSummary","ranges":[{"startOffset":613,"endOffset":917,"count":0}],"isBlockCoverage":false},{"functionName":"CoverageSummary","ranges":[{"startOffset":1413,"endOffset":1679,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":1832,"endOffset":2351,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2472,"endOffset":2514,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":2587,"endOffset":2643,"count":0}],"isBlockCoverage":false}]},{"scriptId":"651","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/istanbul-lib-coverage@3.2.2/node_modules/istanbul-lib-coverage/lib/coverage-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3478,"count":1}],"isBlockCoverage":true},{"functionName":"maybeConstruct","ranges":[{"startOffset":261,"endOffset":386,"count":0}],"isBlockCoverage":false},{"functionName":"loadMap","ranges":[{"startOffset":388,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"CoverageMap","ranges":[{"startOffset":923,"endOffset":1088,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":1346,"endOffset":1520,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":1761,"endOffset":1926,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2035,"endOffset":2077,"count":0}],"isBlockCoverage":false},{"functionName":"files","ranges":[{"startOffset":2219,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"fileCoverageFor","ranges":[{"startOffset":2411,"endOffset":2596,"count":0}],"isBlockCoverage":false},{"functionName":"addFileCoverage","ranges":[{"startOffset":2873,"endOffset":3105,"count":0}],"isBlockCoverage":false},{"functionName":"getCoverageSummary","ranges":[{"startOffset":3244,"endOffset":3436,"count":0}],"isBlockCoverage":false}]},{"scriptId":"652","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/istanbul-lib-report@3.0.1/node_modules/istanbul-lib-report/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":986,"count":1}],"isBlockCoverage":true},{"functionName":"createContext","ranges":[{"startOffset":481,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultWatermarks","ranges":[{"startOffset":845,"endOffset":915,"count":0}],"isBlockCoverage":false}]},{"scriptId":"653","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/istanbul-lib-report@3.0.1/node_modules/istanbul-lib-report/lib/context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4021,"count":1}],"isBlockCoverage":true},{"functionName":"defaultSourceLookup","ranges":[{"startOffset":397,"endOffset":593,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeWatermarks","ranges":[{"startOffset":595,"endOffset":895,"count":0}],"isBlockCoverage":false},{"functionName":"Context","ranges":[{"startOffset":1419,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"getWriter","ranges":[{"startOffset":1950,"endOffset":1997,"count":0}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":2251,"endOffset":2322,"count":0}],"isBlockCoverage":false},{"functionName":"classForPercent","ranges":[{"startOffset":2656,"endOffset":2982,"count":0}],"isBlockCoverage":false},{"functionName":"getXMLWriter","ranges":[{"startOffset":3209,"endOffset":3289,"count":0}],"isBlockCoverage":false},{"functionName":"getVisitor","ranges":[{"startOffset":3582,"endOffset":3665,"count":0}],"isBlockCoverage":false},{"functionName":"getTree","ranges":[{"startOffset":3671,"endOffset":3760,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3843,"endOffset":3989,"count":0}],"isBlockCoverage":false}]},{"scriptId":"654","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/istanbul-lib-report@3.0.1/node_modules/istanbul-lib-report/lib/file-writer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4943,"count":1}],"isBlockCoverage":true},{"functionName":"colorize","ranges":[{"startOffset":801,"endOffset":854,"count":0}],"isBlockCoverage":false},{"functionName":"println","ranges":[{"startOffset":989,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1146,"endOffset":1156,"count":0}],"isBlockCoverage":false},{"functionName":"FileContentWriter","ranges":[{"startOffset":1348,"endOffset":1411,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":1417,"endOffset":1471,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1477,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":1753,"endOffset":1887,"count":0}],"isBlockCoverage":false},{"functionName":"colorize","ranges":[{"startOffset":1893,"endOffset":2250,"count":0}],"isBlockCoverage":false},{"functionName":"FileWriter","ranges":[{"startOffset":2460,"endOffset":2612,"count":0}],"isBlockCoverage":false},{"functionName":"startCapture","ranges":[{"startOffset":2730,"endOffset":2776,"count":0}],"isBlockCoverage":false},{"functionName":"stopCapture","ranges":[{"startOffset":2789,"endOffset":2835,"count":0}],"isBlockCoverage":false},{"functionName":"getOutput","ranges":[{"startOffset":2848,"endOffset":2890,"count":0}],"isBlockCoverage":false},{"functionName":"resetOutput","ranges":[{"startOffset":2903,"endOffset":2945,"count":0}],"isBlockCoverage":false},{"functionName":"writerForDir","ranges":[{"startOffset":3167,"endOffset":3423,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":3786,"endOffset":4258,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":4522,"endOffset":4910,"count":0}],"isBlockCoverage":false}]},{"scriptId":"655","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/make-dir@4.0.0/node_modules/make-dir/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3069,"count":1}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":340,"endOffset":641,"count":0}],"isBlockCoverage":false},{"functionName":"processOptions","ranges":[{"startOffset":667,"endOffset":768,"count":0}],"isBlockCoverage":false},{"functionName":"permissionError","ranges":[{"startOffset":795,"endOffset":1109,"count":0}],"isBlockCoverage":false},{"functionName":"makeDir","ranges":[{"startOffset":1128,"endOffset":2132,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":2184,"endOffset":3067,"count":0}],"isBlockCoverage":false}]},{"scriptId":"656","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/gte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":127,"count":1}],"isBlockCoverage":true},{"functionName":"gte","ranges":[{"startOffset":63,"endOffset":105,"count":2}],"isBlockCoverage":true}]},{"scriptId":"657","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":170,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":74,"endOffset":143,"count":3}],"isBlockCoverage":true}]},{"scriptId":"658","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/classes/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9297,"count":1}],"isBlockCoverage":true},{"functionName":"SemVer","ranges":[{"startOffset":325,"endOffset":2250,"count":11},{"startOffset":430,"endOffset":633,"count":4},{"startOffset":546,"endOffset":627,"count":2},{"startOffset":633,"endOffset":773,"count":7},{"startOffset":672,"endOffset":773,"count":0},{"startOffset":773,"endOffset":812,"count":9},{"startOffset":812,"endOffset":912,"count":0},{"startOffset":912,"endOffset":1251,"count":9},{"startOffset":1251,"endOffset":1264,"count":0},{"startOffset":1265,"endOffset":1277,"count":9},{"startOffset":1292,"endOffset":1356,"count":0},{"startOffset":1356,"endOffset":1541,"count":9},{"startOffset":1543,"endOffset":1601,"count":0},{"startOffset":1601,"endOffset":1658,"count":9},{"startOffset":1660,"endOffset":1718,"count":0},{"startOffset":1718,"endOffset":1775,"count":9},{"startOffset":1777,"endOffset":1835,"count":0},{"startOffset":1835,"endOffset":1896,"count":9},{"startOffset":1896,"endOffset":1930,"count":6},{"startOffset":1930,"endOffset":2182,"count":3},{"startOffset":2182,"endOffset":2206,"count":9},{"startOffset":2206,"endOffset":2223,"count":0},{"startOffset":2224,"endOffset":2228,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1982,"endOffset":2175,"count":3},{"startOffset":2149,"endOffset":2174,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":2254,"endOffset":2450,"count":9},{"startOffset":2361,"endOffset":2422,"count":3}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":2454,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2499,"endOffset":2889,"count":3},{"startOffset":2616,"endOffset":2759,"count":0},{"startOffset":2801,"endOffset":2823,"count":0},{"startOffset":2860,"endOffset":2885,"count":0}],"isBlockCoverage":true},{"functionName":"compareMain","ranges":[{"startOffset":2893,"endOffset":3184,"count":3},{"startOffset":2951,"endOffset":3004,"count":0},{"startOffset":3069,"endOffset":3121,"count":1},{"startOffset":3122,"endOffset":3174,"count":0}],"isBlockCoverage":true},{"functionName":"comparePre","ranges":[{"startOffset":3188,"endOffset":4039,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":4043,"endOffset":4580,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":4733,"endOffset":9269,"count":0}],"isBlockCoverage":false}]},{"scriptId":"659","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/internal/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":240,"count":1},{"startOffset":105,"endOffset":152,"count":0},{"startOffset":155,"endOffset":202,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":157,"endOffset":202,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":207,"endOffset":215,"count":87}],"isBlockCoverage":true}]},{"scriptId":"660","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":873,"count":1},{"startOffset":247,"endOffset":293,"count":0}],"isBlockCoverage":true}]},{"scriptId":"661","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/internal/re.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8141,"count":1}],"isBlockCoverage":true},{"functionName":"makeSafeRegex","ranges":[{"startOffset":1001,"endOffset":1212,"count":43},{"startOffset":1066,"endOffset":1195,"count":129}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":1234,"endOffset":1534,"count":43},{"startOffset":1451,"endOffset":1456,"count":5},{"startOffset":1457,"endOffset":1468,"count":38},{"startOffset":1514,"endOffset":1519,"count":5},{"startOffset":1520,"endOffset":1531,"count":38}],"isBlockCoverage":true}]},{"scriptId":"662","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/internal/parse-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":338,"count":1}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":167,"endOffset":307,"count":16},{"startOffset":196,"endOffset":259,"count":8},{"startOffset":259,"endOffset":287,"count":0},{"startOffset":287,"endOffset":306,"count":8}],"isBlockCoverage":true}]},{"scriptId":"663","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/internal/identifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":424,"count":1}],"isBlockCoverage":true},{"functionName":"compareIdentifiers","ranges":[{"startOffset":68,"endOffset":292,"count":4},{"startOffset":209,"endOffset":212,"count":1},{"startOffset":217,"endOffset":290,"count":3},{"startOffset":235,"endOffset":239,"count":0},{"startOffset":262,"endOffset":265,"count":0},{"startOffset":278,"endOffset":282,"count":1},{"startOffset":287,"endOffset":290,"count":2}],"isBlockCoverage":true},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":322,"endOffset":356,"count":0}],"isBlockCoverage":false}]},{"scriptId":"664","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/supports-color@7.2.0/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2748,"count":1},{"startOffset":250,"endOffset":270,"count":0},{"startOffset":374,"endOffset":394,"count":0},{"startOffset":422,"endOffset":646,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":648,"endOffset":806,"count":2},{"startOffset":699,"endOffset":719,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":808,"endOffset":2439,"count":2},{"startOffset":881,"endOffset":897,"count":0},{"startOffset":985,"endOffset":1001,"count":0},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1080,"endOffset":1107,"count":0},{"startOffset":1109,"endOffset":1125,"count":0},{"startOffset":1184,"endOffset":1202,"count":0},{"startOffset":1239,"endOffset":1594,"count":0},{"startOffset":1614,"endOffset":1794,"count":0},{"startOffset":1828,"endOffset":1909,"count":0},{"startOffset":1963,"endOffset":2438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1706,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2441,"endOffset":2570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"665","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/has-flag@4.0.0/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":32},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"666","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/istanbul-lib-report@3.0.1/node_modules/istanbul-lib-report/lib/xml-writer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2415,"count":1}],"isBlockCoverage":true},{"functionName":"attrString","ranges":[{"startOffset":169,"endOffset":298,"count":0}],"isBlockCoverage":false},{"functionName":"XMLWriter","ranges":[{"startOffset":485,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":583,"endOffset":662,"count":0}],"isBlockCoverage":false},{"functionName":"openTag","ranges":[{"startOffset":849,"endOffset":1004,"count":0}],"isBlockCoverage":false},{"functionName":"closeTag","ranges":[{"startOffset":1185,"endOffset":1619,"count":0}],"isBlockCoverage":false},{"functionName":"inlineTag","ranges":[{"startOffset":1876,"endOffset":2146,"count":0}],"isBlockCoverage":false},{"functionName":"closeAll","ranges":[{"startOffset":2218,"endOffset":2383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"667","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/istanbul-lib-report@3.0.1/node_modules/istanbul-lib-report/lib/tree.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3809,"count":1}],"isBlockCoverage":true},{"functionName":"Visitor","ranges":[{"startOffset":1077,"endOffset":1140,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1205,"endOffset":1218,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1233,"endOffset":1521,"count":5}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":1336,"endOffset":1503,"count":0}],"isBlockCoverage":false},{"functionName":"CompositeVisitor","ranges":[{"startOffset":1570,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1938,"endOffset":1951,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1966,"endOffset":2207,"count":5}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":2050,"endOffset":2189,"count":0}],"isBlockCoverage":false},{"functionName":"isRoot","ranges":[{"startOffset":2232,"endOffset":2282,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":2619,"endOffset":2984,"count":0}],"isBlockCoverage":false},{"functionName":"BaseTree","ranges":[{"startOffset":3077,"endOffset":3128,"count":0}],"isBlockCoverage":false},{"functionName":"getRoot","ranges":[{"startOffset":3191,"endOffset":3234,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":3453,"endOffset":3721,"count":0}],"isBlockCoverage":false}]},{"scriptId":"668","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/istanbul-lib-report@3.0.1/node_modules/istanbul-lib-report/lib/watermarks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":349,"count":1}],"isBlockCoverage":true},{"functionName":"getDefault","ranges":[{"startOffset":170,"endOffset":345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"669","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/istanbul-lib-report@3.0.1/node_modules/istanbul-lib-report/lib/summarizer-factory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7356,"count":1}],"isBlockCoverage":true},{"functionName":"ReportNode","ranges":[{"startOffset":322,"endOffset":503,"count":0}],"isBlockCoverage":false},{"functionName":"createRoot","ranges":[{"startOffset":516,"endOffset":700,"count":0}],"isBlockCoverage":false},{"functionName":"addChild","ranges":[{"startOffset":706,"endOffset":793,"count":0}],"isBlockCoverage":false},{"functionName":"asRelative","ranges":[{"startOffset":799,"endOffset":924,"count":0}],"isBlockCoverage":false},{"functionName":"getQualifiedName","ranges":[{"startOffset":930,"endOffset":1010,"count":0}],"isBlockCoverage":false},{"functionName":"getRelativeName","ranges":[{"startOffset":1016,"endOffset":1536,"count":0}],"isBlockCoverage":false},{"functionName":"getParent","ranges":[{"startOffset":1542,"endOffset":1589,"count":0}],"isBlockCoverage":false},{"functionName":"getChildren","ranges":[{"startOffset":1595,"endOffset":1646,"count":0}],"isBlockCoverage":false},{"functionName":"isSummary","ranges":[{"startOffset":1652,"endOffset":1706,"count":0}],"isBlockCoverage":false},{"functionName":"getFileCoverage","ranges":[{"startOffset":1712,"endOffset":1771,"count":0}],"isBlockCoverage":false},{"functionName":"getCoverageSummary","ranges":[{"startOffset":1777,"endOffset":2627,"count":0}],"isBlockCoverage":false},{"functionName":"ReportTree","ranges":[{"startOffset":2671,"endOffset":3399,"count":0}],"isBlockCoverage":false},{"functionName":"findCommonParent","ranges":[{"startOffset":3403,"endOffset":3561,"count":0}],"isBlockCoverage":false},{"functionName":"findOrCreateParent","ranges":[{"startOffset":3563,"endOffset":3861,"count":0}],"isBlockCoverage":false},{"functionName":"toDirParents","ranges":[{"startOffset":3863,"endOffset":4137,"count":0}],"isBlockCoverage":false},{"functionName":"addAllPaths","ranges":[{"startOffset":4139,"endOffset":4536,"count":0}],"isBlockCoverage":false},{"functionName":"foldIntoOneDir","ranges":[{"startOffset":4538,"endOffset":4856,"count":0}],"isBlockCoverage":false},{"functionName":"pkgSummaryPrefix","ranges":[{"startOffset":4858,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"SummarizerFactory","ranges":[{"startOffset":5123,"endOffset":5771,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultSummarizer","ranges":[{"startOffset":5777,"endOffset":5854,"count":0}],"isBlockCoverage":false},{"functionName":"get flat","ranges":[{"startOffset":5860,"endOffset":6198,"count":0}],"isBlockCoverage":false},{"functionName":"_createPkg","ranges":[{"startOffset":6204,"endOffset":6534,"count":0}],"isBlockCoverage":false},{"functionName":"get pkg","ranges":[{"startOffset":6540,"endOffset":6663,"count":0}],"isBlockCoverage":false},{"functionName":"_createNested","ranges":[{"startOffset":6669,"endOffset":7172,"count":0}],"isBlockCoverage":false},{"functionName":"get nested","ranges":[{"startOffset":7178,"endOffset":7316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"670","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/istanbul-lib-report@3.0.1/node_modules/istanbul-lib-report/lib/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3709,"count":1}],"isBlockCoverage":true},{"functionName":"makeRelativeNormalizedPath","ranges":[{"startOffset":278,"endOffset":1160,"count":0}],"isBlockCoverage":false},{"functionName":"Path","ranges":[{"startOffset":1179,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1558,"endOffset":1609,"count":0}],"isBlockCoverage":false},{"functionName":"hasParent","ranges":[{"startOffset":1615,"endOffset":1668,"count":0}],"isBlockCoverage":false},{"functionName":"parent","ranges":[{"startOffset":1674,"endOffset":1881,"count":0}],"isBlockCoverage":false},{"functionName":"elements","ranges":[{"startOffset":1887,"endOffset":1936,"count":0}],"isBlockCoverage":false},{"functionName":"name","ranges":[{"startOffset":1942,"endOffset":1992,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":1998,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"ancestorOf","ranges":[{"startOffset":2287,"endOffset":2381,"count":0}],"isBlockCoverage":false},{"functionName":"descendantOf","ranges":[{"startOffset":2387,"endOffset":2483,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefixPath","ranges":[{"startOffset":2489,"endOffset":2855,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2868,"endOffset":3186,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3244,"endOffset":3384,"count":5}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":3308,"endOffset":3374,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3464,"endOffset":3507,"count":0}],"isBlockCoverage":false},{"functionName":"setParserAndSep","ranges":[{"startOffset":3556,"endOffset":3629,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":3635,"endOffset":3705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"671","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/istanbul-lib-report@3.0.1/node_modules/istanbul-lib-report/lib/report-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":362,"count":1}],"isBlockCoverage":true},{"functionName":"ReportBase","ranges":[{"startOffset":159,"endOffset":234,"count":0}],"isBlockCoverage":false},{"functionName":"execute","ranges":[{"startOffset":240,"endOffset":329,"count":0}],"isBlockCoverage":false}]},{"scriptId":"672","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/istanbul-reports@3.1.7/node_modules/istanbul-reports/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":536,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":201,"endOffset":532,"count":0}],"isBlockCoverage":false}]},{"scriptId":"673","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/c8@9.1.0/node_modules/c8/lib/source-map-from-file.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3510,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapFromFile","ranges":[{"startOffset":1716,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"dataFromUrl","ranges":[{"startOffset":2164,"endOffset":2620,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":2622,"endOffset":2820,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":2914,"endOffset":3470,"count":0}],"isBlockCoverage":false}]},{"scriptId":"674","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/v8-to-istanbul@9.3.0/node_modules/v8-to-istanbul/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":197,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":71,"endOffset":196,"count":0}],"isBlockCoverage":false}]},{"scriptId":"675","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/v8-to-istanbul@9.3.0/node_modules/v8-to-istanbul/lib/v8-to-istanbul.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12904,"count":1},{"startOffset":642,"endOffset":713,"count":0},{"startOffset":1059,"endOffset":1096,"count":0}],"isBlockCoverage":true},{"functionName":"readFile","ranges":[{"startOffset":561,"endOffset":588,"count":0}],"isBlockCoverage":false},{"functionName":"V8ToIstanbul","ranges":[{"startOffset":1142,"endOffset":1911,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":1915,"endOffset":4837,"count":0}],"isBlockCoverage":false},{"functionName":"_readFileFromDir","ranges":[{"startOffset":4841,"endOffset":4946,"count":0}],"isBlockCoverage":false},{"functionName":"sourcesContentFromSources","ranges":[{"startOffset":4950,"endOffset":5351,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":5355,"endOffset":5442,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveSource","ranges":[{"startOffset":5446,"endOffset":5955,"count":0}],"isBlockCoverage":false},{"functionName":"applyCoverage","ranges":[{"startOffset":5959,"endOffset":8982,"count":0}],"isBlockCoverage":false},{"functionName":"_maybeRemapStartColEndCol","ranges":[{"startOffset":8986,"endOffset":10469,"count":0}],"isBlockCoverage":false},{"functionName":"getInnerIstanbul","ranges":[{"startOffset":10473,"endOffset":11364,"count":0}],"isBlockCoverage":false},{"functionName":"toIstanbul","ranges":[{"startOffset":11368,"endOffset":11529,"count":0}],"isBlockCoverage":false},{"functionName":"_statementsToIstanbul","ranges":[{"startOffset":11533,"endOffset":11839,"count":0}],"isBlockCoverage":false},{"functionName":"_branchesToIstanbul","ranges":[{"startOffset":11843,"endOffset":12319,"count":0}],"isBlockCoverage":false},{"functionName":"_functionsToIstanbul","ranges":[{"startOffset":12323,"endOffset":12781,"count":0}],"isBlockCoverage":false},{"functionName":"parsePath","ranges":[{"startOffset":12785,"endOffset":12903,"count":0}],"isBlockCoverage":false}]},{"scriptId":"676","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/convert-source-map@2.0.0/node_modules/convert-source-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6551,"count":1},{"startOffset":792,"endOffset":849,"count":0},{"startOffset":851,"endOffset":899,"count":0},{"startOffset":2494,"endOffset":2567,"count":0},{"startOffset":2569,"endOffset":2633,"count":0}],"isBlockCoverage":true},{"functionName":"getCommentRegex","ranges":[{"startOffset":71,"endOffset":318,"count":0}],"isBlockCoverage":false},{"functionName":"getMapFileCommentRegex","ranges":[{"startOffset":388,"endOffset":638,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64WithBufferFrom","ranges":[{"startOffset":901,"endOffset":999,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64WithNewBuffer","ranges":[{"startOffset":1001,"endOffset":1212,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64WithAtob","ranges":[{"startOffset":1214,"endOffset":1306,"count":0}],"isBlockCoverage":false},{"functionName":"stripComment","ranges":[{"startOffset":1308,"endOffset":1367,"count":0}],"isBlockCoverage":false},{"functionName":"readFromFileMap","ranges":[{"startOffset":1369,"endOffset":1894,"count":0}],"isBlockCoverage":false},{"functionName":"Converter","ranges":[{"startOffset":1896,"endOffset":2240,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toJSON","ranges":[{"startOffset":2271,"endOffset":2345,"count":0}],"isBlockCoverage":false},{"functionName":"encodeBase64WithBufferFrom","ranges":[{"startOffset":2635,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"encodeBase64WithNewBuffer","ranges":[{"startOffset":2761,"endOffset":2996,"count":0}],"isBlockCoverage":false},{"functionName":"encodeBase64WithBtoa","ranges":[{"startOffset":2998,"endOffset":3112,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toURI","ranges":[{"startOffset":3142,"endOffset":3220,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toComment","ranges":[{"startOffset":3255,"endOffset":3661,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toObject","ranges":[{"startOffset":3731,"endOffset":3782,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.addProperty","ranges":[{"startOffset":3819,"endOffset":4026,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.setProperty","ranges":[{"startOffset":4063,"endOffset":4134,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.getProperty","ranges":[{"startOffset":4171,"endOffset":4219,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromObject","ranges":[{"startOffset":4243,"endOffset":4290,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromJSON","ranges":[{"startOffset":4312,"endOffset":4379,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromURI","ranges":[{"startOffset":4400,"endOffset":4468,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromBase64","ranges":[{"startOffset":4492,"endOffset":4569,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromComment","ranges":[{"startOffset":4594,"endOffset":4862,"count":0}],"isBlockCoverage":false},{"functionName":"makeConverter","ranges":[{"startOffset":4865,"endOffset":4941,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromMapFileComment","ranges":[{"startOffset":4972,"endOffset":5437,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromSource","ranges":[{"startOffset":5535,"endOffset":5654,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromMapFileSource","ranges":[{"startOffset":5759,"endOffset":6163,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeComments","ranges":[{"startOffset":6191,"endOffset":6257,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeMapFileComments","ranges":[{"startOffset":6292,"endOffset":6365,"count":0}],"isBlockCoverage":false},{"functionName":"exports.generateMapFileComment","ranges":[{"startOffset":6401,"endOffset":6549,"count":0}],"isBlockCoverage":false}]},{"scriptId":"677","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/v8-to-istanbul@9.3.0/node_modules/v8-to-istanbul/lib/branch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":588,"count":1}],"isBlockCoverage":true},{"functionName":"CovBranch","ranges":[{"startOffset":37,"endOffset":235,"count":0}],"isBlockCoverage":false},{"functionName":"toIstanbul","ranges":[{"startOffset":239,"endOffset":585,"count":0}],"isBlockCoverage":false}]},{"scriptId":"678","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/v8-to-istanbul@9.3.0/node_modules/v8-to-istanbul/lib/function.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":572,"count":1}],"isBlockCoverage":true},{"functionName":"CovFunction","ranges":[{"startOffset":39,"endOffset":264,"count":0}],"isBlockCoverage":false},{"functionName":"toIstanbul","ranges":[{"startOffset":268,"endOffset":569,"count":0}],"isBlockCoverage":false}]},{"scriptId":"679","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/v8-to-istanbul@9.3.0/node_modules/v8-to-istanbul/lib/source.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8455,"count":1}],"isBlockCoverage":true},{"functionName":"CovSource","ranges":[{"startOffset":246,"endOffset":540,"count":0}],"isBlockCoverage":false},{"functionName":"_buildLines","ranges":[{"startOffset":544,"endOffset":1307,"count":0}],"isBlockCoverage":false},{"functionName":"_parseIgnore","ranges":[{"startOffset":1602,"endOffset":2755,"count":0}],"isBlockCoverage":false},{"functionName":"offsetToOriginalRelative","ranges":[{"startOffset":2901,"endOffset":3962,"count":0}],"isBlockCoverage":false},{"functionName":"relativeToOffset","ranges":[{"startOffset":3966,"endOffset":4181,"count":0}],"isBlockCoverage":false},{"functionName":"originalEndPositionFor","ranges":[{"startOffset":5195,"endOffset":7020,"count":0}],"isBlockCoverage":false},{"functionName":"originalPositionTryBoth","ranges":[{"startOffset":7022,"endOffset":7999,"count":0}],"isBlockCoverage":false},{"functionName":"getShebangLength","ranges":[{"startOffset":8135,"endOffset":8454,"count":0}],"isBlockCoverage":false}]},{"scriptId":"680","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/v8-to-istanbul@9.3.0/node_modules/v8-to-istanbul/lib/line.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1020,"count":1}],"isBlockCoverage":true},{"functionName":"CovLine","ranges":[{"startOffset":35,"endOffset":818,"count":0}],"isBlockCoverage":false},{"functionName":"toIstanbul","ranges":[{"startOffset":822,"endOffset":1017,"count":0}],"isBlockCoverage":false}]},{"scriptId":"681","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/v8-to-istanbul@9.3.0/node_modules/v8-to-istanbul/lib/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":953,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.sliceRange","ranges":[{"startOffset":198,"endOffset":952,"count":0}],"isBlockCoverage":false}]},{"scriptId":"682","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.29/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18697,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":562,"count":1},{"startOffset":192,"endOffset":559,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":571,"endOffset":18647,"count":1}],"isBlockCoverage":true},{"functionName":"__commonJS","ranges":[{"startOffset":937,"endOffset":1076,"count":2}],"isBlockCoverage":true},{"functionName":"__require","ranges":[{"startOffset":950,"endOffset":1076,"count":2}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":1093,"endOffset":1204,"count":1},{"startOffset":1140,"endOffset":1202,"count":17}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":1224,"endOffset":1570,"count":3},{"startOffset":1293,"endOffset":1322,"count":1},{"startOffset":1377,"endOffset":1551,"count":27}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1462,"endOffset":1477,"count":5}],"isBlockCoverage":true},{"functionName":"__toESM","ranges":[{"startOffset":1586,"endOffset":2095,"count":2},{"startOffset":1667,"endOffset":1671,"count":0},{"startOffset":2012,"endOffset":2076,"count":1},{"startOffset":2077,"endOffset":2085,"count":1}],"isBlockCoverage":true},{"functionName":"__toCommonJS","ranges":[{"startOffset":2116,"endOffset":2187,"count":1}],"isBlockCoverage":true},{"functionName":"umd:@jridgewell/sourcemap-codec","ranges":[{"startOffset":2270,"endOffset":2373,"count":1}],"isBlockCoverage":true},{"functionName":"umd:@jridgewell/resolve-uri","ranges":[{"startOffset":2451,"endOffset":2546,"count":1}],"isBlockCoverage":true},{"functionName":"AnyMap","ranges":[{"startOffset":2652,"endOffset":2668,"count":0}],"isBlockCoverage":false},{"functionName":"FlattenMap","ranges":[{"startOffset":2684,"endOffset":2700,"count":0}],"isBlockCoverage":false},{"functionName":"GREATEST_LOWER_BOUND","ranges":[{"startOffset":2726,"endOffset":2752,"count":1}],"isBlockCoverage":true},{"functionName":"LEAST_UPPER_BOUND","ranges":[{"startOffset":2775,"endOffset":2798,"count":1}],"isBlockCoverage":true},{"functionName":"TraceMap","ranges":[{"startOffset":2812,"endOffset":2826,"count":1}],"isBlockCoverage":true},{"functionName":"allGeneratedPositionsFor","ranges":[{"startOffset":2856,"endOffset":2886,"count":0}],"isBlockCoverage":false},{"functionName":"decodedMap","ranges":[{"startOffset":2902,"endOffset":2918,"count":0}],"isBlockCoverage":false},{"functionName":"decodedMappings","ranges":[{"startOffset":2939,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"eachMapping","ranges":[{"startOffset":2977,"endOffset":2994,"count":0}],"isBlockCoverage":false},{"functionName":"encodedMap","ranges":[{"startOffset":3010,"endOffset":3026,"count":0}],"isBlockCoverage":false},{"functionName":"encodedMappings","ranges":[{"startOffset":3047,"endOffset":3068,"count":0}],"isBlockCoverage":false},{"functionName":"generatedPositionFor","ranges":[{"startOffset":3094,"endOffset":3120,"count":1}],"isBlockCoverage":true},{"functionName":"isIgnored","ranges":[{"startOffset":3135,"endOffset":3150,"count":0}],"isBlockCoverage":false},{"functionName":"originalPositionFor","ranges":[{"startOffset":3175,"endOffset":3200,"count":1}],"isBlockCoverage":true},{"functionName":"presortedDecodedMap","ranges":[{"startOffset":3225,"endOffset":3250,"count":0}],"isBlockCoverage":false},{"functionName":"sourceContentFor","ranges":[{"startOffset":3272,"endOffset":3294,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegment","ranges":[{"startOffset":3312,"endOffset":3330,"count":0}],"isBlockCoverage":false},{"functionName":"stripFilename","ranges":[{"startOffset":3556,"endOffset":3686,"count":0}],"isBlockCoverage":false},{"functionName":"resolver","ranges":[{"startOffset":3706,"endOffset":3923,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSort","ranges":[{"startOffset":4131,"endOffset":4507,"count":0}],"isBlockCoverage":false},{"functionName":"nextUnsortedSegmentLine","ranges":[{"startOffset":4508,"endOffset":4683,"count":0}],"isBlockCoverage":false},{"functionName":"isSorted","ranges":[{"startOffset":4684,"endOffset":4847,"count":0}],"isBlockCoverage":false},{"functionName":"sortSegments","ranges":[{"startOffset":4848,"endOffset":4957,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":4958,"endOffset":5023,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":5068,"endOffset":5420,"count":0}],"isBlockCoverage":false},{"functionName":"upperBound","ranges":[{"startOffset":5421,"endOffset":5598,"count":0}],"isBlockCoverage":false},{"functionName":"lowerBound","ranges":[{"startOffset":5599,"endOffset":5763,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedState","ranges":[{"startOffset":5764,"endOffset":5863,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedBinarySearch","ranges":[{"startOffset":5864,"endOffset":6437,"count":0}],"isBlockCoverage":false},{"functionName":"buildBySources","ranges":[{"startOffset":6459,"endOffset":7336,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":7337,"endOffset":7481,"count":0}],"isBlockCoverage":false},{"functionName":"buildNullArray","ranges":[{"startOffset":7482,"endOffset":7541,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":7559,"endOffset":7640,"count":0}],"isBlockCoverage":false},{"functionName":"FlattenMap","ranges":[{"startOffset":7681,"endOffset":8261,"count":0}],"isBlockCoverage":false},{"functionName":"recurse","ranges":[{"startOffset":8263,"endOffset":9126,"count":0}],"isBlockCoverage":false},{"functionName":"addSection","ranges":[{"startOffset":9127,"endOffset":10736,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":10737,"endOffset":10829,"count":0}],"isBlockCoverage":false},{"functionName":"getLine","ranges":[{"startOffset":10830,"endOffset":10940,"count":0}],"isBlockCoverage":false},{"functionName":"TraceMap","ranges":[{"startOffset":11223,"endOffset":12418,"count":0}],"isBlockCoverage":false},{"functionName":"cast","ranges":[{"startOffset":12422,"endOffset":12458,"count":0}],"isBlockCoverage":false},{"functionName":"encodedMappings","ranges":[{"startOffset":12459,"endOffset":12633,"count":0}],"isBlockCoverage":false},{"functionName":"decodedMappings","ranges":[{"startOffset":12634,"endOffset":12787,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegment","ranges":[{"startOffset":12788,"endOffset":13129,"count":0}],"isBlockCoverage":false},{"functionName":"originalPositionFor","ranges":[{"startOffset":13130,"endOffset":14005,"count":0}],"isBlockCoverage":false},{"functionName":"generatedPositionFor","ranges":[{"startOffset":14006,"endOffset":14193,"count":0}],"isBlockCoverage":false},{"functionName":"allGeneratedPositionsFor","ranges":[{"startOffset":14194,"endOffset":14381,"count":0}],"isBlockCoverage":false},{"functionName":"eachMapping","ranges":[{"startOffset":14382,"endOffset":15179,"count":0}],"isBlockCoverage":false},{"functionName":"sourceIndex","ranges":[{"startOffset":15180,"endOffset":15377,"count":0}],"isBlockCoverage":false},{"functionName":"sourceContentFor","ranges":[{"startOffset":15378,"endOffset":15593,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":15594,"endOffset":15801,"count":0}],"isBlockCoverage":false},{"functionName":"presortedDecodedMap","ranges":[{"startOffset":15802,"endOffset":15959,"count":0}],"isBlockCoverage":false},{"functionName":"decodedMap","ranges":[{"startOffset":15960,"endOffset":16031,"count":0}],"isBlockCoverage":false},{"functionName":"encodedMap","ranges":[{"startOffset":16032,"endOffset":16103,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":16104,"endOffset":16391,"count":0}],"isBlockCoverage":false},{"functionName":"OMapping","ranges":[{"startOffset":16392,"endOffset":16482,"count":0}],"isBlockCoverage":false},{"functionName":"GMapping","ranges":[{"startOffset":16483,"endOffset":16545,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegmentInternal","ranges":[{"startOffset":16546,"endOffset":16915,"count":0}],"isBlockCoverage":false},{"functionName":"sliceGeneratedPositions","ranges":[{"startOffset":16916,"endOffset":17561,"count":0}],"isBlockCoverage":false},{"functionName":"generatedPosition","ranges":[{"startOffset":17562,"endOffset":18645,"count":0}],"isBlockCoverage":false}]},{"scriptId":"683","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+resolve-uri@3.1.2/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9866,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":305,"count":1},{"startOffset":124,"endOffset":302,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":314,"endOffset":9818,"count":1}],"isBlockCoverage":true},{"functionName":"isAbsoluteUrl","ranges":[{"startOffset":1351,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"isSchemeRelativeUrl","ranges":[{"startOffset":1433,"endOffset":1515,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolutePath","ranges":[{"startOffset":1520,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"isFileUrl","ranges":[{"startOffset":1601,"endOffset":1676,"count":0}],"isBlockCoverage":false},{"functionName":"isRelative","ranges":[{"startOffset":1681,"endOffset":1752,"count":0}],"isBlockCoverage":false},{"functionName":"parseAbsoluteUrl","ranges":[{"startOffset":1757,"endOffset":1966,"count":0}],"isBlockCoverage":false},{"functionName":"parseFileUrl","ranges":[{"startOffset":1971,"endOffset":2214,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":2219,"endOffset":2481,"count":0}],"isBlockCoverage":false},{"functionName":"parseUrl","ranges":[{"startOffset":2486,"endOffset":3490,"count":0}],"isBlockCoverage":false},{"functionName":"stripPathFilename","ranges":[{"startOffset":3495,"endOffset":3838,"count":0}],"isBlockCoverage":false},{"functionName":"mergePaths","ranges":[{"startOffset":3843,"endOffset":4297,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath","ranges":[{"startOffset":4482,"endOffset":7090,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":7175,"endOffset":9794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"684","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+sourcemap-codec@1.5.4/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14381,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":388,"count":1},{"startOffset":116,"endOffset":385,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":397,"endOffset":14329,"count":1},{"startOffset":1905,"endOffset":1981,"count":64},{"startOffset":2895,"endOffset":3203,"count":0}],"isBlockCoverage":true},{"functionName":"__export","ranges":[{"startOffset":645,"endOffset":756,"count":1},{"startOffset":692,"endOffset":754,"count":6}],"isBlockCoverage":true},{"functionName":"__copyProps","ranges":[{"startOffset":776,"endOffset":1122,"count":1},{"startOffset":845,"endOffset":874,"count":0},{"startOffset":929,"endOffset":1103,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1014,"endOffset":1029,"count":0}],"isBlockCoverage":false},{"functionName":"__toCommonJS","ranges":[{"startOffset":1143,"endOffset":1214,"count":1}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":1323,"endOffset":1335,"count":0}],"isBlockCoverage":false},{"functionName":"decodeGeneratedRanges","ranges":[{"startOffset":1362,"endOffset":1389,"count":0}],"isBlockCoverage":false},{"functionName":"decodeOriginalScopes","ranges":[{"startOffset":1415,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":1453,"endOffset":1465,"count":0}],"isBlockCoverage":false},{"functionName":"encodeGeneratedRanges","ranges":[{"startOffset":1492,"endOffset":1519,"count":0}],"isBlockCoverage":false},{"functionName":"encodeOriginalScopes","ranges":[{"startOffset":1545,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"decodeInteger","ranges":[{"startOffset":1982,"endOffset":2360,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInteger","ranges":[{"startOffset":2361,"endOffset":2658,"count":0}],"isBlockCoverage":false},{"functionName":"hasMoreVlq","ranges":[{"startOffset":2659,"endOffset":2768,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":2933,"endOffset":3050,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":3059,"endOffset":3201,"count":0}],"isBlockCoverage":false},{"functionName":"StringWriter","ranges":[{"startOffset":3234,"endOffset":3335,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":3338,"endOffset":3506,"count":0}],"isBlockCoverage":false},{"functionName":"flush","ranges":[{"startOffset":3509,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"StringReader","ranges":[{"startOffset":3663,"endOffset":3732,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":3735,"endOffset":3794,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":3797,"endOffset":3854,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":3857,"endOffset":3998,"count":0}],"isBlockCoverage":false},{"functionName":"decodeOriginalScopes","ranges":[{"startOffset":4036,"endOffset":5015,"count":0}],"isBlockCoverage":false},{"functionName":"encodeOriginalScopes","ranges":[{"startOffset":5016,"endOffset":5219,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeOriginalScopes","ranges":[{"startOffset":5220,"endOffset":6169,"count":0}],"isBlockCoverage":false},{"functionName":"decodeGeneratedRanges","ranges":[{"startOffset":6170,"endOffset":9274,"count":0}],"isBlockCoverage":false},{"functionName":"encodeGeneratedRanges","ranges":[{"startOffset":9275,"endOffset":9536,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeGeneratedRanges","ranges":[{"startOffset":9537,"endOffset":11913,"count":0}],"isBlockCoverage":false},{"functionName":"catchupLine","ranges":[{"startOffset":11914,"endOffset":12029,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":12057,"endOffset":13318,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":13319,"endOffset":13371,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":13372,"endOffset":13427,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":13428,"endOffset":14327,"count":0}],"isBlockCoverage":false}]},{"scriptId":"685","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/brace-expansion@2.0.2/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4997,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":298,"endOffset":406,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":408,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":647,"endOffset":876,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1040,"endOffset":1506,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1508,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2087,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2139,"endOffset":2192,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2194,"endOffset":2233,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2234,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2275,"endOffset":4995,"count":0}],"isBlockCoverage":false}]},{"scriptId":"686","url":"node:perf_hooks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1065,"count":1}],"isBlockCoverage":false}]},{"scriptId":"687","url":"node:internal/perf/resource_timing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4831,"count":1}],"isBlockCoverage":false},{"functionName":"InternalPerformanceResourceTiming","ranges":[{"startOffset":735,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1199,"endOffset":1270,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":1274,"endOffset":1322,"count":0}],"isBlockCoverage":false},{"functionName":"get startTime","ranges":[{"startOffset":1326,"endOffset":1387,"count":0}],"isBlockCoverage":false},{"functionName":"get duration","ranges":[{"startOffset":1391,"endOffset":1479,"count":0}],"isBlockCoverage":false},{"functionName":"get initiatorType","ranges":[{"startOffset":1483,"endOffset":1541,"count":0}],"isBlockCoverage":false},{"functionName":"get workerStart","ranges":[{"startOffset":1545,"endOffset":1626,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectStart","ranges":[{"startOffset":1630,"endOffset":1703,"count":0}],"isBlockCoverage":false},{"functionName":"get redirectEnd","ranges":[{"startOffset":1707,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"get fetchStart","ranges":[{"startOffset":1780,"endOffset":1854,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupStart","ranges":[{"startOffset":1858,"endOffset":1966,"count":0}],"isBlockCoverage":false},{"functionName":"get domainLookupEnd","ranges":[{"startOffset":1970,"endOffset":2074,"count":0}],"isBlockCoverage":false},{"functionName":"get connectStart","ranges":[{"startOffset":2078,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"get connectEnd","ranges":[{"startOffset":2183,"endOffset":2280,"count":0}],"isBlockCoverage":false},{"functionName":"get secureConnectionStart","ranges":[{"startOffset":2284,"endOffset":2407,"count":0}],"isBlockCoverage":false},{"functionName":"get nextHopProtocol","ranges":[{"startOffset":2411,"endOffset":2525,"count":0}],"isBlockCoverage":false},{"functionName":"get requestStart","ranges":[{"startOffset":2529,"endOffset":2612,"count":0}],"isBlockCoverage":false},{"functionName":"get responseStart","ranges":[{"startOffset":2616,"endOffset":2701,"count":0}],"isBlockCoverage":false},{"functionName":"get responseEnd","ranges":[{"startOffset":2705,"endOffset":2766,"count":0}],"isBlockCoverage":false},{"functionName":"get encodedBodySize","ranges":[{"startOffset":2770,"endOffset":2843,"count":0}],"isBlockCoverage":false},{"functionName":"get decodedBodySize","ranges":[{"startOffset":2847,"endOffset":2920,"count":0}],"isBlockCoverage":false},{"functionName":"get transferSize","ranges":[{"startOffset":2924,"endOffset":3103,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":3107,"endOffset":3970,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceResourceTiming","ranges":[{"startOffset":4052,"endOffset":4112,"count":0}],"isBlockCoverage":false},{"functionName":"markResourceTiming","ranges":[{"startOffset":4183,"endOffset":4756,"count":0}],"isBlockCoverage":false}]},{"scriptId":"688","url":"node:internal/perf/usertiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4934,"count":1}],"isBlockCoverage":false},{"functionName":"getMark","ranges":[{"startOffset":983,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMark","ranges":[{"startOffset":1496,"endOffset":2093,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2097,"endOffset":2158,"count":0}],"isBlockCoverage":false},{"functionName":"PerformanceMeasure","ranges":[{"startOffset":2224,"endOffset":2325,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2329,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":2397,"endOffset":2553,"count":0}],"isBlockCoverage":false},{"functionName":"calculateStartDuration","ranges":[{"startOffset":2555,"endOffset":4138,"count":0}],"isBlockCoverage":false},{"functionName":"measure","ranges":[{"startOffset":4140,"endOffset":4573,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarkTimings","ranges":[{"startOffset":4575,"endOffset":4830,"count":0}],"isBlockCoverage":false}]},{"scriptId":"689","url":"node:internal/perf/nodetiming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3516,"count":1}],"isBlockCoverage":false},{"functionName":"PerformanceNodeTiming","ranges":[{"startOffset":729,"endOffset":2742,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1394,"endOffset":1490,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1606,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1820,"endOffset":1917,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2035,"endOffset":2131,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2248,"endOffset":2343,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2469,"endOffset":2586,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2746,"endOffset":2987,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2991,"endOffset":3377,"count":0}],"isBlockCoverage":false}]},{"scriptId":"690","url":"node:internal/structured_clone","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":661,"count":1}],"isBlockCoverage":false},{"functionName":"structuredClone","ranges":[{"startOffset":186,"endOffset":618,"count":1},{"startOffset":271,"endOffset":317,"count":0},{"startOffset":550,"endOffset":560,"count":0}],"isBlockCoverage":true}]},{"scriptId":"691","url":"node:internal/worker/io","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15478,"count":1}],"isBlockCoverage":false},{"functionName":"MessagePort.hasRef","ranges":[{"startOffset":3683,"endOffset":3766,"count":0}],"isBlockCoverage":false},{"functionName":"validateMessagePort","ranges":[{"startOffset":3769,"endOffset":3907,"count":0}],"isBlockCoverage":false},{"functionName":"isMessageEvent","ranges":[{"startOffset":3909,"endOffset":3985,"count":0}],"isBlockCoverage":false},{"functionName":"MessageEvent","ranges":[{"startOffset":4024,"endOffset":4540,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4628,"endOffset":4752,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4862,"endOffset":4988,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5103,"endOffset":5234,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5344,"endOffset":5470,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5579,"endOffset":5704,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5946,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":6403,"endOffset":6546,"count":2}],"isBlockCoverage":true},{"functionName":"MessagePortCloseEvent","ranges":[{"startOffset":6848,"endOffset":6887,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":6960,"endOffset":7033,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePort.close","ranges":[{"startOffset":7214,"endOffset":7349,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":7482,"endOffset":8109,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":8116,"endOffset":9479,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8477,"endOffset":8572,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8611,"endOffset":8709,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8811,"endOffset":8956,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9067,"endOffset":9214,"count":0}],"isBlockCoverage":false},{"functionName":"newListener","ranges":[{"startOffset":9220,"endOffset":9361,"count":0}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":9365,"endOffset":9477,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":9529,"endOffset":9878,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":9882,"endOffset":10188,"count":0}],"isBlockCoverage":false},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":10239,"endOffset":10388,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":10392,"endOffset":10768,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":10772,"endOffset":10952,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10956,"endOffset":11203,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":11207,"endOffset":11477,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":11479,"endOffset":11659,"count":1},{"startOffset":11618,"endOffset":11635,"count":0}],"isBlockCoverage":true},{"functionName":"onMessageEvent","ranges":[{"startOffset":11661,"endOffset":11756,"count":0}],"isBlockCoverage":false},{"functionName":"isBroadcastChannel","ranges":[{"startOffset":11758,"endOffset":11844,"count":0}],"isBlockCoverage":false},{"functionName":"BroadcastChannel","ranges":[{"startOffset":11931,"endOffset":12445,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12449,"endOffset":12862,"count":0}],"isBlockCoverage":false},{"functionName":"get name","ranges":[{"startOffset":12898,"endOffset":13027,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":13064,"endOffset":13462,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":13530,"endOffset":13940,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":14223,"endOffset":14390,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":14675,"endOffset":14846,"count":0}],"isBlockCoverage":false}]},{"scriptId":"692","url":"node:internal/perf/performance","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5348,"count":1}],"isBlockCoverage":false},{"functionName":"Performance","ranges":[{"startOffset":1086,"endOffset":1146,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1150,"endOffset":1445,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":1449,"endOffset":1607,"count":0}],"isBlockCoverage":false},{"functionName":"clearMarks","ranges":[{"startOffset":1609,"endOffset":1758,"count":0}],"isBlockCoverage":false},{"functionName":"clearMeasures","ranges":[{"startOffset":1760,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"clearResourceTimings","ranges":[{"startOffset":1891,"endOffset":2028,"count":0}],"isBlockCoverage":false},{"functionName":"getEntries","ranges":[{"startOffset":2030,"endOffset":2096,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByName","ranges":[{"startOffset":2098,"endOffset":2285,"count":0}],"isBlockCoverage":false},{"functionName":"getEntriesByType","ranges":[{"startOffset":2287,"endOffset":2474,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4615,"endOffset":4810,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4816,"endOffset":4950,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchBufferFull","ranges":[{"startOffset":5113,"endOffset":5251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"693","url":"node:internal/perf/event_loop_utilization","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":876,"count":1}],"isBlockCoverage":false},{"functionName":"eventLoopUtilization","ranges":[{"startOffset":121,"endOffset":835,"count":0}],"isBlockCoverage":false}]},{"scriptId":"694","url":"node:internal/perf/timerify","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2280,"count":1}],"isBlockCoverage":false},{"functionName":"processComplete","ranges":[{"startOffset":608,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"timerify","ranges":[{"startOffset":987,"endOffset":2251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"695","url":"node:internal/histogram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8273,"count":1}],"isBlockCoverage":false},{"functionName":"isHistogram","ranges":[{"startOffset":913,"endOffset":987,"count":0}],"isBlockCoverage":false},{"functionName":"Histogram","ranges":[{"startOffset":1009,"endOffset":1069,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1073,"endOffset":1485,"count":0}],"isBlockCoverage":false},{"functionName":"get count","ranges":[{"startOffset":1536,"endOffset":1663,"count":0}],"isBlockCoverage":false},{"functionName":"get countBigInt","ranges":[{"startOffset":1714,"endOffset":1853,"count":0}],"isBlockCoverage":false},{"functionName":"get min","ranges":[{"startOffset":1904,"endOffset":2027,"count":0}],"isBlockCoverage":false},{"functionName":"get minBigInt","ranges":[{"startOffset":2078,"endOffset":2213,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":2264,"endOffset":2387,"count":0}],"isBlockCoverage":false},{"functionName":"get maxBigInt","ranges":[{"startOffset":2438,"endOffset":2573,"count":0}],"isBlockCoverage":false},{"functionName":"get mean","ranges":[{"startOffset":2624,"endOffset":2749,"count":0}],"isBlockCoverage":false},{"functionName":"get exceeds","ranges":[{"startOffset":2800,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"get exceedsBigInt","ranges":[{"startOffset":2982,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"get stddev","ranges":[{"startOffset":3176,"endOffset":3305,"count":0}],"isBlockCoverage":false},{"functionName":"percentile","ranges":[{"startOffset":3376,"endOffset":3725,"count":0}],"isBlockCoverage":false},{"functionName":"percentileBigInt","ranges":[{"startOffset":3796,"endOffset":4157,"count":0}],"isBlockCoverage":false},{"functionName":"get percentiles","ranges":[{"startOffset":4220,"endOffset":4409,"count":0}],"isBlockCoverage":false},{"functionName":"get percentilesBigInt","ranges":[{"startOffset":4472,"endOffset":4673,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":4710,"endOffset":4826,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4830,"endOffset":4987,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4991,"endOffset":5051,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":5055,"endOffset":5312,"count":0}],"isBlockCoverage":false},{"functionName":"RecordableHistogram","ranges":[{"startOffset":5364,"endOffset":5424,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":5493,"endOffset":5964,"count":0}],"isBlockCoverage":false},{"functionName":"recordDelta","ranges":[{"startOffset":6001,"endOffset":6152,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":6208,"endOffset":6481,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6485,"endOffset":6652,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6656,"endOffset":6716,"count":0}],"isBlockCoverage":false},{"functionName":"internalHistogram","ranges":[{"startOffset":6720,"endOffset":6907,"count":0}],"isBlockCoverage":false},{"functionName":"internalHistogram.<computed>","ranges":[{"startOffset":6952,"endOffset":6960,"count":0}],"isBlockCoverage":false},{"functionName":"internalRecordableHistogram","ranges":[{"startOffset":6963,"endOffset":7202,"count":0}],"isBlockCoverage":false},{"functionName":"internalRecordableHistogram.<computed>","ranges":[{"startOffset":7257,"endOffset":7265,"count":0}],"isBlockCoverage":false},{"functionName":"createHistogram","ranges":[{"startOffset":7409,"endOffset":8096,"count":0}],"isBlockCoverage":false}]},{"scriptId":"696","url":"node:internal/perf/event_loop_delay","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1724,"count":1}],"isBlockCoverage":false},{"functionName":"ELDHistogram","ranges":[{"startOffset":625,"endOffset":686,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":726,"endOffset":937,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":977,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"monitorEventLoopDelay","ranges":[{"startOffset":1283,"endOffset":1682,"count":0}],"isBlockCoverage":false}]},{"scriptId":"697","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/.vscode-test.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":424,"count":1}],"isBlockCoverage":true}]},{"scriptId":"698","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-cli@0.0.11/node_modules/@vscode/test-cli/out/index.mjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":211,"count":1}],"isBlockCoverage":true}]},{"scriptId":"699","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14,"count":1}],"isBlockCoverage":true}]},{"scriptId":"700","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35,"count":1}],"isBlockCoverage":true}]},{"scriptId":"701","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":1}],"isBlockCoverage":true}]},{"scriptId":"702","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12,"count":4}],"isBlockCoverage":true}]},{"scriptId":"703","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-cli@0.0.11/node_modules/@vscode/test-cli/out/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1235,"count":1},{"startOffset":589,"endOffset":670,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":270,"endOffset":587,"count":1},{"startOffset":414,"endOffset":429,"count":0},{"startOffset":446,"endOffset":466,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":509,"endOffset":536,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":592,"endOffset":669,"count":0}],"isBlockCoverage":true},{"functionName":"__exportStar","ranges":[{"startOffset":723,"endOffset":874,"count":2},{"startOffset":767,"endOffset":872,"count":1}],"isBlockCoverage":true},{"functionName":"defineConfig","ranges":[{"startOffset":1178,"endOffset":1196,"count":1}],"isBlockCoverage":true}]},{"scriptId":"704","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-cli@0.0.11/node_modules/@vscode/test-cli/out/config.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":259,"count":1}],"isBlockCoverage":true}]},{"scriptId":"705","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-cli@0.0.11/node_modules/@vscode/test-cli/out/fullJsonStreamReporterTypes.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":607,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":305,"endOffset":550,"count":1}],"isBlockCoverage":true}]},{"scriptId":"706","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":87,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":86,"count":44}],"isBlockCoverage":true}]},{"scriptId":"707","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":312,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":311,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":154,"endOffset":305,"count":1},{"startOffset":192,"endOffset":213,"count":0},{"startOffset":279,"endOffset":301,"count":0}],"isBlockCoverage":true}]},{"scriptId":"708","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":535,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":534,"count":1}],"isBlockCoverage":true},{"functionName":"_next0","ranges":[{"startOffset":105,"endOffset":330,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":380,"endOffset":528,"count":1},{"startOffset":418,"endOffset":439,"count":0},{"startOffset":505,"endOffset":524,"count":0}],"isBlockCoverage":true}]},{"scriptId":"709","url":"node:internal/fs/read_file_context","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2902,"count":1}],"isBlockCoverage":false},{"functionName":"readFileAfterRead","ranges":[{"startOffset":393,"endOffset":930,"count":2},{"startOffset":486,"endOffset":512,"count":0},{"startOffset":578,"endOffset":596,"count":0},{"startOffset":624,"endOffset":928,"count":0}],"isBlockCoverage":true},{"functionName":"readFileAfterClose","ranges":[{"startOffset":932,"endOffset":1527,"count":2},{"startOffset":1088,"endOffset":1142,"count":0},{"startOffset":1186,"endOffset":1239,"count":0},{"startOffset":1287,"endOffset":1333,"count":0},{"startOffset":1407,"endOffset":1450,"count":0},{"startOffset":1455,"endOffset":1498,"count":0}],"isBlockCoverage":true},{"functionName":"ReadFileContext","ranges":[{"startOffset":1555,"endOffset":1844,"count":5}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":1848,"endOffset":2523,"count":2},{"startOffset":1925,"endOffset":1934,"count":0},{"startOffset":1936,"endOffset":2036,"count":0},{"startOffset":2062,"endOffset":2229,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":2527,"endOffset":2864,"count":2},{"startOffset":2563,"endOffset":2711,"count":0}],"isBlockCoverage":true},{"functionName":"tick","ranges":[{"startOffset":2588,"endOffset":2683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"710","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":312,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":311,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":154,"endOffset":305,"count":25},{"startOffset":192,"endOffset":213,"count":0},{"startOffset":248,"endOffset":279,"count":9},{"startOffset":279,"endOffset":301,"count":16}],"isBlockCoverage":true}]},{"scriptId":"711","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":758,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":757,"count":1}],"isBlockCoverage":true},{"functionName":"_next1","ranges":[{"startOffset":105,"endOffset":330,"count":0}],"isBlockCoverage":false},{"functionName":"_next0","ranges":[{"startOffset":331,"endOffset":553,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":603,"endOffset":751,"count":1},{"startOffset":641,"endOffset":662,"count":0},{"startOffset":728,"endOffset":747,"count":0}],"isBlockCoverage":true}]},{"scriptId":"712","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":535,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":534,"count":13}],"isBlockCoverage":true},{"functionName":"_next0","ranges":[{"startOffset":105,"endOffset":330,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":174,"endOffset":325,"count":5},{"startOffset":212,"endOffset":233,"count":0},{"startOffset":299,"endOffset":321,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":380,"endOffset":528,"count":13},{"startOffset":418,"endOffset":439,"count":0},{"startOffset":474,"endOffset":505,"count":8},{"startOffset":505,"endOffset":524,"count":5}],"isBlockCoverage":true}]},{"scriptId":"713","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1204,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1203,"count":3}],"isBlockCoverage":true},{"functionName":"_next3","ranges":[{"startOffset":105,"endOffset":330,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":174,"endOffset":325,"count":2},{"startOffset":212,"endOffset":233,"count":0},{"startOffset":268,"endOffset":299,"count":0}],"isBlockCoverage":true},{"functionName":"_next2","ranges":[{"startOffset":331,"endOffset":553,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":400,"endOffset":548,"count":2},{"startOffset":438,"endOffset":459,"count":0},{"startOffset":494,"endOffset":525,"count":0}],"isBlockCoverage":true},{"functionName":"_next1","ranges":[{"startOffset":554,"endOffset":776,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":623,"endOffset":771,"count":2},{"startOffset":661,"endOffset":682,"count":0},{"startOffset":717,"endOffset":748,"count":0}],"isBlockCoverage":true},{"functionName":"_next0","ranges":[{"startOffset":777,"endOffset":999,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":846,"endOffset":994,"count":3},{"startOffset":884,"endOffset":905,"count":0},{"startOffset":940,"endOffset":971,"count":1},{"startOffset":971,"endOffset":990,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1049,"endOffset":1197,"count":3},{"startOffset":1087,"endOffset":1108,"count":0},{"startOffset":1143,"endOffset":1174,"count":0}],"isBlockCoverage":true}]},{"scriptId":"714","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":119,"count":1}],"isBlockCoverage":true}]},{"scriptId":"715","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15,"count":1}],"isBlockCoverage":true}]},{"scriptId":"716","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10,"count":1}],"isBlockCoverage":true}]},{"scriptId":"717","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24,"count":1}],"isBlockCoverage":true}]},{"scriptId":"718","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10,"count":1}],"isBlockCoverage":true}]},{"scriptId":"719","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20,"count":1}],"isBlockCoverage":true}]},{"scriptId":"720","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40,"count":1}],"isBlockCoverage":true}]},{"scriptId":"721","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40,"count":1}],"isBlockCoverage":true}]},{"scriptId":"722","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18,"count":1}],"isBlockCoverage":true}]},{"scriptId":"723","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20,"count":1}],"isBlockCoverage":true}]},{"scriptId":"724","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-electron@2.5.2/node_modules/@vscode/test-electron/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2644,"count":1},{"startOffset":759,"endOffset":840,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":440,"endOffset":757,"count":3},{"startOffset":584,"endOffset":599,"count":0},{"startOffset":616,"endOffset":636,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":679,"endOffset":706,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":762,"endOffset":839,"count":0}],"isBlockCoverage":true},{"functionName":"__exportStar","ranges":[{"startOffset":893,"endOffset":1044,"count":1},{"startOffset":937,"endOffset":1042,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1479,"endOffset":1522,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1609,"endOffset":1666,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1777,"endOffset":1819,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1902,"endOffset":1954,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2089,"endOffset":2158,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2261,"endOffset":2330,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2411,"endOffset":2458,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2541,"endOffset":2590,"count":1}],"isBlockCoverage":true}]},{"scriptId":"725","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-electron@2.5.2/node_modules/@vscode/test-electron/out/download.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19959,"count":1},{"startOffset":759,"endOffset":840,"count":0},{"startOffset":1016,"endOffset":1058,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":440,"endOffset":757,"count":173},{"startOffset":584,"endOffset":599,"count":5},{"startOffset":600,"endOffset":636,"count":168},{"startOffset":616,"endOffset":636,"count":5},{"startOffset":639,"endOffset":715,"count":168}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":679,"endOffset":706,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":762,"endOffset":839,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":923,"endOffset":1014,"count":4}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":1018,"endOffset":1058,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":1111,"endOffset":1391,"count":5},{"startOffset":1159,"endOffset":1170,"count":1},{"startOffset":1170,"endOffset":1333,"count":4},{"startOffset":1232,"endOffset":1333,"count":173},{"startOffset":1333,"endOffset":1390,"count":4}],"isBlockCoverage":true},{"functionName":"makeDownloadDirName","ranges":[{"startOffset":2517,"endOffset":2574,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3083,"endOffset":3181,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3249,"endOffset":3348,"count":0}],"isBlockCoverage":false},{"functionName":"fetchTargetStableVersion","ranges":[{"startOffset":3561,"endOffset":3867,"count":1},{"startOffset":3785,"endOffset":3865,"count":0}],"isBlockCoverage":true},{"functionName":"fetchTargetInferredVersion","ranges":[{"startOffset":3868,"endOffset":5408,"count":2},{"startOffset":3965,"endOffset":4326,"count":1},{"startOffset":4335,"endOffset":4372,"count":0},{"startOffset":4466,"endOffset":4868,"count":1},{"startOffset":4868,"endOffset":5406,"count":0}],"isBlockCoverage":true},{"functionName":"matches","ranges":[{"startOffset":4554,"endOffset":4647,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4579,"endOffset":4646,"count":1}],"isBlockCoverage":true},{"functionName":"getEngineVersionFromExtension","ranges":[{"startOffset":5409,"endOffset":5744,"count":1},{"startOffset":5703,"endOffset":5742,"count":0}],"isBlockCoverage":true},{"functionName":"fallbackToLocalEntries","ranges":[{"startOffset":5745,"endOffset":6363,"count":0}],"isBlockCoverage":false},{"functionName":"isValidVersion","ranges":[{"startOffset":6364,"endOffset":7013,"count":0}],"isBlockCoverage":false},{"functionName":"getFilename","ranges":[{"startOffset":7014,"endOffset":7308,"count":0}],"isBlockCoverage":false},{"functionName":"downloadVSCodeArchive","ranges":[{"startOffset":7567,"endOffset":9801,"count":0}],"isBlockCoverage":false},{"functionName":"unzipVSCode","ranges":[{"startOffset":9861,"endOffset":13530,"count":0}],"isBlockCoverage":false},{"functionName":"spawnDecompressorChild","ranges":[{"startOffset":13531,"endOffset":14064,"count":0}],"isBlockCoverage":false},{"functionName":"download","ranges":[{"startOffset":14275,"endOffset":19700,"count":2},{"startOffset":14357,"endOffset":14396,"count":0},{"startOffset":14628,"endOffset":14632,"count":0},{"startOffset":14647,"endOffset":14738,"count":0},{"startOffset":14766,"endOffset":15185,"count":0},{"startOffset":15444,"endOffset":15517,"count":0},{"startOffset":15519,"endOffset":15611,"count":0},{"startOffset":15920,"endOffset":17561,"count":0},{"startOffset":17823,"endOffset":18071,"count":0},{"startOffset":18077,"endOffset":19698,"count":0}],"isBlockCoverage":true},{"functionName":"downloadAndUnzipVSCode","ranges":[{"startOffset":19701,"endOffset":19958,"count":2},{"startOffset":19863,"endOffset":19881,"count":1},{"startOffset":19890,"endOffset":19954,"count":1}],"isBlockCoverage":true}]},{"scriptId":"726","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2630,"count":1}],"isBlockCoverage":true}]},{"scriptId":"727","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":331,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":72,"endOffset":306,"count":0}],"isBlockCoverage":false}]},{"scriptId":"728","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":176,"count":1}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":61,"endOffset":152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"729","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/clean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":205,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":61,"endOffset":181,"count":0}],"isBlockCoverage":false}]},{"scriptId":"730","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/inc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":478,"count":1}],"isBlockCoverage":true},{"functionName":"inc","ranges":[{"startOffset":71,"endOffset":456,"count":0}],"isBlockCoverage":false}]},{"scriptId":"731","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1421,"count":1}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":64,"endOffset":1397,"count":0}],"isBlockCoverage":false}]},{"scriptId":"732","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/major.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":136,"count":1}],"isBlockCoverage":true},{"functionName":"major","ranges":[{"startOffset":72,"endOffset":112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"733","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/minor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":136,"count":1}],"isBlockCoverage":true},{"functionName":"minor","ranges":[{"startOffset":72,"endOffset":112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"734","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/patch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":136,"count":1}],"isBlockCoverage":true},{"functionName":"patch","ranges":[{"startOffset":72,"endOffset":112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"735","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/prerelease.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":234,"count":1}],"isBlockCoverage":true},{"functionName":"prerelease","ranges":[{"startOffset":66,"endOffset":205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"736","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/rcompare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":132,"count":1}],"isBlockCoverage":true},{"functionName":"rcompare","ranges":[{"startOffset":68,"endOffset":105,"count":0}],"isBlockCoverage":false}]},{"scriptId":"737","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/compare-loose.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":132,"count":1}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":72,"endOffset":101,"count":0}],"isBlockCoverage":false}]},{"scriptId":"738","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/compare-build.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":281,"count":1}],"isBlockCoverage":true},{"functionName":"compareBuild","ranges":[{"startOffset":79,"endOffset":250,"count":0}],"isBlockCoverage":false}]},{"scriptId":"739","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":161,"count":1}],"isBlockCoverage":true},{"functionName":"sort","ranges":[{"startOffset":75,"endOffset":138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"740","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/rsort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true},{"functionName":"rsort","ranges":[{"startOffset":76,"endOffset":139,"count":0}],"isBlockCoverage":false}]},{"scriptId":"741","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/gt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":124,"count":1}],"isBlockCoverage":true},{"functionName":"gt","ranges":[{"startOffset":62,"endOffset":103,"count":0}],"isBlockCoverage":false}]},{"scriptId":"742","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/lt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":124,"count":1}],"isBlockCoverage":true},{"functionName":"lt","ranges":[{"startOffset":62,"endOffset":103,"count":1}],"isBlockCoverage":true}]},{"scriptId":"743","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":126,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":62,"endOffset":105,"count":0}],"isBlockCoverage":false}]},{"scriptId":"744","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/neq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":128,"count":1}],"isBlockCoverage":true},{"functionName":"neq","ranges":[{"startOffset":63,"endOffset":106,"count":0}],"isBlockCoverage":false}]},{"scriptId":"745","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/lte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":127,"count":1}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":63,"endOffset":105,"count":0}],"isBlockCoverage":false}]},{"scriptId":"746","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/cmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":961,"count":1}],"isBlockCoverage":true},{"functionName":"cmp","ranges":[{"startOffset":195,"endOffset":939,"count":2},{"startOffset":238,"endOffset":400,"count":0},{"startOffset":406,"endOffset":568,"count":0},{"startOffset":574,"endOffset":582,"count":0},{"startOffset":587,"endOffset":596,"count":0},{"startOffset":601,"endOffset":640,"count":0},{"startOffset":646,"endOffset":686,"count":0},{"startOffset":692,"endOffset":730,"count":0},{"startOffset":736,"endOffset":776,"count":1},{"startOffset":782,"endOffset":820,"count":1},{"startOffset":826,"endOffset":866,"count":0},{"startOffset":872,"endOffset":933,"count":0}],"isBlockCoverage":true}]},{"scriptId":"747","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/coerce.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2004,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":159,"endOffset":1979,"count":0}],"isBlockCoverage":false}]},{"scriptId":"748","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/classes/comparator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3631,"count":1}],"isBlockCoverage":true},{"functionName":"get ANY","ranges":[{"startOffset":114,"endOffset":145,"count":2}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":149,"endOffset":696,"count":4},{"startOffset":252,"endOffset":372,"count":0},{"startOffset":570,"endOffset":599,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":700,"endOffset":1196,"count":4},{"startOffset":748,"endOffset":771,"count":0},{"startOffset":832,"endOffset":896,"count":0},{"startOffset":944,"endOffset":948,"count":0},{"startOffset":980,"endOffset":1012,"count":0},{"startOffset":1091,"endOffset":1122,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":1200,"endOffset":1239,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":1243,"endOffset":1623,"count":2},{"startOffset":1367,"endOffset":1392,"count":0},{"startOffset":1431,"endOffset":1552,"count":0}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":1627,"endOffset":3337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"749","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/classes/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14938,"count":1}],"isBlockCoverage":true},{"functionName":"Range","ranges":[{"startOffset":102,"endOffset":2112,"count":1},{"startOffset":202,"endOffset":426,"count":0},{"startOffset":465,"endOffset":622,"count":0},{"startOffset":1428,"endOffset":1498,"count":0},{"startOffset":1599,"endOffset":2076,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1131,"endOffset":1161,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1386,"endOffset":1399,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1725,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"get range","ranges":[{"startOffset":2116,"endOffset":2571,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2575,"endOffset":2612,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2616,"endOffset":2655,"count":0}],"isBlockCoverage":false},{"functionName":"parseRange","ranges":[{"startOffset":2659,"endOffset":4942,"count":1},{"startOffset":2898,"endOffset":2911,"count":0},{"startOffset":3010,"endOffset":3037,"count":0},{"startOffset":3141,"endOffset":3165,"count":0},{"startOffset":4038,"endOffset":4277,"count":0},{"startOffset":4662,"endOffset":4765,"count":2},{"startOffset":4691,"endOffset":4722,"count":0},{"startOffset":4813,"endOffset":4846,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3852,"endOffset":3895,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3981,"endOffset":4020,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4144,"endOffset":4270,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4582,"endOffset":4624,"count":2}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":4946,"endOffset":5576,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":5644,"endOffset":6026,"count":1},{"startOffset":5679,"endOffset":5705,"count":0},{"startOffset":5818,"endOffset":5859,"count":0},{"startOffset":6005,"endOffset":6025,"count":0}],"isBlockCoverage":true},{"functionName":"isNullSet","ranges":[{"startOffset":6524,"endOffset":6551,"count":2}],"isBlockCoverage":true},{"functionName":"isAny","ranges":[{"startOffset":6566,"endOffset":6585,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiable","ranges":[{"startOffset":6707,"endOffset":7113,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":7283,"endOffset":7596,"count":1}],"isBlockCoverage":true},{"functionName":"isX","ranges":[{"startOffset":7610,"endOffset":7661,"count":9}],"isBlockCoverage":true},{"functionName":"replaceTildes","ranges":[{"startOffset":7997,"endOffset":8120,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8071,"endOffset":8102,"count":2}],"isBlockCoverage":true},{"functionName":"replaceTilde","ranges":[{"startOffset":8143,"endOffset":8817,"count":2},{"startOffset":8190,"endOffset":8208,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8248,"endOffset":8814,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":9110,"endOffset":9233,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9184,"endOffset":9215,"count":1}],"isBlockCoverage":true},{"functionName":"replaceCaret","ranges":[{"startOffset":9256,"endOffset":10558,"count":1},{"startOffset":9335,"endOffset":9353,"count":0},{"startOffset":9413,"endOffset":9417,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9443,"endOffset":10555,"count":1},{"startOffset":9535,"endOffset":9557,"count":0},{"startOffset":9575,"endOffset":9628,"count":0},{"startOffset":9646,"endOffset":9804,"count":0},{"startOffset":9818,"endOffset":10170,"count":0},{"startOffset":10220,"endOffset":10424,"count":0}],"isBlockCoverage":true},{"functionName":"replaceXRanges","ranges":[{"startOffset":10583,"endOffset":10736,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10686,"endOffset":10718,"count":2}],"isBlockCoverage":true},{"functionName":"replaceXRange","ranges":[{"startOffset":10760,"endOffset":12460,"count":2},{"startOffset":10828,"endOffset":10847,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10888,"endOffset":12457,"count":2},{"startOffset":11088,"endOffset":11095,"count":0},{"startOffset":11097,"endOffset":11120,"count":0},{"startOffset":11292,"endOffset":11296,"count":0},{"startOffset":11310,"endOffset":11487,"count":0},{"startOffset":11511,"endOffset":12255,"count":0},{"startOffset":12269,"endOffset":12323,"count":0},{"startOffset":12337,"endOffset":12404,"count":0}],"isBlockCoverage":true},{"functionName":"replaceStars","ranges":[{"startOffset":12606,"endOffset":12791,"count":1}],"isBlockCoverage":true},{"functionName":"replaceGTE0","ranges":[{"startOffset":12813,"endOffset":12968,"count":2},{"startOffset":12952,"endOffset":12960,"count":0}],"isBlockCoverage":true},{"functionName":"hyphenReplace","ranges":[{"startOffset":13225,"endOffset":13895,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13234,"endOffset":13895,"count":0}],"isBlockCoverage":false},{"functionName":"testSet","ranges":[{"startOffset":13913,"endOffset":14937,"count":1},{"startOffset":13981,"endOffset":14044,"count":2},{"startOffset":14014,"endOffset":14040,"count":0},{"startOffset":14078,"endOffset":14107,"count":0},{"startOffset":14109,"endOffset":14920,"count":0}],"isBlockCoverage":true}]},{"scriptId":"750","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/internal/lrucache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":802,"count":1}],"isBlockCoverage":true},{"functionName":"LRUCache","ranges":[{"startOffset":33,"endOffset":98,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":102,"endOffset":362,"count":1},{"startOffset":209,"endOffset":358,"count":0}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":366,"endOffset":416,"count":1}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":420,"endOffset":772,"count":1},{"startOffset":620,"endOffset":713,"count":0}],"isBlockCoverage":true}]},{"scriptId":"751","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/functions/satisfies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":247,"count":1}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":74,"endOffset":219,"count":1},{"startOffset":155,"endOffset":188,"count":0}],"isBlockCoverage":true}]},{"scriptId":"752","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/ranges/to-comparators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":282,"count":1}],"isBlockCoverage":true},{"functionName":"toComparators","ranges":[{"startOffset":129,"endOffset":249,"count":0}],"isBlockCoverage":false}]},{"scriptId":"753","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/ranges/max-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":593,"count":1}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":123,"endOffset":561,"count":0}],"isBlockCoverage":false}]},{"scriptId":"754","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/ranges/min-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":591,"count":1}],"isBlockCoverage":true},{"functionName":"minSatisfying","ranges":[{"startOffset":122,"endOffset":559,"count":0}],"isBlockCoverage":false}]},{"scriptId":"755","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/ranges/min-version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1514,"count":1}],"isBlockCoverage":true},{"functionName":"minVersion","ranges":[{"startOffset":158,"endOffset":1485,"count":0}],"isBlockCoverage":false}]},{"scriptId":"756","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/ranges/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":326,"count":1}],"isBlockCoverage":true},{"functionName":"validRange","ranges":[{"startOffset":75,"endOffset":297,"count":0}],"isBlockCoverage":false}]},{"scriptId":"757","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/ranges/outside.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2204,"count":1}],"isBlockCoverage":true},{"functionName":"outside","ranges":[{"startOffset":404,"endOffset":2177,"count":0}],"isBlockCoverage":false}]},{"scriptId":"758","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/ranges/gtr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":231,"count":1}],"isBlockCoverage":true},{"functionName":"gtr","ranges":[{"startOffset":143,"endOffset":209,"count":0}],"isBlockCoverage":false}]},{"scriptId":"759","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/ranges/ltr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":227,"count":1}],"isBlockCoverage":true},{"functionName":"ltr","ranges":[{"startOffset":139,"endOffset":205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"760","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/ranges/intersects.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":224,"count":1}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":75,"endOffset":195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"761","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/ranges/simplify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1355,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":343,"endOffset":1354,"count":0}],"isBlockCoverage":false}]},{"scriptId":"762","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/semver@7.7.2/node_modules/semver/ranges/subset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7524,"count":1}],"isBlockCoverage":true},{"functionName":"subset","ranges":[{"startOffset":2010,"endOffset":2741,"count":0}],"isBlockCoverage":false},{"functionName":"simpleSubset","ranges":[{"startOffset":2883,"endOffset":6988,"count":0}],"isBlockCoverage":false},{"functionName":"higherGT","ranges":[{"startOffset":7039,"endOffset":7243,"count":0}],"isBlockCoverage":false},{"functionName":"lowerLT","ranges":[{"startOffset":7294,"endOffset":7498,"count":0}],"isBlockCoverage":false}]},{"scriptId":"763","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-electron@2.5.2/node_modules/@vscode/test-electron/out/progress.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5484,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":600,"endOffset":2082,"count":1}],"isBlockCoverage":true},{"functionName":"report","ranges":[{"startOffset":2225,"endOffset":2258,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":2263,"endOffset":2295,"count":0}],"isBlockCoverage":false},{"functionName":"makeConsoleReporter","ranges":[{"startOffset":2447,"endOffset":5431,"count":2}],"isBlockCoverage":true},{"functionName":"toMB","ranges":[{"startOffset":2682,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":2781,"endOffset":2998,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":3008,"endOffset":5421,"count":4},{"startOffset":3077,"endOffset":3303,"count":2},{"startOffset":3320,"endOffset":3570,"count":0},{"startOffset":3587,"endOffset":3830,"count":2},{"startOffset":3661,"endOffset":3670,"count":0},{"startOffset":3847,"endOffset":4029,"count":0},{"startOffset":4046,"endOffset":4913,"count":0},{"startOffset":4930,"endOffset":5178,"count":0},{"startOffset":5195,"endOffset":5397,"count":0}],"isBlockCoverage":true}]},{"scriptId":"764","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-electron@2.5.2/node_modules/@vscode/test-electron/out/request.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3921,"count":1},{"startOffset":759,"endOffset":840,"count":0},{"startOffset":1016,"endOffset":1058,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":440,"endOffset":757,"count":6},{"startOffset":584,"endOffset":599,"count":0},{"startOffset":616,"endOffset":636,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":679,"endOffset":706,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":762,"endOffset":839,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":923,"endOffset":1014,"count":1}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":1018,"endOffset":1058,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":1111,"endOffset":1391,"count":1},{"startOffset":1159,"endOffset":1170,"count":0},{"startOffset":1232,"endOffset":1333,"count":6}],"isBlockCoverage":true},{"functionName":"getStream","ranges":[{"startOffset":1653,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"getJSON","ranges":[{"startOffset":2079,"endOffset":3190,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2190,"endOffset":3156,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2259,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2432,"endOffset":3115,"count":1},{"startOffset":2483,"endOffset":2544,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2599,"endOffset":2686,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2715,"endOffset":3066,"count":1},{"startOffset":2905,"endOffset":3052,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3166,"endOffset":3186,"count":1}],"isBlockCoverage":true},{"functionName":"get signal","ranges":[{"startOffset":3221,"endOffset":3274,"count":1}],"isBlockCoverage":true},{"functionName":"TimeoutController","ranges":[{"startOffset":3279,"endOffset":3510,"count":1}],"isBlockCoverage":true},{"functionName":"TimeoutController.reject","ranges":[{"startOffset":3399,"endOffset":3447,"count":0}],"isBlockCoverage":false},{"functionName":"touch","ranges":[{"startOffset":3515,"endOffset":3626,"count":1}],"isBlockCoverage":true},{"functionName":"dispose","ranges":[{"startOffset":3631,"endOffset":3683,"count":2}],"isBlockCoverage":true},{"functionName":"TimeoutError","ranges":[{"startOffset":3772,"endOffset":3881,"count":0}],"isBlockCoverage":false}]},{"scriptId":"765","url":"node:https","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10288,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1847,"endOffset":1872,"count":1}],"isBlockCoverage":true},{"functionName":"Server","ranges":[{"startOffset":1942,"endOffset":2920,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":3282,"endOffset":3385,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":3668,"endOffset":3760,"count":0}],"isBlockCoverage":false},{"functionName":"createConnection","ranges":[{"startOffset":3781,"endOffset":4879,"count":1},{"startOffset":3904,"endOffset":4112,"count":0},{"startOffset":4146,"endOffset":4176,"count":0},{"startOffset":4210,"endOffset":4240,"count":0},{"startOffset":4382,"endOffset":4509,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4642,"endOffset":4716,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4775,"endOffset":4853,"count":1},{"startOffset":4809,"endOffset":4847,"count":0}],"isBlockCoverage":true},{"functionName":"Agent","ranges":[{"startOffset":5226,"endOffset":5617,"count":1},{"startOffset":5288,"endOffset":5314,"count":0}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":5988,"endOffset":7712,"count":3},{"startOffset":6149,"endOffset":6168,"count":0},{"startOffset":6209,"endOffset":6230,"count":0},{"startOffset":6283,"endOffset":6316,"count":0},{"startOffset":6360,"endOffset":6384,"count":0},{"startOffset":6424,"endOffset":6444,"count":0},{"startOffset":6484,"endOffset":6504,"count":0},{"startOffset":6573,"endOffset":6608,"count":0},{"startOffset":6694,"endOffset":6721,"count":0},{"startOffset":6768,"endOffset":6795,"count":0},{"startOffset":6842,"endOffset":6869,"count":0},{"startOffset":6920,"endOffset":6951,"count":0},{"startOffset":6991,"endOffset":7011,"count":0},{"startOffset":7078,"endOffset":7111,"count":0},{"startOffset":7157,"endOffset":7183,"count":0},{"startOffset":7227,"endOffset":7251,"count":0},{"startOffset":7315,"endOffset":7345,"count":0},{"startOffset":7398,"endOffset":7431,"count":0},{"startOffset":7475,"endOffset":7514,"count":0},{"startOffset":7571,"endOffset":7608,"count":0},{"startOffset":7661,"endOffset":7694,"count":0}],"isBlockCoverage":true},{"functionName":"_getSession","ranges":[{"startOffset":7745,"endOffset":7812,"count":1}],"isBlockCoverage":true},{"functionName":"_cacheSession","ranges":[{"startOffset":7847,"endOffset":8420,"count":2},{"startOffset":7949,"endOffset":7956,"count":0},{"startOffset":8032,"endOffset":8177,"count":1},{"startOffset":8177,"endOffset":8324,"count":0},{"startOffset":8324,"endOffset":8419,"count":1}],"isBlockCoverage":true},{"functionName":"_evictSession","ranges":[{"startOffset":8455,"endOffset":8685,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":8825,"endOffset":9354,"count":1},{"startOffset":9009,"endOffset":9099,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10090,"endOffset":10196,"count":1}],"isBlockCoverage":true}]},{"scriptId":"766","url":"node:tls","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11612,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3466,"endOffset":3530,"count":0}],"isBlockCoverage":false},{"functionName":"cacheRootCertificates","ranges":[{"startOffset":3559,"endOffset":3653,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3776,"endOffset":3927,"count":3},{"startOffset":3870,"endOffset":3894,"count":1}],"isBlockCoverage":true},{"functionName":"convertProtocols","ranges":[{"startOffset":4037,"endOffset":4649,"count":0}],"isBlockCoverage":false},{"functionName":"convertALPNProtocols","ranges":[{"startOffset":4682,"endOffset":5206,"count":0}],"isBlockCoverage":false},{"functionName":"unfqdn","ranges":[{"startOffset":5209,"endOffset":5291,"count":3}],"isBlockCoverage":true},{"functionName":"toLowerCase","ranges":[{"startOffset":5399,"endOffset":5493,"count":0}],"isBlockCoverage":false},{"functionName":"splitHost","ranges":[{"startOffset":5495,"endOffset":5639,"count":2}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":5641,"endOffset":7636,"count":1},{"startOffset":5764,"endOffset":5777,"count":0},{"startOffset":5875,"endOffset":5888,"count":0},{"startOffset":6002,"endOffset":6015,"count":0},{"startOffset":6410,"endOffset":6423,"count":0},{"startOffset":6525,"endOffset":6592,"count":3},{"startOffset":6575,"endOffset":6588,"count":0},{"startOffset":6994,"endOffset":7052,"count":0},{"startOffset":7100,"endOffset":7635,"count":0}],"isBlockCoverage":true},{"functionName":"isBad","ranges":[{"startOffset":6298,"endOffset":6357,"count":4}],"isBlockCoverage":true},{"functionName":"splitEscapedAltNames","ranges":[{"startOffset":8001,"endOffset":9237,"count":0}],"isBlockCoverage":false},{"functionName":"checkServerIdentity","ranges":[{"startOffset":9269,"endOffset":11167,"count":1},{"startOffset":9542,"endOffset":9580,"count":0},{"startOffset":10128,"endOffset":10325,"count":0},{"startOffset":10355,"endOffset":10369,"count":0},{"startOffset":10595,"endOffset":10678,"count":0},{"startOffset":10684,"endOffset":11011,"count":0},{"startOffset":11015,"endOffset":11075,"count":0},{"startOffset":11091,"endOffset":11165,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9668,"endOffset":9963,"count":1},{"startOffset":9809,"endOffset":9957,"count":0}],"isBlockCoverage":true},{"functionName":"wildcard","ranges":[{"startOffset":10437,"endOffset":10481,"count":1}],"isBlockCoverage":true}]},{"scriptId":"767","url":"node:_tls_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5145,"count":1}],"isBlockCoverage":false},{"functionName":"toV","ranges":[{"startOffset":1791,"endOffset":2084,"count":2},{"startOffset":1868,"endOffset":1888,"count":0},{"startOffset":1912,"endOffset":1934,"count":0},{"startOffset":1958,"endOffset":2026,"count":1},{"startOffset":2026,"endOffset":2083,"count":0}],"isBlockCoverage":true},{"functionName":"SecureContext","ranges":[{"startOffset":2164,"endOffset":3001,"count":1},{"startOffset":2284,"endOffset":2403,"count":0},{"startOffset":2427,"endOffset":2646,"count":0},{"startOffset":2897,"endOffset":2999,"count":0}],"isBlockCoverage":true},{"functionName":"createSecureContext","ranges":[{"startOffset":3003,"endOffset":3473,"count":1},{"startOffset":3059,"endOffset":3082,"count":0},{"startOffset":3248,"endOffset":3297,"count":0}],"isBlockCoverage":true},{"functionName":"translatePeerCertificate","ranges":[{"startOffset":3712,"endOffset":5053,"count":3},{"startOffset":3765,"endOffset":3777,"count":0},{"startOffset":3843,"endOffset":3921,"count":2},{"startOffset":3950,"endOffset":5039,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4159,"endOffset":5033,"count":4},{"startOffset":4247,"endOffset":4753,"count":0},{"startOffset":4851,"endOffset":4894,"count":0}],"isBlockCoverage":true}]},{"scriptId":"768","url":"node:internal/tls/secure-context","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9249,"count":1}],"isBlockCoverage":false},{"functionName":"getDefaultEcdhCurve","ranges":[{"startOffset":727,"endOffset":977,"count":1},{"startOffset":965,"endOffset":974,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultCiphers","ranges":[{"startOffset":979,"endOffset":1211,"count":0}],"isBlockCoverage":false},{"functionName":"addCACerts","ranges":[{"startOffset":1213,"endOffset":1377,"count":0}],"isBlockCoverage":false},{"functionName":"setCerts","ranges":[{"startOffset":1379,"endOffset":1539,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOrCertOption","ranges":[{"startOffset":1541,"endOffset":1821,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":1823,"endOffset":2065,"count":0}],"isBlockCoverage":false},{"functionName":"processCiphers","ranges":[{"startOffset":2067,"endOffset":2898,"count":1},{"startOffset":2149,"endOffset":2171,"count":0},{"startOffset":2783,"endOffset":2803,"count":0},{"startOffset":2809,"endOffset":2856,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2278,"endOffset":2395,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2505,"endOffset":2621,"count":24}],"isBlockCoverage":true},{"functionName":"configSecureContext","ranges":[{"startOffset":2900,"endOffset":9202,"count":1},{"startOffset":4105,"endOffset":4152,"count":0},{"startOffset":4153,"endOffset":4200,"count":0},{"startOffset":4202,"endOffset":4248,"count":0},{"startOffset":4458,"endOffset":4532,"count":0},{"startOffset":4585,"endOffset":4665,"count":0},{"startOffset":4900,"endOffset":5290,"count":0},{"startOffset":5320,"endOffset":5339,"count":0},{"startOffset":5341,"endOffset":5520,"count":0},{"startOffset":5563,"endOffset":5595,"count":0},{"startOffset":5597,"endOffset":6829,"count":0},{"startOffset":6945,"endOffset":6964,"count":0},{"startOffset":6966,"endOffset":7171,"count":0},{"startOffset":7197,"endOffset":7212,"count":0},{"startOffset":7214,"endOffset":7466,"count":0},{"startOffset":7505,"endOffset":7533,"count":0},{"startOffset":7535,"endOffset":7657,"count":0},{"startOffset":7683,"endOffset":7698,"count":0},{"startOffset":7700,"endOffset":8193,"count":0},{"startOffset":8239,"endOffset":8423,"count":0},{"startOffset":8464,"endOffset":8492,"count":0},{"startOffset":8494,"endOffset":8684,"count":0},{"startOffset":8717,"endOffset":8739,"count":0},{"startOffset":8741,"endOffset":9022,"count":0},{"startOffset":9059,"endOffset":9085,"count":0},{"startOffset":9087,"endOffset":9200,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7764,"endOffset":8044,"count":0}],"isBlockCoverage":false}]},{"scriptId":"769","url":"node:_tls_wrap","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53526,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2051,"endOffset":2076,"count":1}],"isBlockCoverage":true},{"functionName":"onhandshakestart","ranges":[{"startOffset":4277,"endOffset":5060,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakedone","ranges":[{"startOffset":5062,"endOffset":5355,"count":0}],"isBlockCoverage":false},{"functionName":"loadSession","ranges":[{"startOffset":5358,"endOffset":6563,"count":0}],"isBlockCoverage":false},{"functionName":"loadSNI","ranges":[{"startOffset":6566,"endOffset":7219,"count":0}],"isBlockCoverage":false},{"functionName":"callALPNCallback","ranges":[{"startOffset":7222,"endOffset":8258,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSP","ranges":[{"startOffset":8260,"endOffset":9582,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSPDone","ranges":[{"startOffset":9584,"endOffset":9779,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsessionclient","ranges":[{"startOffset":9781,"endOffset":10017,"count":2},{"startOffset":9966,"endOffset":10015,"count":0}],"isBlockCoverage":true},{"functionName":"onnewsession","ranges":[{"startOffset":10019,"endOffset":10855,"count":0}],"isBlockCoverage":false},{"functionName":"onPskServerCallback","ranges":[{"startOffset":10857,"endOffset":11507,"count":0}],"isBlockCoverage":false},{"functionName":"onPskClientCallback","ranges":[{"startOffset":11509,"endOffset":12216,"count":0}],"isBlockCoverage":false},{"functionName":"onkeylog","ranges":[{"startOffset":12218,"endOffset":12309,"count":0}],"isBlockCoverage":false},{"functionName":"onocspresponse","ranges":[{"startOffset":12311,"endOffset":12427,"count":0}],"isBlockCoverage":false},{"functionName":"onerror","ranges":[{"startOffset":12429,"endOffset":13557,"count":0}],"isBlockCoverage":false},{"functionName":"initRead","ranges":[{"startOffset":13701,"endOffset":14248,"count":1},{"startOffset":13802,"endOffset":13812,"count":0},{"startOffset":13895,"endOffset":13919,"count":0},{"startOffset":14011,"endOffset":14018,"count":0},{"startOffset":14099,"endOffset":14123,"count":0},{"startOffset":14125,"endOffset":14224,"count":0}],"isBlockCoverage":true},{"functionName":"TLSSocket","ranges":[{"startOffset":14326,"endOffset":17438,"count":1},{"startOffset":14518,"endOffset":14538,"count":0},{"startOffset":14540,"endOffset":14708,"count":0},{"startOffset":14712,"endOffset":14780,"count":0},{"startOffset":14818,"endOffset":14881,"count":0},{"startOffset":15418,"endOffset":15963,"count":0},{"startOffset":16365,"endOffset":16387,"count":0},{"startOffset":16570,"endOffset":16576,"count":0},{"startOffset":16785,"endOffset":16800,"count":0},{"startOffset":16806,"endOffset":16833,"count":0},{"startOffset":16874,"endOffset":17322,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17097,"endOffset":17316,"count":0}],"isBlockCoverage":false},{"functionName":"makeMethodProxy","ranges":[{"startOffset":17881,"endOffset":18056,"count":15}],"isBlockCoverage":true},{"functionName":"methodProxy","ranges":[{"startOffset":17923,"endOffset":18053,"count":1}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":18223,"endOffset":18916,"count":1},{"startOffset":18747,"endOffset":18791,"count":0},{"startOffset":18793,"endOffset":18879,"count":0}],"isBlockCoverage":true},{"functionName":"done","ranges":[{"startOffset":18504,"endOffset":18721,"count":1},{"startOffset":18591,"endOffset":18687,"count":0}],"isBlockCoverage":true},{"functionName":"disableRenegotiation","ranges":[{"startOffset":18962,"endOffset":19035,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._wrapHandle","ranges":[{"startOffset":19220,"endOffset":20299,"count":1},{"startOffset":19357,"endOffset":19395,"count":0},{"startOffset":19538,"endOffset":19578,"count":0},{"startOffset":19579,"endOffset":19632,"count":0},{"startOffset":19753,"endOffset":19808,"count":0}],"isBlockCoverage":true},{"functionName":"reinitializeHandle","ranges":[{"startOffset":20345,"endOffset":20921,"count":0}],"isBlockCoverage":false},{"functionName":"defineHandleReading","ranges":[{"startOffset":21060,"endOffset":21303,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":21181,"endOffset":21229,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":21240,"endOffset":21294,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketCloseDestroySSL","ranges":[{"startOffset":21305,"endOffset":21452,"count":1}],"isBlockCoverage":true},{"functionName":"destroySSL","ranges":[{"startOffset":21454,"endOffset":21505,"count":1}],"isBlockCoverage":true},{"functionName":"_destroySSL","ranges":[{"startOffset":21541,"endOffset":21833,"count":1},{"startOffset":21590,"endOffset":21832,"count":0}],"isBlockCoverage":true},{"functionName":"keylogNewListener","ranges":[{"startOffset":21836,"endOffset":22147,"count":20},{"startOffset":21909,"endOffset":22146,"count":0}],"isBlockCoverage":true},{"functionName":"newListener","ranges":[{"startOffset":22149,"endOffset":22453,"count":4},{"startOffset":22210,"endOffset":22217,"count":3},{"startOffset":22217,"endOffset":22296,"count":1},{"startOffset":22296,"endOffset":22303,"count":0},{"startOffset":22303,"endOffset":22452,"count":1}],"isBlockCoverage":true},{"functionName":"TLSSocket._init","ranges":[{"startOffset":22591,"endOffset":27388,"count":1},{"startOffset":22758,"endOffset":22768,"count":0},{"startOffset":22972,"endOffset":22992,"count":0},{"startOffset":23156,"endOffset":23177,"count":0},{"startOffset":23464,"endOffset":24434,"count":0},{"startOffset":24654,"endOffset":24686,"count":0},{"startOffset":24930,"endOffset":25473,"count":0},{"startOffset":25656,"endOffset":25684,"count":0},{"startOffset":25685,"endOffset":25793,"count":0},{"startOffset":25795,"endOffset":25924,"count":0},{"startOffset":25959,"endOffset":26003,"count":0},{"startOffset":26031,"endOffset":26055,"count":0},{"startOffset":26057,"endOffset":26462,"count":0},{"startOffset":26706,"endOffset":26807,"count":0},{"startOffset":26849,"endOffset":26912,"count":0},{"startOffset":26950,"endOffset":27223,"count":0},{"startOffset":27265,"endOffset":27326,"count":0}],"isBlockCoverage":true},{"functionName":"ssl.onhandshakedone","ranges":[{"startOffset":24501,"endOffset":24579,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25163,"endOffset":25467,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27145,"endOffset":27217,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27288,"endOffset":27320,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.renegotiate","ranges":[{"startOffset":27425,"endOffset":28672,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.exportKeyingMaterial","ranges":[{"startOffset":28718,"endOffset":29040,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxSendFragment","ranges":[{"startOffset":29084,"endOffset":29206,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._handleTimeout","ranges":[{"startOffset":29246,"endOffset":29315,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._emitTLSError","ranges":[{"startOffset":29354,"endOffset":29440,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._tlsError","ranges":[{"startOffset":29475,"endOffset":29583,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._releaseControl","ranges":[{"startOffset":29624,"endOffset":29780,"count":1},{"startOffset":29670,"endOffset":29683,"count":0}],"isBlockCoverage":true},{"functionName":"TLSSocket._finishInit","ranges":[{"startOffset":29817,"endOffset":30876,"count":1},{"startOffset":30297,"endOffset":30304,"count":0},{"startOffset":30594,"endOffset":30604,"count":0},{"startOffset":30811,"endOffset":30851,"count":0}],"isBlockCoverage":true},{"functionName":"TLSSocket._start","ranges":[{"startOffset":30908,"endOffset":31407,"count":1},{"startOffset":30976,"endOffset":30986,"count":0},{"startOffset":31158,"endOffset":31214,"count":0},{"startOffset":31305,"endOffset":31312,"count":0},{"startOffset":31354,"endOffset":31381,"count":0}],"isBlockCoverage":true},{"functionName":"TLSSocket.setServername","ranges":[{"startOffset":31446,"endOffset":31614,"count":1},{"startOffset":31529,"endOffset":31575,"count":0}],"isBlockCoverage":true},{"functionName":"TLSSocket.setSession","ranges":[{"startOffset":31650,"endOffset":31788,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerCertificate","ranges":[{"startOffset":31832,"endOffset":31996,"count":1},{"startOffset":31968,"endOffset":31973,"count":0},{"startOffset":31978,"endOffset":31995,"count":0}],"isBlockCoverage":true},{"functionName":"TLSSocket.getCertificate","ranges":[{"startOffset":32036,"endOffset":32242,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerX509Certificate","ranges":[{"startOffset":32290,"endOffset":32430,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getX509Certificate","ranges":[{"startOffset":32474,"endOffset":32602,"count":0}],"isBlockCoverage":false},{"functionName":"makeSocketMethodProxy","ranges":[{"startOffset":32639,"endOffset":32837,"count":10}],"isBlockCoverage":true},{"functionName":"socketMethodProxy","ranges":[{"startOffset":32687,"endOffset":32834,"count":2},{"startOffset":32813,"endOffset":32833,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33055,"endOffset":33133,"count":10}],"isBlockCoverage":true},{"functionName":"onServerSocketSecure","ranges":[{"startOffset":33175,"endOffset":33670,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketTLSError","ranges":[{"startOffset":33672,"endOffset":33908,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketKeylog","ranges":[{"startOffset":33910,"endOffset":33997,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketClose","ranges":[{"startOffset":33999,"endOffset":34352,"count":0}],"isBlockCoverage":false},{"functionName":"tlsConnectionListener","ranges":[{"startOffset":34354,"endOffset":35240,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":38006,"endOffset":39753,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":39907,"endOffset":39991,"count":0}],"isBlockCoverage":false},{"functionName":"Server.setSecureContext","ranges":[{"startOffset":40031,"endOffset":42934,"count":0}],"isBlockCoverage":false},{"functionName":"Server._getServerData","ranges":[{"startOffset":42972,"endOffset":43056,"count":0}],"isBlockCoverage":false},{"functionName":"Server._setServerData","ranges":[{"startOffset":43094,"endOffset":43171,"count":0}],"isBlockCoverage":false},{"functionName":"getTicketKeys","ranges":[{"startOffset":43208,"endOffset":43288,"count":0}],"isBlockCoverage":false},{"functionName":"setTicketKeys","ranges":[{"startOffset":43325,"endOffset":43521,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43565,"endOffset":45631,"count":0}],"isBlockCoverage":false},{"functionName":"Server.addContext","ranges":[{"startOffset":45754,"endOffset":46205,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":46254,"endOffset":46509,"count":0}],"isBlockCoverage":false},{"functionName":"SNICallback","ranges":[{"startOffset":46512,"endOffset":46828,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeConnectArgs","ranges":[{"startOffset":47061,"endOffset":47789,"count":1},{"startOffset":47588,"endOffset":47633,"count":0},{"startOffset":47700,"endOffset":47745,"count":0},{"startOffset":47759,"endOffset":47774,"count":0}],"isBlockCoverage":true},{"functionName":"onConnectSecure","ranges":[{"startOffset":47791,"endOffset":50094,"count":1},{"startOffset":48028,"endOffset":48064,"count":0},{"startOffset":48066,"endOffset":48222,"count":0},{"startOffset":48482,"endOffset":48516,"count":0},{"startOffset":48517,"endOffset":48579,"count":0},{"startOffset":48580,"endOffset":48613,"count":0},{"startOffset":48750,"endOffset":49719,"count":0},{"startOffset":50017,"endOffset":50047,"count":0}],"isBlockCoverage":true},{"functionName":"onConnectEnd","ranges":[{"startOffset":50096,"endOffset":50645,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":50711,"endOffset":53524,"count":1},{"startOffset":52537,"endOffset":52571,"count":0},{"startOffset":52765,"endOffset":52815,"count":0},{"startOffset":52925,"endOffset":52961,"count":0},{"startOffset":53052,"endOffset":53317,"count":0},{"startOffset":53396,"endOffset":53413,"count":0}],"isBlockCoverage":true}]},{"scriptId":"770","url":"node:internal/js_stream_socket","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8209,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":335,"endOffset":364,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":741,"endOffset":804,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstart","ranges":[{"startOffset":806,"endOffset":871,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstop","ranges":[{"startOffset":873,"endOffset":936,"count":0}],"isBlockCoverage":false},{"functionName":"onshutdown","ranges":[{"startOffset":938,"endOffset":1009,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":1011,"endOffset":1088,"count":0}],"isBlockCoverage":false},{"functionName":"JSStreamSocket","ranges":[{"startOffset":1848,"endOffset":3576,"count":0}],"isBlockCoverage":false},{"functionName":"get StreamWrap","ranges":[{"startOffset":3716,"endOffset":3765,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":3769,"endOffset":3831,"count":0}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":3835,"endOffset":3892,"count":0}],"isBlockCoverage":false},{"functionName":"readStop","ranges":[{"startOffset":3896,"endOffset":3951,"count":0}],"isBlockCoverage":false},{"functionName":"doShutdown","ranges":[{"startOffset":3955,"endOffset":5202,"count":0}],"isBlockCoverage":false},{"functionName":"finishShutdown","ranges":[{"startOffset":5270,"endOffset":5562,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":5566,"endOffset":6847,"count":0}],"isBlockCoverage":false},{"functionName":"finishWrite","ranges":[{"startOffset":6915,"endOffset":7358,"count":0}],"isBlockCoverage":false},{"functionName":"doClose","ranges":[{"startOffset":7362,"endOffset":8172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"771","url":"node:internal/tls/secure-pair","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1991,"count":1}],"isBlockCoverage":false},{"functionName":"DuplexSocket","ranges":[{"startOffset":398,"endOffset":487,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":491,"endOffset":616,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":620,"endOffset":824,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":828,"endOffset":925,"count":0}],"isBlockCoverage":false},{"functionName":"DuplexPair","ranges":[{"startOffset":950,"endOffset":1137,"count":0}],"isBlockCoverage":false},{"functionName":"SecurePair","ranges":[{"startOffset":1183,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1800,"endOffset":1875,"count":0}],"isBlockCoverage":false},{"functionName":"createSecurePair","ranges":[{"startOffset":1906,"endOffset":1989,"count":0}],"isBlockCoverage":false}]},{"scriptId":"772","url":"node:_http_agent","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16492,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1678,"endOffset":1703,"count":1}],"isBlockCoverage":true},{"functionName":"ReusedHandle","ranges":[{"startOffset":2656,"endOffset":2735,"count":0}],"isBlockCoverage":false},{"functionName":"freeSocketErrorListener","ranges":[{"startOffset":2739,"endOffset":2918,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":2920,"endOffset":6147,"count":2},{"startOffset":2982,"endOffset":3008,"count":0},{"startOffset":3947,"endOffset":4016,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4084,"endOffset":6030,"count":0}],"isBlockCoverage":false},{"functionName":"maybeEnableKeylog","ranges":[{"startOffset":6255,"endOffset":6780,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":6953,"endOffset":7451,"count":3},{"startOffset":7022,"endOffset":7036,"count":0},{"startOffset":7148,"endOffset":7177,"count":0},{"startOffset":7339,"endOffset":7368,"count":0},{"startOffset":7400,"endOffset":7433,"count":0}],"isBlockCoverage":true},{"functionName":"addRequest","ranges":[{"startOffset":7483,"endOffset":9646,"count":1},{"startOffset":7706,"endOffset":7810,"count":0},{"startOffset":7904,"endOffset":7938,"count":0},{"startOffset":8237,"endOffset":8536,"count":0},{"startOffset":8568,"endOffset":8588,"count":0},{"startOffset":8664,"endOffset":8827,"count":0},{"startOffset":9197,"endOffset":9644,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9061,"endOffset":9191,"count":1},{"startOffset":9103,"endOffset":9129,"count":0}],"isBlockCoverage":true},{"functionName":"createSocket","ranges":[{"startOffset":9680,"endOffset":10774,"count":1},{"startOffset":9814,"endOffset":9848,"count":0},{"startOffset":9876,"endOffset":9904,"count":0},{"startOffset":9910,"endOffset":9965,"count":0},{"startOffset":10560,"endOffset":10662,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10130,"endOffset":10461,"count":1},{"startOffset":10163,"endOffset":10178,"count":0},{"startOffset":10208,"endOffset":10246,"count":0}],"isBlockCoverage":true},{"functionName":"calculateServerName","ranges":[{"startOffset":10777,"endOffset":11597,"count":1},{"startOffset":11112,"endOffset":11392,"count":0},{"startOffset":11558,"endOffset":11574,"count":0}],"isBlockCoverage":true},{"functionName":"installListeners","ranges":[{"startOffset":11599,"endOffset":13087,"count":1},{"startOffset":13042,"endOffset":13085,"count":0}],"isBlockCoverage":true},{"functionName":"onFree","ranges":[{"startOffset":11648,"endOffset":11742,"count":0}],"isBlockCoverage":false},{"functionName":"onClose","ranges":[{"startOffset":11770,"endOffset":12093,"count":1}],"isBlockCoverage":true},{"functionName":"onTimeout","ranges":[{"startOffset":12123,"endOffset":12468,"count":0}],"isBlockCoverage":false},{"functionName":"onRemove","ranges":[{"startOffset":12502,"endOffset":12983,"count":0}],"isBlockCoverage":false},{"functionName":"removeSocket","ranges":[{"startOffset":13120,"endOffset":14921,"count":1},{"startOffset":13464,"endOffset":13775,"count":2},{"startOffset":13520,"endOffset":13771,"count":1},{"startOffset":13814,"endOffset":13843,"count":0},{"startOffset":13845,"endOffset":13942,"count":0},{"startOffset":14267,"endOffset":14619,"count":0},{"startOffset":14635,"endOffset":14645,"count":0},{"startOffset":14647,"endOffset":14918,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14798,"endOffset":14912,"count":0}],"isBlockCoverage":false},{"functionName":"keepSocketAlive","ranges":[{"startOffset":14958,"endOffset":15211,"count":0}],"isBlockCoverage":false},{"functionName":"reuseSocket","ranges":[{"startOffset":15244,"endOffset":15412,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":15441,"endOffset":15790,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestSocket","ranges":[{"startOffset":15793,"endOffset":16034,"count":1},{"startOffset":15948,"endOffset":15979,"count":0},{"startOffset":15998,"endOffset":16033,"count":0}],"isBlockCoverage":true},{"functionName":"asyncResetHandle","ranges":[{"startOffset":16036,"endOffset":16431,"count":0}],"isBlockCoverage":false}]},{"scriptId":"773","url":"node:_http_server","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38074,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2770,"endOffset":2795,"count":0}],"isBlockCoverage":false},{"functionName":"HTTPServerAsyncResource","ranges":[{"startOffset":7104,"endOffset":7183,"count":0}],"isBlockCoverage":false},{"functionName":"ServerResponse","ranges":[{"startOffset":7187,"endOffset":8106,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":8273,"endOffset":8962,"count":0}],"isBlockCoverage":false},{"functionName":"onServerResponseClose","ranges":[{"startOffset":9062,"endOffset":10052,"count":0}],"isBlockCoverage":false},{"functionName":"assignSocket","ranges":[{"startOffset":10094,"endOffset":10349,"count":0}],"isBlockCoverage":false},{"functionName":"detachSocket","ranges":[{"startOffset":10392,"endOffset":10574,"count":0}],"isBlockCoverage":false},{"functionName":"writeContinue","ranges":[{"startOffset":10618,"endOffset":10736,"count":0}],"isBlockCoverage":false},{"functionName":"writeProcessing","ranges":[{"startOffset":10782,"endOffset":10880,"count":0}],"isBlockCoverage":false},{"functionName":"writeEarlyHints","ranges":[{"startOffset":10926,"endOffset":11436,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":11482,"endOffset":11547,"count":0}],"isBlockCoverage":false},{"functionName":"writeHead","ranges":[{"startOffset":11598,"endOffset":14195,"count":0}],"isBlockCoverage":false},{"functionName":"storeHTTPOptions","ranges":[{"startOffset":14306,"endOffset":16915,"count":0}],"isBlockCoverage":false},{"functionName":"setupConnectionsTracking","ranges":[{"startOffset":16917,"endOffset":17388,"count":0}],"isBlockCoverage":false},{"functionName":"httpServerPreClose","ranges":[{"startOffset":17390,"endOffset":17484,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":17486,"endOffset":18721,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":18852,"endOffset":18955,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeAllConnections","ranges":[{"startOffset":18997,"endOffset":19203,"count":0}],"isBlockCoverage":false},{"functionName":"Server.closeIdleConnections","ranges":[{"startOffset":19246,"endOffset":19570,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":19603,"endOffset":19732,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":19781,"endOffset":20349,"count":0}],"isBlockCoverage":false},{"functionName":"checkConnections","ranges":[{"startOffset":20352,"endOffset":20697,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListener","ranges":[{"startOffset":20699,"endOffset":20844,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListenerInternal","ranges":[{"startOffset":20846,"endOffset":24268,"count":0}],"isBlockCoverage":false},{"functionName":"socketSetEncoding","ranges":[{"startOffset":24270,"endOffset":24342,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutgoingData","ranges":[{"startOffset":24344,"endOffset":24460,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnDrain","ranges":[{"startOffset":24462,"endOffset":24916,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnTimeout","ranges":[{"startOffset":24918,"endOffset":25291,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":25293,"endOffset":25442,"count":0}],"isBlockCoverage":false},{"functionName":"abortIncoming","ranges":[{"startOffset":25444,"endOffset":25627,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":25629,"endOffset":26151,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":26153,"endOffset":26382,"count":0}],"isBlockCoverage":false},{"functionName":"onRequestTimeout","ranges":[{"startOffset":26384,"endOffset":26558,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecute","ranges":[{"startOffset":26560,"endOffset":27059,"count":0}],"isBlockCoverage":false},{"functionName":"onParserTimeout","ranges":[{"startOffset":27061,"endOffset":27206,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":27221,"endOffset":27229,"count":0}],"isBlockCoverage":false},{"functionName":"warnUnclosedSocket","ranges":[{"startOffset":27782,"endOffset":28095,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":28097,"endOffset":29203,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecuteCommon","ranges":[{"startOffset":29205,"endOffset":30826,"count":0}],"isBlockCoverage":false},{"functionName":"clearIncoming","ranges":[{"startOffset":30828,"endOffset":31166,"count":0}],"isBlockCoverage":false},{"functionName":"resOnFinish","ranges":[{"startOffset":31168,"endOffset":32492,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":32494,"endOffset":32627,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnIncoming","ranges":[{"startOffset":32793,"endOffset":36183,"count":0}],"isBlockCoverage":false},{"functionName":"resetSocketTimeout","ranges":[{"startOffset":36185,"endOffset":36365,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketResume","ranges":[{"startOffset":36367,"endOffset":36889,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketPause","ranges":[{"startOffset":36891,"endOffset":37032,"count":0}],"isBlockCoverage":false},{"functionName":"unconsume","ranges":[{"startOffset":37034,"endOffset":37286,"count":0}],"isBlockCoverage":false},{"functionName":"generateSocketListenerWrapper","ranges":[{"startOffset":37288,"endOffset":37842,"count":0}],"isBlockCoverage":false}]},{"scriptId":"774","url":"node:_http_common","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8261,"count":1}],"isBlockCoverage":false},{"functionName":"parserOnHeaders","ranges":[{"startOffset":2298,"endOffset":2545,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnHeadersComplete","ranges":[{"startOffset":2758,"endOffset":4292,"count":1},{"startOffset":3044,"endOffset":3106,"count":0},{"startOffset":3282,"endOffset":3349,"count":0},{"startOffset":3673,"endOffset":3695,"count":0},{"startOffset":4059,"endOffset":4122,"count":0}],"isBlockCoverage":true},{"functionName":"parserOnBody","ranges":[{"startOffset":4294,"endOffset":4611,"count":1},{"startOffset":4440,"endOffset":4447,"count":0},{"startOffset":4583,"endOffset":4605,"count":0}],"isBlockCoverage":true},{"functionName":"parserOnMessageComplete","ranges":[{"startOffset":4613,"endOffset":5100,"count":1},{"startOffset":4856,"endOffset":4970,"count":0}],"isBlockCoverage":true},{"functionName":"parsersCb","ranges":[{"startOffset":5149,"endOffset":5437,"count":1}],"isBlockCoverage":true},{"functionName":"closeParserInstance","ranges":[{"startOffset":5441,"endOffset":5497,"count":0}],"isBlockCoverage":false},{"functionName":"freeParser","ranges":[{"startOffset":5820,"endOffset":6445,"count":1},{"startOffset":5911,"endOffset":5930,"count":0},{"startOffset":6017,"endOffset":6195,"count":0}],"isBlockCoverage":true},{"functionName":"checkIsHttpToken","ranges":[{"startOffset":6657,"endOffset":6748,"count":1}],"isBlockCoverage":true},{"functionName":"checkInvalidHeaderChar","ranges":[{"startOffset":7010,"endOffset":7111,"count":1}],"isBlockCoverage":true},{"functionName":"cleanParser","ranges":[{"startOffset":7113,"endOffset":7495,"count":2}],"isBlockCoverage":true},{"functionName":"prepareError","ranges":[{"startOffset":7497,"endOffset":7690,"count":0}],"isBlockCoverage":false},{"functionName":"isLenient","ranges":[{"startOffset":7720,"endOffset":7905,"count":1},{"startOffset":7768,"endOffset":7785,"count":0},{"startOffset":7787,"endOffset":7874,"count":0}],"isBlockCoverage":true}]},{"scriptId":"775","url":"node:internal/freelist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":false},{"functionName":"FreeList","ranges":[{"startOffset":76,"endOffset":194,"count":1}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":198,"endOffset":317,"count":1},{"startOffset":240,"endOffset":263,"count":0}],"isBlockCoverage":true},{"functionName":"free","ranges":[{"startOffset":321,"endOffset":445,"count":1},{"startOffset":423,"endOffset":444,"count":0}],"isBlockCoverage":true}]},{"scriptId":"776","url":"node:_http_incoming","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14903,"count":1}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":1648,"endOffset":1751,"count":1}],"isBlockCoverage":true},{"functionName":"readStop","ranges":[{"startOffset":1753,"endOffset":1816,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingMessage","ranges":[{"startOffset":1882,"endOffset":2865,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3075,"endOffset":3115,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3124,"endOffset":3166,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3260,"endOffset":3557,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3566,"endOffset":3611,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3713,"endOffset":4050,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4059,"endOffset":4112,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4207,"endOffset":4510,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4519,"endOffset":4565,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4668,"endOffset":5011,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5020,"endOffset":5074,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":5120,"endOffset":5258,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":5737,"endOffset":6114,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":6357,"endOffset":7153,"count":1},{"startOffset":6431,"endOffset":6487,"count":0},{"startOffset":6850,"endOffset":7094,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6924,"endOffset":7088,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLines","ranges":[{"startOffset":7217,"endOffset":7676,"count":1},{"startOffset":7328,"endOffset":7431,"count":0},{"startOffset":7553,"endOffset":7670,"count":0}],"isBlockCoverage":true},{"functionName":"matchKnownFields","ranges":[{"startOffset":8398,"endOffset":12292,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLine","ranges":[{"startOffset":12903,"endOffset":13951,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLineDistinct","ranges":[{"startOffset":14028,"endOffset":14221,"count":0}],"isBlockCoverage":false},{"functionName":"_dump","ranges":[{"startOffset":14344,"endOffset":14585,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":14588,"endOffset":14835,"count":1},{"startOffset":14792,"endOffset":14807,"count":0}],"isBlockCoverage":true}]},{"scriptId":"777","url":"node:_http_outgoing","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34356,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2763,"endOffset":2788,"count":1}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":3097,"endOffset":3105,"count":2}],"isBlockCoverage":true},{"functionName":"isCookieField","ranges":[{"startOffset":3348,"endOffset":3448,"count":0}],"isBlockCoverage":false},{"functionName":"isContentDispositionField","ranges":[{"startOffset":3450,"endOffset":3576,"count":1},{"startOffset":3515,"endOffset":3573,"count":0}],"isBlockCoverage":true},{"functionName":"OutgoingMessage","ranges":[{"startOffset":3578,"endOffset":5102,"count":1},{"startOffset":4969,"endOffset":4984,"count":0},{"startOffset":5061,"endOffset":5090,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5300,"endOffset":5338,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5426,"endOffset":5462,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5560,"endOffset":5702,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5802,"endOffset":5831,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5927,"endOffset":6015,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6118,"endOffset":6212,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6308,"endOffset":6419,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6537,"endOffset":6583,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6679,"endOffset":7164,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7325,"endOffset":7365,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7374,"endOffset":7416,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7538,"endOffset":7994,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8094,"endOffset":8544,"count":0}],"isBlockCoverage":false},{"functionName":"_renderHeaders","ranges":[{"startOffset":8663,"endOffset":9167,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.cork","ranges":[{"startOffset":9203,"endOffset":9298,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.uncork","ranges":[{"startOffset":9336,"endOffset":9452,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":9494,"endOffset":9788,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":10031,"endOffset":10343,"count":0}],"isBlockCoverage":false},{"functionName":"_send","ranges":[{"startOffset":10453,"endOffset":11404,"count":1},{"startOffset":11004,"endOffset":11016,"count":0},{"startOffset":11060,"endOffset":11306,"count":0}],"isBlockCoverage":true},{"functionName":"_writeRaw","ranges":[{"startOffset":11456,"endOffset":12306,"count":1},{"startOffset":11548,"endOffset":11565,"count":0},{"startOffset":11567,"endOffset":11714,"count":0},{"startOffset":11754,"endOffset":11805,"count":0},{"startOffset":11818,"endOffset":11847,"count":0},{"startOffset":11848,"endOffset":11864,"count":0},{"startOffset":11866,"endOffset":12086,"count":0}],"isBlockCoverage":true},{"functionName":"_storeHeader","ranges":[{"startOffset":12364,"endOffset":16976,"count":1},{"startOffset":12905,"endOffset":13627,"count":0},{"startOffset":13697,"endOffset":13711,"count":0},{"startOffset":13713,"endOffset":13763,"count":0},{"startOffset":14357,"endOffset":14443,"count":0},{"startOffset":14445,"endOffset":14628,"count":0},{"startOffset":14683,"endOffset":14745,"count":0},{"startOffset":14829,"endOffset":14905,"count":0},{"startOffset":14935,"endOffset":14973,"count":0},{"startOffset":14975,"endOffset":15023,"count":0},{"startOffset":15054,"endOffset":15454,"count":0},{"startOffset":15600,"endOffset":15716,"count":0},{"startOffset":15793,"endOffset":16386,"count":0},{"startOffset":16711,"endOffset":16758,"count":0},{"startOffset":16959,"endOffset":16974,"count":0}],"isBlockCoverage":true},{"functionName":"processHeader","ranges":[{"startOffset":16978,"endOffset":18120,"count":1},{"startOffset":17058,"endOffset":17082,"count":0},{"startOffset":17325,"endOffset":17347,"count":0},{"startOffset":17349,"endOffset":17595,"count":0},{"startOffset":17624,"endOffset":18068,"count":0}],"isBlockCoverage":true},{"functionName":"storeHeader","ranges":[{"startOffset":18122,"endOffset":18321,"count":1},{"startOffset":18200,"endOffset":18232,"count":0}],"isBlockCoverage":true},{"functionName":"matchHeader","ranges":[{"startOffset":18323,"endOffset":19247,"count":1},{"startOffset":18422,"endOffset":18429,"count":0},{"startOffset":18498,"endOffset":18736,"count":0},{"startOffset":18741,"endOffset":18932,"count":0},{"startOffset":18937,"endOffset":19071,"count":0},{"startOffset":19076,"endOffset":19088,"count":0},{"startOffset":19093,"endOffset":19107,"count":0},{"startOffset":19112,"endOffset":19167,"count":0},{"startOffset":19172,"endOffset":19241,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19292,"endOffset":19454,"count":1},{"startOffset":19379,"endOffset":19452,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19502,"endOffset":19772,"count":1},{"startOffset":19548,"endOffset":19611,"count":0},{"startOffset":19649,"endOffset":19770,"count":0}],"isBlockCoverage":true},{"functionName":"parseUniqueHeadersOption","ranges":[{"startOffset":19776,"endOffset":20046,"count":1},{"startOffset":19873,"endOffset":20045,"count":0}],"isBlockCoverage":true},{"functionName":"setHeader","ranges":[{"startOffset":20086,"endOffset":20446,"count":1},{"startOffset":20140,"endOffset":20189,"count":0}],"isBlockCoverage":true},{"functionName":"setHeaders","ranges":[{"startOffset":20488,"endOffset":20912,"count":0}],"isBlockCoverage":false},{"functionName":"appendHeader","ranges":[{"startOffset":20956,"endOffset":21692,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":21734,"endOffset":21956,"count":3},{"startOffset":21859,"endOffset":21866,"count":1},{"startOffset":21866,"endOffset":21942,"count":2},{"startOffset":21942,"endOffset":21953,"count":1}],"isBlockCoverage":true},{"functionName":"getHeaderNames","ranges":[{"startOffset":22069,"endOffset":22172,"count":0}],"isBlockCoverage":false},{"functionName":"getRawHeaderNames","ranges":[{"startOffset":22292,"endOffset":22693,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":22795,"endOffset":23204,"count":0}],"isBlockCoverage":false},{"functionName":"hasHeader","ranges":[{"startOffset":23246,"endOffset":23404,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":23449,"endOffset":24014,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":24062,"endOffset":24153,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24289,"endOffset":24326,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24426,"endOffset":24462,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24566,"endOffset":24648,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":24727,"endOffset":24980,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":24983,"endOffset":25344,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNt","ranges":[{"startOffset":25346,"endOffset":25495,"count":0}],"isBlockCoverage":false},{"functionName":"strictContentLength","ranges":[{"startOffset":25497,"endOffset":25731,"count":1},{"startOffset":25572,"endOffset":25605,"count":0},{"startOffset":25606,"endOffset":25625,"count":0},{"startOffset":25626,"endOffset":25653,"count":0},{"startOffset":25654,"endOffset":25681,"count":0},{"startOffset":25682,"endOffset":25724,"count":0}],"isBlockCoverage":true},{"functionName":"write_","ranges":[{"startOffset":25733,"endOffset":27939,"count":0}],"isBlockCoverage":false},{"functionName":"connectionCorkNT","ranges":[{"startOffset":27942,"endOffset":27994,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":28036,"endOffset":29471,"count":0}],"isBlockCoverage":false},{"functionName":"onFinish","ranges":[{"startOffset":29474,"endOffset":29594,"count":1},{"startOffset":29560,"endOffset":29567,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":29628,"endOffset":31590,"count":1},{"startOffset":29705,"endOffset":29771,"count":0},{"startOffset":29813,"endOffset":29864,"count":0},{"startOffset":29879,"endOffset":30170,"count":0},{"startOffset":30195,"endOffset":30419,"count":0},{"startOffset":30467,"endOffset":30500,"count":0},{"startOffset":30606,"endOffset":30636,"count":0},{"startOffset":30670,"endOffset":30716,"count":0},{"startOffset":30718,"endOffset":30813,"count":0},{"startOffset":30910,"endOffset":30983,"count":0},{"startOffset":31011,"endOffset":31033,"count":0},{"startOffset":31034,"endOffset":31042,"count":0},{"startOffset":31087,"endOffset":31128,"count":0},{"startOffset":31149,"endOffset":31264,"count":0},{"startOffset":31482,"endOffset":31502,"count":0},{"startOffset":31503,"endOffset":31545,"count":0},{"startOffset":31547,"endOffset":31572,"count":0}],"isBlockCoverage":true},{"functionName":"_finish","ranges":[{"startOffset":31764,"endOffset":31835,"count":1}],"isBlockCoverage":true},{"functionName":"_flush","ranges":[{"startOffset":32629,"endOffset":33059,"count":1},{"startOffset":32953,"endOffset":33053,"count":0}],"isBlockCoverage":true},{"functionName":"_flushOutput","ranges":[{"startOffset":33103,"endOffset":33746,"count":1},{"startOffset":33159,"endOffset":33204,"count":0},{"startOffset":33282,"endOffset":33299,"count":0}],"isBlockCoverage":true},{"functionName":"flushHeaders","ranges":[{"startOffset":33791,"endOffset":33922,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":33958,"endOffset":34100,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.<computed>","ranges":[{"startOffset":34158,"endOffset":34203,"count":0}],"isBlockCoverage":false}]},{"scriptId":"778","url":"node:internal/http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1195,"count":1}],"isBlockCoverage":false},{"functionName":"utcDate","ranges":[{"startOffset":349,"endOffset":416,"count":0}],"isBlockCoverage":false},{"functionName":"cache","ranges":[{"startOffset":418,"endOffset":575,"count":0}],"isBlockCoverage":false},{"functionName":"resetCache","ranges":[{"startOffset":577,"endOffset":626,"count":0}],"isBlockCoverage":false},{"functionName":"getNextTraceEventId","ranges":[{"startOffset":651,"endOffset":710,"count":0}],"isBlockCoverage":false},{"functionName":"isTraceHTTPEnabled","ranges":[{"startOffset":712,"endOffset":791,"count":2}],"isBlockCoverage":true},{"functionName":"traceBegin","ranges":[{"startOffset":839,"endOffset":927,"count":0}],"isBlockCoverage":false},{"functionName":"traceEnd","ranges":[{"startOffset":929,"endOffset":1015,"count":0}],"isBlockCoverage":false}]},{"scriptId":"779","url":"node:_http_client","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28466,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3171,"endOffset":3196,"count":1}],"isBlockCoverage":true},{"functionName":"validateHost","ranges":[{"startOffset":3441,"endOffset":3734,"count":1},{"startOffset":3548,"endOffset":3717,"count":0}],"isBlockCoverage":true},{"functionName":"HTTPClientAsyncResource","ranges":[{"startOffset":3770,"endOffset":3840,"count":1}],"isBlockCoverage":true},{"functionName":"ClientRequest","ranges":[{"startOffset":3844,"endOffset":11267,"count":1},{"startOffset":3971,"endOffset":4049,"count":0},{"startOffset":4139,"endOffset":4207,"count":0},{"startOffset":4286,"endOffset":4301,"count":0},{"startOffset":4306,"endOffset":4367,"count":0},{"startOffset":4443,"endOffset":4463,"count":0},{"startOffset":4488,"endOffset":4537,"count":0},{"startOffset":4797,"endOffset":5027,"count":0},{"startOffset":5087,"endOffset":5111,"count":0},{"startOffset":5372,"endOffset":5500,"count":0},{"startOffset":5543,"endOffset":5612,"count":0},{"startOffset":5778,"endOffset":5783,"count":0},{"startOffset":5858,"endOffset":5923,"count":0},{"startOffset":5924,"endOffset":5938,"count":0},{"startOffset":5990,"endOffset":6017,"count":0},{"startOffset":6103,"endOffset":6163,"count":0},{"startOffset":6212,"endOffset":6251,"count":0},{"startOffset":6384,"endOffset":6402,"count":0},{"startOffset":6404,"endOffset":6481,"count":0},{"startOffset":6504,"endOffset":6513,"count":0},{"startOffset":6515,"endOffset":6684,"count":0},{"startOffset":6817,"endOffset":6868,"count":0},{"startOffset":7005,"endOffset":7081,"count":0},{"startOffset":7182,"endOffset":7270,"count":0},{"startOffset":7360,"endOffset":7366,"count":0},{"startOffset":7439,"endOffset":7465,"count":0},{"startOffset":7466,"endOffset":7494,"count":0},{"startOffset":7495,"endOffset":7524,"count":0},{"startOffset":7525,"endOffset":7552,"count":0},{"startOffset":7553,"endOffset":7582,"count":0},{"startOffset":7635,"endOffset":7691,"count":0},{"startOffset":8389,"endOffset":8463,"count":0},{"startOffset":8571,"endOffset":8870,"count":0},{"startOffset":9233,"endOffset":9300,"count":0},{"startOffset":9301,"endOffset":9361,"count":0},{"startOffset":9372,"endOffset":9421,"count":0},{"startOffset":9464,"endOffset":9507,"count":0},{"startOffset":9578,"endOffset":9613,"count":0},{"startOffset":9615,"endOffset":9739,"count":0},{"startOffset":9775,"endOffset":9985,"count":0},{"startOffset":9989,"endOffset":10111,"count":0},{"startOffset":10255,"endOffset":10348,"count":0},{"startOffset":10450,"endOffset":11265,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10657,"endOffset":10821,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":11431,"endOffset":12204,"count":1},{"startOffset":11594,"endOffset":11927,"count":0},{"startOffset":11978,"endOffset":12054,"count":0},{"startOffset":12083,"endOffset":12202,"count":0}],"isBlockCoverage":true},{"functionName":"_implicitHeader","ranges":[{"startOffset":12249,"endOffset":12461,"count":1},{"startOffset":12298,"endOffset":12350,"count":0}],"isBlockCoverage":true},{"functionName":"abort","ranges":[{"startOffset":12496,"endOffset":12634,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":12671,"endOffset":12947,"count":0}],"isBlockCoverage":false},{"functionName":"emitAbortNT","ranges":[{"startOffset":12950,"endOffset":13000,"count":0}],"isBlockCoverage":false},{"functionName":"ondrain","ranges":[{"startOffset":13002,"endOffset":13162,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseListener","ranges":[{"startOffset":13164,"endOffset":14331,"count":1},{"startOffset":13554,"endOffset":13611,"count":0},{"startOffset":13697,"endOffset":13726,"count":0},{"startOffset":13730,"endOffset":14057,"count":0},{"startOffset":14266,"endOffset":14329,"count":0}],"isBlockCoverage":true},{"functionName":"socketErrorListener","ranges":[{"startOffset":14333,"endOffset":14974,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":14976,"endOffset":15462,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":15464,"endOffset":17847,"count":1},{"startOffset":15686,"endOffset":15972,"count":0},{"startOffset":16026,"endOffset":17213,"count":0}],"isBlockCoverage":true},{"functionName":"statusIsInformational","ranges":[{"startOffset":17849,"endOffset":18084,"count":2},{"startOffset":18046,"endOffset":18062,"count":0},{"startOffset":18063,"endOffset":18080,"count":0}],"isBlockCoverage":true},{"functionName":"parserOnIncomingClient","ranges":[{"startOffset":18096,"endOffset":21153,"count":1},{"startOffset":18271,"endOffset":18433,"count":0},{"startOffset":18512,"endOffset":18521,"count":0},{"startOffset":18637,"endOffset":18716,"count":0},{"startOffset":18763,"endOffset":19467,"count":0},{"startOffset":19495,"endOffset":19514,"count":0},{"startOffset":19515,"endOffset":19539,"count":0},{"startOffset":19541,"endOffset":19759,"count":0},{"startOffset":19841,"endOffset":19863,"count":0},{"startOffset":19865,"endOffset":20089,"count":0},{"startOffset":20142,"endOffset":20240,"count":0},{"startOffset":20268,"endOffset":20308,"count":0},{"startOffset":20310,"endOffset":20443,"count":0},{"startOffset":20907,"endOffset":20919,"count":0},{"startOffset":20950,"endOffset":20959,"count":0},{"startOffset":21033,"endOffset":21112,"count":0}],"isBlockCoverage":true},{"functionName":"responseKeepAlive","ranges":[{"startOffset":21165,"endOffset":22234,"count":0}],"isBlockCoverage":false},{"functionName":"responseOnEnd","ranges":[{"startOffset":22236,"endOffset":23393,"count":1},{"startOffset":22356,"endOffset":22409,"count":0},{"startOffset":22675,"endOffset":22708,"count":0},{"startOffset":22748,"endOffset":23391,"count":0}],"isBlockCoverage":true},{"functionName":"responseOnTimeout","ranges":[{"startOffset":23395,"endOffset":23546,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnFinish","ranges":[{"startOffset":23688,"endOffset":23808,"count":0}],"isBlockCoverage":false},{"functionName":"emitFreeNT","ranges":[{"startOffset":23810,"endOffset":23934,"count":0}],"isBlockCoverage":false},{"functionName":"tickOnSocket","ranges":[{"startOffset":23936,"endOffset":25116,"count":1},{"startOffset":24103,"endOffset":24127,"count":0},{"startOffset":24319,"endOffset":24332,"count":0},{"startOffset":24587,"endOffset":24646,"count":0},{"startOffset":25049,"endOffset":25084,"count":0}],"isBlockCoverage":true},{"functionName":"emitRequestTimeout","ranges":[{"startOffset":25118,"endOffset":25226,"count":0}],"isBlockCoverage":false},{"functionName":"listenSocketTimeout","ranges":[{"startOffset":25228,"endOffset":25619,"count":0}],"isBlockCoverage":false},{"functionName":"onSocket","ranges":[{"startOffset":25656,"endOffset":25827,"count":1}],"isBlockCoverage":true},{"functionName":"onSocketNT","ranges":[{"startOffset":25830,"endOffset":26624,"count":1},{"startOffset":25898,"endOffset":26562,"count":0}],"isBlockCoverage":true},{"functionName":"_destroy","ranges":[{"startOffset":25931,"endOffset":26168,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26337,"endOffset":26486,"count":0}],"isBlockCoverage":false},{"functionName":"_deferToConnect","ranges":[{"startOffset":26685,"endOffset":27437,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":27476,"endOffset":27841,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketTimeout","ranges":[{"startOffset":27844,"endOffset":28030,"count":0}],"isBlockCoverage":false},{"functionName":"setNoDelay","ranges":[{"startOffset":28069,"endOffset":28150,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketKeepAlive","ranges":[{"startOffset":28202,"endOffset":28327,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":28369,"endOffset":28424,"count":0}],"isBlockCoverage":false}]},{"scriptId":"780","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-electron@2.5.2/node_modules/@vscode/test-electron/out/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17478,"count":1},{"startOffset":759,"endOffset":840,"count":0},{"startOffset":1016,"endOffset":1058,"count":0},{"startOffset":3724,"endOffset":3734,"count":0},{"startOffset":3755,"endOffset":3895,"count":0},{"startOffset":3900,"endOffset":4057,"count":0},{"startOffset":5648,"endOffset":5833,"count":0},{"startOffset":5874,"endOffset":5978,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":440,"endOffset":757,"count":16},{"startOffset":584,"endOffset":599,"count":0},{"startOffset":616,"endOffset":636,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":679,"endOffset":706,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":762,"endOffset":839,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":923,"endOffset":1014,"count":1}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":1018,"endOffset":1058,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":1111,"endOffset":1391,"count":2},{"startOffset":1159,"endOffset":1333,"count":1},{"startOffset":1232,"endOffset":1333,"count":16},{"startOffset":1333,"endOffset":1390,"count":1}],"isBlockCoverage":true},{"functionName":"isPlatformWindows","ranges":[{"startOffset":3069,"endOffset":3109,"count":3}],"isBlockCoverage":true},{"functionName":"isPlatformDarwin","ranges":[{"startOffset":3183,"endOffset":3224,"count":3}],"isBlockCoverage":true},{"functionName":"isPlatformLinux","ranges":[{"startOffset":3295,"endOffset":3335,"count":0}],"isBlockCoverage":false},{"functionName":"isPlatformServer","ranges":[{"startOffset":3405,"endOffset":3446,"count":3}],"isBlockCoverage":true},{"functionName":"isPlatformCLI","ranges":[{"startOffset":3515,"endOffset":3554,"count":3}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":4128,"endOffset":4367,"count":0}],"isBlockCoverage":false},{"functionName":"Version","ranges":[{"startOffset":4372,"endOffset":4474,"count":2}],"isBlockCoverage":true},{"functionName":"get isCommit","ranges":[{"startOffset":4479,"endOffset":4548,"count":0}],"isBlockCoverage":false},{"functionName":"get isInsiders","ranges":[{"startOffset":4553,"endOffset":4648,"count":2}],"isBlockCoverage":true},{"functionName":"get isStable","ranges":[{"startOffset":4653,"endOffset":4755,"count":2}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":4760,"endOffset":4847,"count":2},{"startOffset":4820,"endOffset":4839,"count":0}],"isBlockCoverage":true},{"functionName":"getVSCodeDownloadUrl","ranges":[{"startOffset":4877,"endOffset":5549,"count":0}],"isBlockCoverage":false},{"functionName":"urlToOptions","ranges":[{"startOffset":5979,"endOffset":6315,"count":1},{"startOffset":6091,"endOffset":6129,"count":0},{"startOffset":6131,"endOffset":6175,"count":0},{"startOffset":6202,"endOffset":6241,"count":0},{"startOffset":6243,"endOffset":6293,"count":0}],"isBlockCoverage":true},{"functionName":"downloadDirToExecutablePath","ranges":[{"startOffset":6316,"endOffset":7135,"count":2},{"startOffset":6419,"endOffset":6595,"count":0},{"startOffset":6647,"endOffset":6771,"count":0},{"startOffset":6837,"endOffset":6898,"count":0},{"startOffset":7056,"endOffset":7127,"count":0}],"isBlockCoverage":true},{"functionName":"insidersDownloadDirToExecutablePath","ranges":[{"startOffset":7136,"endOffset":8030,"count":0}],"isBlockCoverage":false},{"functionName":"insidersDownloadDirMetadata","ranges":[{"startOffset":8031,"endOffset":9064,"count":0}],"isBlockCoverage":false},{"functionName":"getInsidersVersionMetadata","ranges":[{"startOffset":9065,"endOffset":9319,"count":0}],"isBlockCoverage":false},{"functionName":"getLatestInsidersMetadata","ranges":[{"startOffset":9320,"endOffset":9558,"count":0}],"isBlockCoverage":false},{"functionName":"resolveCliPathFromVSCodeExecutablePath","ranges":[{"startOffset":9741,"endOffset":10867,"count":1},{"startOffset":9893,"endOffset":9966,"count":0},{"startOffset":10056,"endOffset":10127,"count":0},{"startOffset":10178,"endOffset":10445,"count":0},{"startOffset":10602,"endOffset":10865,"count":0}],"isBlockCoverage":true},{"functionName":"resolveCliArgsFromVSCodeExecutablePath","ranges":[{"startOffset":11668,"endOffset":12011,"count":1}],"isBlockCoverage":true},{"functionName":"getProfileArguments","ranges":[{"startOffset":12094,"endOffset":12451,"count":2}],"isBlockCoverage":true},{"functionName":"hasArg","ranges":[{"startOffset":12452,"endOffset":12576,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12512,"endOffset":12572,"count":20}],"isBlockCoverage":true},{"functionName":"VSCodeCommandError","ranges":[{"startOffset":12622,"endOffset":12871,"count":0}],"isBlockCoverage":false},{"functionName":"runVSCodeCommand","ranges":[{"startOffset":13046,"endOffset":14489,"count":0}],"isBlockCoverage":false},{"functionName":"isDefined","ranges":[{"startOffset":14541,"endOffset":14592,"count":1}],"isBlockCoverage":true},{"functionName":"validateStream","ranges":[{"startOffset":14819,"endOffset":15678,"count":0}],"isBlockCoverage":false},{"functionName":"streamToBuffer","ranges":[{"startOffset":15722,"endOffset":16004,"count":0}],"isBlockCoverage":false},{"functionName":"isSubdirectory","ranges":[{"startOffset":16063,"endOffset":16225,"count":0}],"isBlockCoverage":false},{"functionName":"onceWithoutRejections","ranges":[{"startOffset":16340,"endOffset":16607,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16403,"endOffset":16604,"count":2},{"startOffset":16438,"endOffset":16576,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16478,"endOffset":16564,"count":0}],"isBlockCoverage":false},{"functionName":"killTree","ranges":[{"startOffset":16608,"endOffset":17477,"count":0}],"isBlockCoverage":false}]},{"scriptId":"781","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/http-proxy-agent@7.0.2/node_modules/http-proxy-agent/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6088,"count":1},{"startOffset":407,"endOffset":488,"count":0},{"startOffset":664,"endOffset":706,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88,"endOffset":405,"count":35},{"startOffset":232,"endOffset":247,"count":3},{"startOffset":248,"endOffset":284,"count":32},{"startOffset":264,"endOffset":284,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":327,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":410,"endOffset":487,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":571,"endOffset":662,"count":2}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":666,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":759,"endOffset":1039,"count":2},{"startOffset":807,"endOffset":818,"count":0},{"startOffset":880,"endOffset":981,"count":35}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":1097,"endOffset":1178,"count":1},{"startOffset":1149,"endOffset":1154,"count":0}],"isBlockCoverage":true},{"functionName":"HttpProxyAgent","ranges":[{"startOffset":1784,"endOffset":2483,"count":0}],"isBlockCoverage":false},{"functionName":"addRequest","ranges":[{"startOffset":2488,"endOffset":2697,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestProps","ranges":[{"startOffset":2702,"endOffset":4061,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":4066,"endOffset":5777,"count":0}],"isBlockCoverage":false},{"functionName":"omit","ranges":[{"startOffset":5867,"endOffset":6054,"count":0}],"isBlockCoverage":false}]},{"scriptId":"782","url":"node:internal/blocklist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3880,"count":1}],"isBlockCoverage":false},{"functionName":"BlockList","ranges":[{"startOffset":765,"endOffset":880,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":884,"endOffset":1138,"count":0}],"isBlockCoverage":false},{"functionName":"addAddress","ranges":[{"startOffset":1142,"endOffset":1463,"count":0}],"isBlockCoverage":false},{"functionName":"addRange","ranges":[{"startOffset":1467,"endOffset":2145,"count":0}],"isBlockCoverage":false},{"functionName":"addSubnet","ranges":[{"startOffset":2149,"endOffset":2694,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2698,"endOffset":3163,"count":0}],"isBlockCoverage":false},{"functionName":"get rules","ranges":[{"startOffset":3167,"endOffset":3221,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3225,"endOffset":3382,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3386,"endOffset":3486,"count":0}],"isBlockCoverage":false},{"functionName":"InternalBlockList","ranges":[{"startOffset":3541,"endOffset":3672,"count":0}],"isBlockCoverage":false}]},{"scriptId":"783","url":"node:internal/socketaddress","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3388,"count":1}],"isBlockCoverage":false},{"functionName":"isSocketAddress","ranges":[{"startOffset":743,"endOffset":814,"count":0}],"isBlockCoverage":false},{"functionName":"SocketAddress","ranges":[{"startOffset":818,"endOffset":1787,"count":0}],"isBlockCoverage":false},{"functionName":"get address","ranges":[{"startOffset":1791,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":1848,"endOffset":1895,"count":0}],"isBlockCoverage":false},{"functionName":"get family","ranges":[{"startOffset":1899,"endOffset":1980,"count":0}],"isBlockCoverage":false},{"functionName":"get flowlabel","ranges":[{"startOffset":1984,"endOffset":2092,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2096,"endOffset":2335,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2339,"endOffset":2504,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2508,"endOffset":2714,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2718,"endOffset":2864,"count":0}],"isBlockCoverage":false},{"functionName":"InternalSocketAddress","ranges":[{"startOffset":2923,"endOffset":3143,"count":0}],"isBlockCoverage":false}]},{"scriptId":"784","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/debug@4.4.1_supports-color@8.1.1/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"785","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/debug@4.4.1_supports-color@8.1.1/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4728,"count":1},{"startOffset":816,"endOffset":832,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":119}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":3},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3225,"endOffset":3341,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3422,"endOffset":3679,"count":1},{"startOffset":3505,"endOffset":3677,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3796,"endOffset":3842,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":4007,"endOffset":4210,"count":3},{"startOffset":4143,"endOffset":4208,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4375,"endOffset":4531,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4624,"endOffset":4726,"count":0}],"isBlockCoverage":false}]},{"scriptId":"786","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/supports-color@8.1.1/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3065,"count":1},{"startOffset":254,"endOffset":278,"count":0},{"startOffset":382,"endOffset":406,"count":0}],"isBlockCoverage":true},{"functionName":"envForceColor","ranges":[{"startOffset":408,"endOffset":672,"count":2},{"startOffset":462,"endOffset":670,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":674,"endOffset":832,"count":2},{"startOffset":725,"endOffset":745,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":834,"endOffset":2729,"count":2},{"startOffset":990,"endOffset":1031,"count":0},{"startOffset":1081,"endOffset":1099,"count":0},{"startOffset":1125,"endOffset":1141,"count":0},{"startOffset":1251,"endOffset":1269,"count":0},{"startOffset":1299,"endOffset":1317,"count":0},{"startOffset":1354,"endOffset":1381,"count":0},{"startOffset":1383,"endOffset":1399,"count":0},{"startOffset":1458,"endOffset":1476,"count":0},{"startOffset":1513,"endOffset":1868,"count":0},{"startOffset":1888,"endOffset":2077,"count":0},{"startOffset":2111,"endOffset":2192,"count":0},{"startOffset":2246,"endOffset":2728,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1989,"endOffset":2008,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2731,"endOffset":2909,"count":2}],"isBlockCoverage":true}]},{"scriptId":"787","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/debug@4.4.1_supports-color@8.1.1/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6915,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6889,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1012,"endOffset":1290,"count":3},{"startOffset":1108,"endOffset":1213,"count":71}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1460,"endOffset":3626,"count":3}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1585,"endOffset":2796,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3149,"endOffset":3415,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3425,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3629,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3993,"endOffset":4436,"count":1},{"startOffset":4209,"endOffset":4213,"count":0},{"startOffset":4338,"endOffset":4385,"count":0}],"isBlockCoverage":true},{"functionName":"matchesTemplate","ranges":[{"startOffset":4629,"endOffset":5656,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":5742,"endOffset":5933,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":6076,"endOffset":6330,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":6419,"endOffset":6528,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":6647,"endOffset":6823,"count":0}],"isBlockCoverage":false}]},{"scriptId":"788","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/ms@2.1.3/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3024,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":792,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":916,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2097,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2511,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2883,"endOffset":3023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"789","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/agent-base@7.1.4/node_modules/agent-base/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7324,"count":1},{"startOffset":407,"endOffset":488,"count":0},{"startOffset":664,"endOffset":706,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88,"endOffset":405,"count":38},{"startOffset":232,"endOffset":247,"count":4},{"startOffset":248,"endOffset":284,"count":34},{"startOffset":264,"endOffset":284,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":327,"endOffset":354,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":410,"endOffset":487,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":571,"endOffset":662,"count":2}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":666,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":759,"endOffset":1039,"count":2},{"startOffset":807,"endOffset":818,"count":0},{"startOffset":880,"endOffset":981,"count":35}],"isBlockCoverage":true},{"functionName":"__exportStar","ranges":[{"startOffset":1091,"endOffset":1242,"count":1},{"startOffset":1135,"endOffset":1240,"count":3}],"isBlockCoverage":true},{"functionName":"Agent","ranges":[{"startOffset":1584,"endOffset":1659,"count":0}],"isBlockCoverage":false},{"functionName":"isSecureEndpoint","ranges":[{"startOffset":1743,"endOffset":2961,"count":0}],"isBlockCoverage":false},{"functionName":"incrementSockets","ranges":[{"startOffset":3381,"endOffset":4328,"count":0}],"isBlockCoverage":false},{"functionName":"decrementSockets","ranges":[{"startOffset":4333,"endOffset":4914,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":5059,"endOffset":5443,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":5448,"endOffset":6507,"count":0}],"isBlockCoverage":false},{"functionName":"createConnection","ranges":[{"startOffset":6512,"endOffset":6780,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultPort","ranges":[{"startOffset":6785,"endOffset":6910,"count":0}],"isBlockCoverage":false},{"functionName":"set defaultPort","ranges":[{"startOffset":6915,"endOffset":7025,"count":0}],"isBlockCoverage":false},{"functionName":"get protocol","ranges":[{"startOffset":7030,"endOffset":7156,"count":0}],"isBlockCoverage":false},{"functionName":"set protocol","ranges":[{"startOffset":7161,"endOffset":7265,"count":0}],"isBlockCoverage":false}]},{"scriptId":"790","url":"node:http","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5484,"count":1}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":2125,"endOffset":2217,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":4167,"endOffset":4251,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4416,"endOffset":4518,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxIdleHTTPParsers","ranges":[{"startOffset":4829,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5045,"endOffset":5254,"count":3},{"startOffset":5090,"endOffset":5223,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5378,"endOffset":5423,"count":3}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":5427,"endOffset":5478,"count":0}],"isBlockCoverage":false}]},{"scriptId":"791","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/agent-base@7.1.4/node_modules/agent-base/dist/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2314,"count":1},{"startOffset":407,"endOffset":488,"count":0},{"startOffset":664,"endOffset":706,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88,"endOffset":405,"count":23},{"startOffset":232,"endOffset":247,"count":2},{"startOffset":248,"endOffset":284,"count":21},{"startOffset":264,"endOffset":284,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":327,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":410,"endOffset":487,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":571,"endOffset":662,"count":2}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":666,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":759,"endOffset":1039,"count":2},{"startOffset":807,"endOffset":818,"count":0},{"startOffset":880,"endOffset":981,"count":23}],"isBlockCoverage":true},{"functionName":"toBuffer","ranges":[{"startOffset":1250,"endOffset":1476,"count":0}],"isBlockCoverage":false},{"functionName":"json","ranges":[{"startOffset":1569,"endOffset":1839,"count":0}],"isBlockCoverage":false},{"functionName":"req","ranges":[{"startOffset":1861,"endOffset":2259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"792","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/https-proxy-agent@7.0.6/node_modules/https-proxy-agent/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7451,"count":1},{"startOffset":407,"endOffset":488,"count":0},{"startOffset":664,"endOffset":706,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88,"endOffset":405,"count":35},{"startOffset":232,"endOffset":247,"count":3},{"startOffset":248,"endOffset":284,"count":32},{"startOffset":264,"endOffset":284,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":327,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":410,"endOffset":487,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":571,"endOffset":662,"count":2}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":666,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":759,"endOffset":1039,"count":2},{"startOffset":807,"endOffset":818,"count":0},{"startOffset":880,"endOffset":981,"count":35}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":1097,"endOffset":1178,"count":2},{"startOffset":1149,"endOffset":1154,"count":0}],"isBlockCoverage":true},{"functionName":"setServernameFromNonIpHost","ranges":[{"startOffset":1697,"endOffset":1932,"count":0}],"isBlockCoverage":false},{"functionName":"HttpsProxyAgent","ranges":[{"startOffset":2562,"endOffset":3430,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":3543,"endOffset":7088,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":7181,"endOffset":7229,"count":0}],"isBlockCoverage":false},{"functionName":"omit","ranges":[{"startOffset":7230,"endOffset":7417,"count":0}],"isBlockCoverage":false}]},{"scriptId":"793","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/https-proxy-agent@7.0.6/node_modules/https-proxy-agent/dist/parse-proxy-response.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3908,"count":1}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":70,"endOffset":151,"count":1},{"startOffset":122,"endOffset":127,"count":0}],"isBlockCoverage":true},{"functionName":"parseProxyResponse","ranges":[{"startOffset":382,"endOffset":3810,"count":0}],"isBlockCoverage":false}]},{"scriptId":"794","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@vscode+test-electron@2.5.2/node_modules/@vscode/test-electron/out/runTest.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5567,"count":1},{"startOffset":759,"endOffset":840,"count":0},{"startOffset":1016,"endOffset":1058,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":440,"endOffset":757,"count":9},{"startOffset":584,"endOffset":599,"count":0},{"startOffset":616,"endOffset":636,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":679,"endOffset":706,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":762,"endOffset":839,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":923,"endOffset":1014,"count":1}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":1018,"endOffset":1058,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":1111,"endOffset":1391,"count":1},{"startOffset":1159,"endOffset":1170,"count":0},{"startOffset":1232,"endOffset":1333,"count":9}],"isBlockCoverage":true},{"functionName":"runTests","ranges":[{"startOffset":1764,"endOffset":2955,"count":1},{"startOffset":2571,"endOffset":2673,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2510,"endOffset":2562,"count":1}],"isBlockCoverage":true},{"functionName":"innerRunTests","ranges":[{"startOffset":2981,"endOffset":5273,"count":1},{"startOffset":3191,"endOffset":3210,"count":0},{"startOffset":5182,"endOffset":5220,"count":0},{"startOffset":5222,"endOffset":5254,"count":0}],"isBlockCoverage":true},{"functionName":"ctrlc1","ranges":[{"startOffset":3307,"endOffset":3594,"count":0}],"isBlockCoverage":false},{"functionName":"ctrlc2","ranges":[{"startOffset":3615,"endOffset":3803,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3834,"endOffset":4917,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3960,"endOffset":3990,"count":30}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4023,"endOffset":4053,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4080,"endOffset":4166,"count":0}],"isBlockCoverage":false},{"functionName":"onProcessClosed","ranges":[{"startOffset":4207,"endOffset":4828,"count":1},{"startOffset":4274,"endOffset":4313,"count":0},{"startOffset":4388,"endOffset":4397,"count":0},{"startOffset":4654,"endOffset":4757,"count":0}],"isBlockCoverage":true},{"functionName":"TestRunFailedError","ranges":[{"startOffset":5319,"endOffset":5515,"count":0}],"isBlockCoverage":false}]},{"scriptId":"795","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/ora@8.2.0/node_modules/ora/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9672,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":399,"endOffset":8653,"count":4}],"isBlockCoverage":true},{"functionName":"Ora","ranges":[{"startOffset":662,"endOffset":2111,"count":4},{"startOffset":1196,"endOffset":1221,"count":0},{"startOffset":1326,"endOffset":1350,"count":0},{"startOffset":1653,"endOffset":2108,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1780,"endOffset":1825,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1831,"endOffset":1888,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1950,"endOffset":1993,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2054,"endOffset":2096,"count":0}],"isBlockCoverage":false},{"functionName":"get indent","ranges":[{"startOffset":2114,"endOffset":2154,"count":0}],"isBlockCoverage":false},{"functionName":"set indent","ranges":[{"startOffset":2157,"endOffset":2369,"count":4},{"startOffset":2232,"endOffset":2313,"count":0}],"isBlockCoverage":true},{"functionName":"get interval","ranges":[{"startOffset":2372,"endOffset":2456,"count":7},{"startOffset":2446,"endOffset":2452,"count":0}],"isBlockCoverage":true},{"functionName":"get spinner","ranges":[{"startOffset":2459,"endOffset":2501,"count":0}],"isBlockCoverage":false},{"functionName":"set spinner","ranges":[{"startOffset":2504,"endOffset":3230,"count":4},{"startOffset":2625,"endOffset":2775,"count":0},{"startOffset":2808,"endOffset":2850,"count":0},{"startOffset":2951,"endOffset":3227,"count":0}],"isBlockCoverage":true},{"functionName":"get text","ranges":[{"startOffset":3233,"endOffset":3269,"count":16}],"isBlockCoverage":true},{"functionName":"set text","ranges":[{"startOffset":3272,"endOffset":3346,"count":4}],"isBlockCoverage":true},{"functionName":"get prefixText","ranges":[{"startOffset":3349,"endOffset":3397,"count":0}],"isBlockCoverage":false},{"functionName":"set prefixText","ranges":[{"startOffset":3400,"endOffset":3486,"count":4}],"isBlockCoverage":true},{"functionName":"get suffixText","ranges":[{"startOffset":3489,"endOffset":3537,"count":0}],"isBlockCoverage":false},{"functionName":"set suffixText","ranges":[{"startOffset":3540,"endOffset":3626,"count":4}],"isBlockCoverage":true},{"functionName":"get isSpinning","ranges":[{"startOffset":3629,"endOffset":3683,"count":2}],"isBlockCoverage":true},{"functionName":"#getFullPrefixText","ranges":[{"startOffset":3686,"endOffset":3947,"count":20},{"startOffset":3790,"endOffset":3810,"count":16},{"startOffset":3812,"endOffset":3849,"count":0},{"startOffset":3891,"endOffset":3930,"count":0}],"isBlockCoverage":true},{"functionName":"#getFullSuffixText","ranges":[{"startOffset":3950,"endOffset":4208,"count":20},{"startOffset":4053,"endOffset":4073,"count":12},{"startOffset":4075,"endOffset":4111,"count":0},{"startOffset":4153,"endOffset":4191,"count":0}],"isBlockCoverage":true},{"functionName":"#updateLineCount","ranges":[{"startOffset":4211,"endOffset":4721,"count":16},{"startOffset":4271,"endOffset":4276,"count":0}],"isBlockCoverage":true},{"functionName":"get isEnabled","ranges":[{"startOffset":4724,"endOffset":4789,"count":0}],"isBlockCoverage":false},{"functionName":"set isEnabled","ranges":[{"startOffset":4792,"endOffset":4953,"count":0}],"isBlockCoverage":false},{"functionName":"get isSilent","ranges":[{"startOffset":4956,"endOffset":5000,"count":0}],"isBlockCoverage":false},{"functionName":"set isSilent","ranges":[{"startOffset":5003,"endOffset":5161,"count":0}],"isBlockCoverage":false},{"functionName":"frame","ranges":[{"startOffset":5164,"endOffset":6040,"count":7},{"startOffset":5352,"endOffset":5404,"count":5},{"startOffset":5750,"endOffset":5774,"count":0},{"startOffset":5848,"endOffset":5852,"count":0},{"startOffset":5945,"endOffset":5969,"count":0}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":6043,"endOffset":6491,"count":11},{"startOffset":6100,"endOffset":6121,"count":0},{"startOffset":6211,"endOffset":6308,"count":7},{"startOffset":6231,"endOffset":6273,"count":0},{"startOffset":6366,"endOffset":6411,"count":4}],"isBlockCoverage":true},{"functionName":"render","ranges":[{"startOffset":6494,"endOffset":6660,"count":7},{"startOffset":6527,"endOffset":6548,"count":0}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":6663,"endOffset":7223,"count":2},{"startOffset":6689,"endOffset":6715,"count":0},{"startOffset":6739,"endOffset":6760,"count":0},{"startOffset":6786,"endOffset":6877,"count":0},{"startOffset":6902,"endOffset":6923,"count":0}],"isBlockCoverage":true},{"functionName":"stop","ranges":[{"startOffset":7226,"endOffset":7615,"count":4},{"startOffset":7259,"endOffset":7280,"count":0},{"startOffset":7529,"endOffset":7596,"count":2}],"isBlockCoverage":true},{"functionName":"succeed","ranges":[{"startOffset":7618,"endOffset":7702,"count":4}],"isBlockCoverage":true},{"functionName":"fail","ranges":[{"startOffset":7705,"endOffset":7784,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":7787,"endOffset":7868,"count":0}],"isBlockCoverage":false},{"functionName":"info","ranges":[{"startOffset":7871,"endOffset":7949,"count":0}],"isBlockCoverage":false},{"functionName":"stopAndPersist","ranges":[{"startOffset":7952,"endOffset":8651,"count":4},{"startOffset":8005,"endOffset":8026,"count":0},{"startOffset":8193,"endOffset":8199,"count":0},{"startOffset":8230,"endOffset":8242,"count":2},{"startOffset":8285,"endOffset":8289,"count":0},{"startOffset":8360,"endOffset":8364,"count":0}],"isBlockCoverage":true},{"functionName":"ora","ranges":[{"startOffset":8670,"endOffset":8721,"count":4}],"isBlockCoverage":true},{"functionName":"oraPromise","ranges":[{"startOffset":8730,"endOffset":9620,"count":0}],"isBlockCoverage":false}]},{"scriptId":"796","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/cli-cursor@5.0.0/node_modules/cli-cursor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":694,"count":1}],"isBlockCoverage":true},{"functionName":"cliCursor.show","ranges":[{"startOffset":144,"endOffset":285,"count":4},{"startOffset":211,"endOffset":225,"count":0}],"isBlockCoverage":true},{"functionName":"cliCursor.hide","ranges":[{"startOffset":305,"endOffset":463,"count":2},{"startOffset":372,"endOffset":386,"count":0}],"isBlockCoverage":true},{"functionName":"cliCursor.toggle","ranges":[{"startOffset":485,"endOffset":665,"count":0}],"isBlockCoverage":false}]},{"scriptId":"797","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/log-symbols@6.0.0/node_modules/log-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":422,"count":1},{"startOffset":382,"endOffset":392,"count":0}],"isBlockCoverage":true}]},{"scriptId":"798","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/strip-ansi@7.1.0/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1}],"isBlockCoverage":true},{"functionName":"stripAnsi","ranges":[{"startOffset":80,"endOffset":467,"count":16},{"startOffset":142,"endOffset":220,"count":0}],"isBlockCoverage":true}]},{"scriptId":"799","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/is-interactive@2.0.0/node_modules/is-interactive/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":181,"count":1}],"isBlockCoverage":true},{"functionName":"isInteractive","ranges":[{"startOffset":15,"endOffset":180,"count":4}],"isBlockCoverage":true}]},{"scriptId":"800","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/is-unicode-supported@2.1.0/node_modules/is-unicode-supported/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":657,"count":1}],"isBlockCoverage":true},{"functionName":"isUnicodeSupported","ranges":[{"startOffset":52,"endOffset":656,"count":4},{"startOffset":236,"endOffset":324,"count":0},{"startOffset":349,"endOffset":385,"count":0},{"startOffset":408,"endOffset":446,"count":0},{"startOffset":449,"endOffset":477,"count":0},{"startOffset":480,"endOffset":508,"count":0},{"startOffset":511,"endOffset":534,"count":0},{"startOffset":537,"endOffset":563,"count":0},{"startOffset":566,"endOffset":601,"count":0},{"startOffset":604,"endOffset":653,"count":0}],"isBlockCoverage":true}]},{"scriptId":"801","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/string-width@7.2.0/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2231,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":263,"endOffset":2230,"count":16},{"startOffset":364,"endOffset":380,"count":0},{"startOffset":494,"endOffset":528,"count":0},{"startOffset":556,"endOffset":572,"count":0},{"startOffset":724,"endOffset":2212,"count":1160},{"startOffset":850,"endOffset":870,"count":0},{"startOffset":873,"endOffset":891,"count":0},{"startOffset":959,"endOffset":982,"count":0},{"startOffset":1125,"endOffset":1143,"count":0},{"startOffset":1209,"endOffset":1231,"count":0},{"startOffset":1292,"endOffset":1315,"count":0},{"startOffset":1385,"endOffset":1408,"count":0},{"startOffset":1480,"endOffset":1503,"count":0},{"startOffset":1576,"endOffset":1599,"count":0},{"startOffset":1629,"endOffset":1647,"count":0},{"startOffset":1704,"endOffset":1727,"count":0},{"startOffset":1729,"endOffset":1747,"count":0},{"startOffset":1808,"endOffset":1831,"count":0},{"startOffset":1833,"endOffset":1851,"count":0},{"startOffset":1997,"endOffset":2015,"count":0},{"startOffset":2114,"endOffset":2147,"count":0}],"isBlockCoverage":true}]},{"scriptId":"802","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/chalk@5.4.1/node_modules/chalk/source/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5900,"count":1},{"startOffset":1472,"endOffset":1706,"count":45},{"startOffset":2476,"endOffset":3149,"count":3},{"startOffset":5468,"endOffset":5471,"count":0}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":571,"endOffset":950,"count":2},{"startOffset":618,"endOffset":699,"count":1},{"startOffset":701,"endOffset":779,"count":0},{"startOffset":870,"endOffset":873,"count":0},{"startOffset":919,"endOffset":931,"count":1},{"startOffset":932,"endOffset":947,"count":1}],"isBlockCoverage":true},{"functionName":"Chalk","ranges":[{"startOffset":975,"endOffset":1084,"count":0}],"isBlockCoverage":false},{"functionName":"chalkFactory","ranges":[{"startOffset":1109,"endOffset":1275,"count":2}],"isBlockCoverage":true},{"functionName":"chalk","ranges":[{"startOffset":1137,"endOffset":1170,"count":0}],"isBlockCoverage":false},{"functionName":"createChalk","ranges":[{"startOffset":1278,"endOffset":1342,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1499,"endOffset":1699,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1728,"endOffset":1875,"count":0}],"isBlockCoverage":false},{"functionName":"getModelAnsi","ranges":[{"startOffset":1902,"endOffset":2394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2499,"endOffset":2771,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2866,"endOffset":3142,"count":0}],"isBlockCoverage":false},{"functionName":"Object.defineProperties","ranges":[{"startOffset":3189,"endOffset":3197,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3245,"endOffset":3289,"count":15}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3293,"endOffset":3343,"count":0}],"isBlockCoverage":false},{"functionName":"createStyler","ranges":[{"startOffset":3375,"endOffset":3650,"count":5},{"startOffset":3500,"endOffset":3583,"count":0}],"isBlockCoverage":true},{"functionName":"createBuilder","ranges":[{"startOffset":3675,"endOffset":4243,"count":5}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3848,"endOffset":3959,"count":15},{"startOffset":3936,"endOffset":3958,"count":0}],"isBlockCoverage":true},{"functionName":"applyStyle","ranges":[{"startOffset":4265,"endOffset":5300,"count":15},{"startOffset":4318,"endOffset":4361,"count":0},{"startOffset":4419,"endOffset":4440,"count":0},{"startOffset":4511,"endOffset":4840,"count":0},{"startOffset":5177,"endOffset":5260,"count":0}],"isBlockCoverage":true}]},{"scriptId":"803","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/stdin-discarder@0.2.2/node_modules/stdin-discarder/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1073,"count":1}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":93,"endOffset":994,"count":1}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":137,"endOffset":232,"count":2}],"isBlockCoverage":true},{"functionName":"stop","ranges":[{"startOffset":235,"endOffset":426,"count":2},{"startOffset":274,"endOffset":340,"count":0}],"isBlockCoverage":true},{"functionName":"#realStart","ranges":[{"startOffset":429,"endOffset":686,"count":2},{"startOffset":559,"endOffset":575,"count":0}],"isBlockCoverage":true},{"functionName":"#realStop","ranges":[{"startOffset":689,"endOffset":859,"count":2},{"startOffset":731,"endOffset":747,"count":0}],"isBlockCoverage":true},{"functionName":"#handleInput","ranges":[{"startOffset":862,"endOffset":992,"count":0}],"isBlockCoverage":false}]},{"scriptId":"804","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/restore-cursor@5.1.0/node_modules/restore-cursor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":386,"count":1},{"startOffset":161,"endOffset":214,"count":0},{"startOffset":343,"endOffset":353,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":258,"endOffset":341,"count":1}],"isBlockCoverage":true},{"functionName":"onExit.alwaysLast","ranges":[{"startOffset":274,"endOffset":317,"count":1}],"isBlockCoverage":true},{"functionName":"restoreCursor","ranges":[{"startOffset":345,"endOffset":353,"count":0}],"isBlockCoverage":false}]},{"scriptId":"805","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/is-unicode-supported@1.3.0/node_modules/is-unicode-supported/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":651,"count":1}],"isBlockCoverage":true},{"functionName":"isUnicodeSupported","ranges":[{"startOffset":52,"endOffset":650,"count":1},{"startOffset":188,"endOffset":258,"count":0},{"startOffset":281,"endOffset":321,"count":0},{"startOffset":346,"endOffset":390,"count":0},{"startOffset":413,"endOffset":463,"count":0},{"startOffset":466,"endOffset":506,"count":0},{"startOffset":509,"endOffset":549,"count":0},{"startOffset":552,"endOffset":587,"count":0},{"startOffset":590,"endOffset":647,"count":0}],"isBlockCoverage":true}]},{"scriptId":"806","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/get-east-asian-width@1.3.0/node_modules/get-east-asian-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":814,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":76,"endOffset":230,"count":1160},{"startOffset":146,"endOffset":228,"count":0}],"isBlockCoverage":true},{"functionName":"eastAsianWidthType","ranges":[{"startOffset":239,"endOffset":336,"count":0}],"isBlockCoverage":false},{"functionName":"eastAsianWidth","ranges":[{"startOffset":345,"endOffset":573,"count":1160},{"startOffset":513,"endOffset":538,"count":0},{"startOffset":543,"endOffset":559,"count":0}],"isBlockCoverage":true},{"functionName":"_isNarrowWidth","ranges":[{"startOffset":753,"endOffset":812,"count":0}],"isBlockCoverage":false}]},{"scriptId":"807","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/chalk@5.4.1/node_modules/chalk/source/vendor/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3865,"count":1},{"startOffset":738,"endOffset":762,"count":0},{"startOffset":869,"endOffset":893,"count":0}],"isBlockCoverage":true},{"functionName":"hasFlag","ranges":[{"startOffset":235,"endOffset":585,"count":16},{"startOffset":281,"endOffset":303,"count":0},{"startOffset":359,"endOffset":363,"count":0},{"startOffset":385,"endOffset":390,"count":0},{"startOffset":519,"endOffset":582,"count":0}],"isBlockCoverage":true},{"functionName":"envForceColor","ranges":[{"startOffset":895,"endOffset":1159,"count":2},{"startOffset":949,"endOffset":1157,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":1161,"endOffset":1320,"count":2},{"startOffset":1212,"endOffset":1232,"count":0}],"isBlockCoverage":true},{"functionName":"_supportsColor","ranges":[{"startOffset":1322,"endOffset":3504,"count":2},{"startOffset":1479,"endOffset":1520,"count":0},{"startOffset":1570,"endOffset":1588,"count":0},{"startOffset":1614,"endOffset":1630,"count":0},{"startOffset":1740,"endOffset":1758,"count":0},{"startOffset":1788,"endOffset":1806,"count":0},{"startOffset":1918,"endOffset":1940,"count":0},{"startOffset":1942,"endOffset":1958,"count":0},{"startOffset":1992,"endOffset":2019,"count":0},{"startOffset":2021,"endOffset":2037,"count":0},{"startOffset":2096,"endOffset":2114,"count":0},{"startOffset":2151,"endOffset":2508,"count":0},{"startOffset":2528,"endOffset":2786,"count":0},{"startOffset":2820,"endOffset":2901,"count":0},{"startOffset":2955,"endOffset":3503,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2589,"endOffset":2606,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2698,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"createSupportsColor","ranges":[{"startOffset":3513,"endOffset":3697,"count":2}],"isBlockCoverage":true}]},{"scriptId":"808","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/chalk@5.4.1/node_modules/chalk/source/utilities.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":997,"count":1}],"isBlockCoverage":true},{"functionName":"stringReplaceAll","ranges":[{"startOffset":78,"endOffset":552,"count":0}],"isBlockCoverage":false},{"functionName":"stringEncaseCRLFWithFirstIndex","ranges":[{"startOffset":561,"endOffset":996,"count":0}],"isBlockCoverage":false}]},{"scriptId":"809","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/ansi-regex@6.1.0/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":458,"count":1}],"isBlockCoverage":true},{"functionName":"ansiRegex","ranges":[{"startOffset":15,"endOffset":457,"count":1},{"startOffset":436,"endOffset":447,"count":0}],"isBlockCoverage":true}]},{"scriptId":"810","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/chalk@5.4.1/node_modules/chalk/source/vendor/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5256,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":55,"endOffset":105,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":71,"endOffset":105,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":128,"endOffset":186,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":144,"endOffset":186,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":209,"endOffset":297,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":225,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1834,"endOffset":5189,"count":1},{"startOffset":1947,"endOffset":2281,"count":3},{"startOffset":2007,"endOffset":2187,"count":45}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":2906,"endOffset":3404,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":3450,"endOffset":3975,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4032,"endOffset":4083,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4134,"endOffset":4895,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4949,"endOffset":5030,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5084,"endOffset":5137,"count":0}],"isBlockCoverage":false}]},{"scriptId":"811","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/onetime@7.0.0/node_modules/onetime/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1033,"count":1}],"isBlockCoverage":true},{"functionName":"onetime","ranges":[{"startOffset":101,"endOffset":778,"count":1},{"startOffset":170,"endOffset":220,"count":0}],"isBlockCoverage":true},{"functionName":"onetime","ranges":[{"startOffset":358,"endOffset":678,"count":2},{"startOffset":454,"endOffset":652,"count":1},{"startOffset":571,"endOffset":652,"count":0}],"isBlockCoverage":true},{"functionName":"onetime.callCount","ranges":[{"startOffset":801,"endOffset":1006,"count":0}],"isBlockCoverage":false}]},{"scriptId":"812","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/get-east-asian-width@1.3.0/node_modules/get-east-asian-width/lookup.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9081,"count":1}],"isBlockCoverage":true},{"functionName":"isAmbiguous","ranges":[{"startOffset":20,"endOffset":4636,"count":0}],"isBlockCoverage":false},{"functionName":"isFullWidth","ranges":[{"startOffset":4638,"endOffset":4751,"count":1160},{"startOffset":4702,"endOffset":4716,"count":0},{"startOffset":4734,"endOffset":4748,"count":0}],"isBlockCoverage":true},{"functionName":"isWide","ranges":[{"startOffset":4753,"endOffset":8392,"count":1160},{"startOffset":4794,"endOffset":4808,"count":0},{"startOffset":4898,"endOffset":4912,"count":0},{"startOffset":5038,"endOffset":5052,"count":0},{"startOffset":5070,"endOffset":5084,"count":0},{"startOffset":5120,"endOffset":5134,"count":0},{"startOffset":5548,"endOffset":5562,"count":0},{"startOffset":5598,"endOffset":5612,"count":0},{"startOffset":5738,"endOffset":5752,"count":0},{"startOffset":5770,"endOffset":5784,"count":0},{"startOffset":5802,"endOffset":5816,"count":0},{"startOffset":5834,"endOffset":5848,"count":0},{"startOffset":5866,"endOffset":5880,"count":0},{"startOffset":5898,"endOffset":5912,"count":0},{"startOffset":5930,"endOffset":5944,"count":0},{"startOffset":5962,"endOffset":5976,"count":0},{"startOffset":5994,"endOffset":6008,"count":0},{"startOffset":6026,"endOffset":6040,"count":0},{"startOffset":6058,"endOffset":6072,"count":0},{"startOffset":6090,"endOffset":6104,"count":0},{"startOffset":6122,"endOffset":6136,"count":0},{"startOffset":6154,"endOffset":6168,"count":0},{"startOffset":6186,"endOffset":6200,"count":0},{"startOffset":6218,"endOffset":6232,"count":0},{"startOffset":6250,"endOffset":6264,"count":0},{"startOffset":6282,"endOffset":6296,"count":0},{"startOffset":6314,"endOffset":6328,"count":0},{"startOffset":6346,"endOffset":6360,"count":0},{"startOffset":6378,"endOffset":6392,"count":0},{"startOffset":6411,"endOffset":6426,"count":0},{"startOffset":6483,"endOffset":6498,"count":0},{"startOffset":6517,"endOffset":6532,"count":0},{"startOffset":6551,"endOffset":6566,"count":0},{"startOffset":6585,"endOffset":6600,"count":0},{"startOffset":6619,"endOffset":6634,"count":0},{"startOffset":6691,"endOffset":6706,"count":0},{"startOffset":6744,"endOffset":6759,"count":0},{"startOffset":6797,"endOffset":6812,"count":0},{"startOffset":6831,"endOffset":6846,"count":0},{"startOffset":6865,"endOffset":6880,"count":0},{"startOffset":6899,"endOffset":6914,"count":0},{"startOffset":6990,"endOffset":7005,"count":0},{"startOffset":7024,"endOffset":7039,"count":0},{"startOffset":7058,"endOffset":7073,"count":0},{"startOffset":7092,"endOffset":7107,"count":0},{"startOffset":7164,"endOffset":7179,"count":0},{"startOffset":7198,"endOffset":7213,"count":0},{"startOffset":7232,"endOffset":7247,"count":0},{"startOffset":7266,"endOffset":7281,"count":0},{"startOffset":7300,"endOffset":7315,"count":0},{"startOffset":7334,"endOffset":7349,"count":0},{"startOffset":7368,"endOffset":7383,"count":0},{"startOffset":7402,"endOffset":7417,"count":0},{"startOffset":7455,"endOffset":7470,"count":0},{"startOffset":7508,"endOffset":7523,"count":0},{"startOffset":7542,"endOffset":7557,"count":0},{"startOffset":7576,"endOffset":7591,"count":0},{"startOffset":7610,"endOffset":7625,"count":0},{"startOffset":7720,"endOffset":7735,"count":0},{"startOffset":7754,"endOffset":7769,"count":0},{"startOffset":7807,"endOffset":7822,"count":0},{"startOffset":7841,"endOffset":7856,"count":0},{"startOffset":7875,"endOffset":7890,"count":0},{"startOffset":7947,"endOffset":7962,"count":0},{"startOffset":7981,"endOffset":7996,"count":0},{"startOffset":8034,"endOffset":8049,"count":0},{"startOffset":8068,"endOffset":8083,"count":0},{"startOffset":8102,"endOffset":8117,"count":0},{"startOffset":8136,"endOffset":8151,"count":0},{"startOffset":8170,"endOffset":8185,"count":0},{"startOffset":8204,"endOffset":8219,"count":0},{"startOffset":8238,"endOffset":8253,"count":0},{"startOffset":8272,"endOffset":8287,"count":0},{"startOffset":8306,"endOffset":8321,"count":0},{"startOffset":8340,"endOffset":8355,"count":0},{"startOffset":8374,"endOffset":8389,"count":0}],"isBlockCoverage":true},{"functionName":"getCategory","ranges":[{"startOffset":8394,"endOffset":9023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"813","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/signal-exit@4.1.0/node_modules/signal-exit/dist/mjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9090,"count":1},{"startOffset":9028,"endOffset":9054,"count":0}],"isBlockCoverage":true},{"functionName":"processOk","ranges":[{"startOffset":323,"endOffset":690,"count":4}],"isBlockCoverage":true},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":868,"endOffset":2172,"count":1}],"isBlockCoverage":true},{"functionName":"Emitter","ranges":[{"startOffset":1063,"endOffset":1354,"count":1},{"startOffset":1113,"endOffset":1165,"count":0}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":1359,"endOffset":1414,"count":1}],"isBlockCoverage":true},{"functionName":"removeListener","ranges":[{"startOffset":1419,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":1783,"endOffset":2170,"count":3},{"startOffset":1838,"endOffset":1875,"count":1},{"startOffset":1875,"endOffset":1979,"count":2},{"startOffset":1979,"endOffset":2042,"count":1},{"startOffset":2042,"endOffset":2070,"count":2},{"startOffset":2070,"endOffset":2144,"count":1},{"startOffset":2144,"endOffset":2169,"count":2}],"isBlockCoverage":true},{"functionName":"signalExitWrap","ranges":[{"startOffset":2221,"endOffset":2470,"count":1}],"isBlockCoverage":true},{"functionName":"onExit","ranges":[{"startOffset":2257,"endOffset":2330,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":2340,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":2403,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"onExit","ranges":[{"startOffset":2526,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":2573,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":2588,"endOffset":2600,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2603,"endOffset":8102,"count":1},{"startOffset":2808,"endOffset":2818,"count":0}],"isBlockCoverage":true},{"functionName":"SignalExit","ranges":[{"startOffset":3007,"endOffset":4931,"count":1},{"startOffset":3192,"endOffset":4813,"count":13}],"isBlockCoverage":true},{"functionName":"SignalExit.#sigListeners.<computed>","ranges":[{"startOffset":3232,"endOffset":4802,"count":0}],"isBlockCoverage":false},{"functionName":"onExit","ranges":[{"startOffset":4936,"endOffset":5529,"count":1},{"startOffset":5024,"endOffset":5065,"count":0},{"startOffset":5218,"endOffset":5226,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5045,"endOffset":5054,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5277,"endOffset":5522,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":5534,"endOffset":6349,"count":1},{"startOffset":5569,"endOffset":5600,"count":0},{"startOffset":5939,"endOffset":6131,"count":13},{"startOffset":6108,"endOffset":6121,"count":0}],"isBlockCoverage":true},{"functionName":"#process.emit","ranges":[{"startOffset":6161,"endOffset":6234,"count":3}],"isBlockCoverage":true},{"functionName":"#process.reallyExit","ranges":[{"startOffset":6271,"endOffset":6342,"count":1}],"isBlockCoverage":true},{"functionName":"unload","ranges":[{"startOffset":6354,"endOffset":7092,"count":0}],"isBlockCoverage":false},{"functionName":"#processReallyExit","ranges":[{"startOffset":7097,"endOffset":7463,"count":1},{"startOffset":7193,"endOffset":7226,"count":0}],"isBlockCoverage":true},{"functionName":"#processEmit","ranges":[{"startOffset":7468,"endOffset":8100,"count":3},{"startOffset":7568,"endOffset":7595,"count":1},{"startOffset":7597,"endOffset":8013,"count":1},{"startOffset":8013,"endOffset":8094,"count":2}],"isBlockCoverage":true}]},{"scriptId":"814","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/signal-exit@4.1.0/node_modules/signal-exit/dist/mjs/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1438,"count":1},{"startOffset":1338,"endOffset":1402,"count":0}],"isBlockCoverage":true}]},{"scriptId":"815","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/mimic-function@5.0.1/node_modules/mimic-function/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3038,"count":1}],"isBlockCoverage":true},{"functionName":"copyProperty","ranges":[{"startOffset":21,"endOffset":887,"count":2},{"startOffset":280,"endOffset":307,"count":1},{"startOffset":309,"endOffset":577,"count":1},{"startOffset":579,"endOffset":593,"count":0},{"startOffset":593,"endOffset":790,"count":1},{"startOffset":790,"endOffset":814,"count":0},{"startOffset":816,"endOffset":830,"count":0},{"startOffset":830,"endOffset":886,"count":1}],"isBlockCoverage":true},{"functionName":"canCopyProperty","ranges":[{"startOffset":1091,"endOffset":1457,"count":1},{"startOffset":1197,"endOffset":1454,"count":0}],"isBlockCoverage":true},{"functionName":"changePrototype","ranges":[{"startOffset":1484,"endOffset":1662,"count":1},{"startOffset":1616,"endOffset":1661,"count":0}],"isBlockCoverage":true},{"functionName":"wrappedToString","ranges":[{"startOffset":1689,"endOffset":1752,"count":0}],"isBlockCoverage":false},{"functionName":"changeToString","ranges":[{"startOffset":2221,"endOffset":2738,"count":1},{"startOffset":2273,"endOffset":2277,"count":0}],"isBlockCoverage":true},{"functionName":"mimicFunction","ranges":[{"startOffset":2756,"endOffset":3037,"count":1},{"startOffset":2897,"endOffset":2960,"count":2}],"isBlockCoverage":true}]},{"scriptId":"816","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/cli-spinners@2.9.2/node_modules/cli-spinners/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":406,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":211,"endOffset":373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"817","url":"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/emoji-regex@10.4.0/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12874,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":12872,"count":1160}],"isBlockCoverage":true}]},{"scriptId":"818","url":"node:readline","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12835,"count":1}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":2578,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"Interface.question","ranges":[{"startOffset":3696,"endOffset":4484,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":4535,"endOffset":5299,"count":0}],"isBlockCoverage":false},{"functionName":"createInterface","ranges":[{"startOffset":5833,"endOffset":5957,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6150,"endOffset":6194,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6241,"endOffset":6281,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6335,"endOffset":6382,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6433,"endOffset":6477,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6529,"endOffset":6574,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6626,"endOffset":6671,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6724,"endOffset":6770,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6822,"endOffset":6867,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6916,"endOffset":6958,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7008,"endOffset":7051,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7102,"endOffset":7146,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7198,"endOffset":7243,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7298,"endOffset":7346,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7402,"endOffset":7451,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7506,"endOffset":7554,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7610,"endOffset":7659,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7704,"endOffset":7742,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7794,"endOffset":7839,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7891,"endOffset":7936,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7990,"endOffset":8037,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8088,"endOffset":8132,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8181,"endOffset":8223,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8362,"endOffset":8404,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8410,"endOffset":8458,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8508,"endOffset":8554,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8560,"endOffset":8612,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8660,"endOffset":8704,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8710,"endOffset":8760,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8810,"endOffset":8856,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8862,"endOffset":8914,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8959,"endOffset":9000,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9006,"endOffset":9053,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9108,"endOffset":9159,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9165,"endOffset":9222,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9272,"endOffset":9318,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9324,"endOffset":9376,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9426,"endOffset":9472,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9478,"endOffset":9530,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._tabComplete","ranges":[{"startOffset":10126,"endOffset":10607,"count":0}],"isBlockCoverage":false},{"functionName":"_ttyWriteDumb","ranges":[{"startOffset":11673,"endOffset":12687,"count":0}],"isBlockCoverage":false}]},{"scriptId":"819","url":"node:internal/readline/emitKeypressEvents","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2663,"count":1}],"isBlockCoverage":false},{"functionName":"emitKeypressEvents","ranges":[{"startOffset":644,"endOffset":2624,"count":0}],"isBlockCoverage":false}]},{"scriptId":"820","url":"node:readline/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1620,"count":1}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":518,"endOffset":618,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":621,"endOffset":1424,"count":0}],"isBlockCoverage":false},{"functionName":"createInterface","ranges":[{"startOffset":1428,"endOffset":1552,"count":0}],"isBlockCoverage":false}]},{"scriptId":"821","url":"node:internal/readline/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3509,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":452,"endOffset":3473,"count":0}],"isBlockCoverage":false}]},{"scriptId":"822","url":"node:dns","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8887,"count":1}],"isBlockCoverage":false},{"functionName":"onlookup","ranges":[{"startOffset":2686,"endOffset":3030,"count":1},{"startOffset":2733,"endOffset":2813,"count":0},{"startOffset":2925,"endOffset":2946,"count":0},{"startOffset":2948,"endOffset":3028,"count":0}],"isBlockCoverage":true},{"functionName":"onlookupall","ranges":[{"startOffset":3033,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":3645,"endOffset":6243,"count":1},{"startOffset":3909,"endOffset":3954,"count":0},{"startOffset":3993,"endOffset":4118,"count":0},{"startOffset":4182,"endOffset":4345,"count":0},{"startOffset":4588,"endOffset":4898,"count":0},{"startOffset":4929,"endOffset":5012,"count":0},{"startOffset":5048,"endOffset":5151,"count":0},{"startOffset":5174,"endOffset":5382,"count":0},{"startOffset":5445,"endOffset":5661,"count":0},{"startOffset":5803,"endOffset":5816,"count":0},{"startOffset":5923,"endOffset":6019,"count":0},{"startOffset":6046,"endOffset":6227,"count":0}],"isBlockCoverage":true},{"functionName":"onlookupservice","ranges":[{"startOffset":6389,"endOffset":6735,"count":0}],"isBlockCoverage":false},{"functionName":"lookupService","ranges":[{"startOffset":6738,"endOffset":7533,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolverSetServers","ranges":[{"startOffset":7687,"endOffset":7983,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8748,"endOffset":8876,"count":0}],"isBlockCoverage":false}]},{"scriptId":"823","url":"node:internal/dns/callback_resolver","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2777,"count":1}],"isBlockCoverage":false},{"functionName":"onresolve","ranges":[{"startOffset":623,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"resolver","ranges":[{"startOffset":1079,"endOffset":2008,"count":13}],"isBlockCoverage":true},{"functionName":"query","ranges":[{"startOffset":1114,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":2269,"endOffset":2741,"count":0}],"isBlockCoverage":false}]}],"timestamp":737806.932834,"source-map-cache":{"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/esm/index.js":{"lineLengths":[45,33,42,45,33,42,37,55,51,1,51,47,1,49,49,1,45,45,1,56,52,1,52,48,1,65,41,74,43,51,26,3,45,27,29,3,42,16,13,9,15,11,19,15,16,12,20,16,9,13,11,13,3,17,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,WAAW,CAAA;AAS5C,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAA;AAChC,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAA;AAEzC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,WAAW,CAAA;AAQ5C,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAA;AAOhC,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAA;AACzC,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAA;AAyBpC,MAAM,UAAU,cAAc,CAC5B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,UAAU,EAAE,CAAA;AAChD,CAAC;AAsBD,MAAM,UAAU,UAAU,CACxB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,MAAM,EAAE,CAAA;AAC5C,CAAC;AAqBD,MAAM,UAAU,QAAQ,CACtB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAA;AAC9C,CAAC;AAwBD,KAAK,UAAU,KAAK,CAClB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAA;AAC1C,CAAC;AAqBD,MAAM,UAAU,eAAe,CAC7B,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,WAAW,EAAE,CAAA;AACjD,CAAC;AAqBD,MAAM,UAAU,WAAW,CACzB,OAA0B,EAC1B,UAAuB,EAAE;IAEzB,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,OAAO,EAAE,CAAA;AAC7C,CAAC;AAED,iEAAiE;AACjE,MAAM,CAAC,MAAM,UAAU,GAAG,cAAc,CAAA;AACxC,MAAM,CAAC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,CAAA;AACzE,MAAM,CAAC,MAAM,WAAW,GAAG,eAAe,CAAA;AAC1C,MAAM,CAAC,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE;IAChD,IAAI,EAAE,eAAe;CACtB,CAAC,CAAA;AACF,MAAM,CAAC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;IAC1C,MAAM,EAAE,cAAc;IACtB,OAAO,EAAE,eAAe;CACzB,CAAC,CAAA;AAEF,MAAM,CAAC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE;IACvC,IAAI,EAAE,KAAK;IACX,QAAQ;IACR,IAAI;IACJ,UAAU;IACV,MAAM;IACN,cAAc;IACd,UAAU;IACV,WAAW;IACX,OAAO;IACP,eAAe;IACf,WAAW;IACX,IAAI;IACJ,QAAQ;IACR,MAAM;IACN,QAAQ;CACT,CAAC,CAAA;AACF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA","sourcesContent":["import { escape, unescape } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nimport { Glob } from './glob.js'\nimport { hasMagic } from './has-magic.js'\n\nexport { escape, unescape } from 'minimatch'\nexport type {\n  FSOption,\n  Path,\n  WalkOptions,\n  WalkOptionsWithFileTypesTrue,\n  WalkOptionsWithFileTypesUnset,\n} from 'path-scurry'\nexport { Glob } from './glob.js'\nexport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nexport { hasMagic } from './has-magic.js'\nexport { Ignore } from './ignore.js'\nexport type { IgnoreLike } from './ignore.js'\nexport type { MatchStream } from './walker.js'\n\n/**\n * Syncronous form of {@link globStream}. Will read all the matches as fast as\n * you consume them, even all in a single tick if you consume them immediately,\n * but will still respond to backpressure if they're not consumed immediately.\n */\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesUnset,\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).streamSync()\n}\n\n/**\n * Return a stream that emits all the strings or `Path` objects and\n * then emits `end` when completed.\n */\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Minipass<Path, Path>\nexport function globStream(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions,\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).stream()\n}\n\n/**\n * Synchronous form of {@link glob}\n */\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Path[]\nexport function globSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Path[] | string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walkSync()\n}\n\n/**\n * Perform an asynchronous glob search for the pattern(s) specified. Returns\n * [Path](https://isaacs.github.io/path-scurry/classes/PathBase) objects if the\n * {@link withFileTypes} option is set to `true`. See {@link GlobOptions} for\n * full option descriptions.\n */\nasync function glob_(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Promise<Path[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Promise<string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions,\n): Promise<Path[] | string[]>\nasync function glob_(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).walk()\n}\n\n/**\n * Return a sync iterator for walking glob pattern matches.\n */\nexport function globIterateSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): Generator<Path, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions,\n): Generator<Path, void, void> | Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterateSync()\n}\n\n/**\n * Return an async iterator for walking glob pattern matches.\n */\nexport function globIterate(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue,\n): AsyncGenerator<Path, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse,\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions,\n): AsyncGenerator<Path, void, void> | AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions = {},\n) {\n  return new Glob(pattern, options).iterate()\n}\n\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexport const streamSync = globStreamSync\nexport const stream = Object.assign(globStream, { sync: globStreamSync })\nexport const iterateSync = globIterateSync\nexport const iterate = Object.assign(globIterate, {\n  sync: globIterateSync,\n})\nexport const sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync,\n})\n\nexport const glob = Object.assign(glob_, {\n  glob: glob_,\n  globSync,\n  sync,\n  globStream,\n  stream,\n  globStreamSync,\n  streamSync,\n  globIterate,\n  iterate,\n  globIterateSync,\n  iterateSync,\n  Glob,\n  hasMagic,\n  escape,\n  unescape,\n})\nglob.glob = glob\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/esm/index.js":{"lineLengths":[37,63,31,37,41,56,32,40,58,21,5,52,2,56,45,77,58,39,28,70,2,42,28,48,2,35,69,77,28,72,23,61,69,42,46,40,13,21,28,60,2,49,43,13,21,28,60,2,43,43,61,2,40,40,61,2,35,26,57,2,38,26,62,2,21,63,41,22,54,24,15,14,25,24,2,20,81,20,46,30,32,49,21,32,26,60,63,45,61,34,45,47,87,26,51,34,70,25,5,27,80,29,59,48,50,13,38,66,13,10,41,33,53,55,13,32,52,69,13,10,75,71,83,64,83,93,93,22,27,7,2,30,19,21,19,30,35,43,2,33,21,17,55,32,60,60,63,39,25,5,27,2,36,41,50,68,68,61,66,2,74,72,69,62,90,26,55,47,41,44,27,5,16,2,24,31,44,74,24,12,8,12,25,13,11,12,10,28,12,12,14,11,14,13,23,11,40,36,32,31,31,60,51,35,83,40,60,9,73,27,28,43,29,27,41,44,33,52,44,52,26,28,22,39,20,5,16,64,24,9,41,41,45,32,13,9,21,5,19,12,37,37,53,62,32,19,9,23,30,19,9,44,27,32,56,28,61,9,47,71,42,70,60,48,10,75,76,74,71,55,49,27,52,60,53,44,34,62,42,54,28,87,17,35,75,17,13,47,11,38,62,60,51,29,55,38,34,34,51,47,45,31,17,13,9,43,5,61,62,61,64,43,27,65,38,56,63,51,46,21,17,13,9,55,37,68,61,62,9,42,63,57,9,14,58,66,9,25,5,44,42,39,24,63,27,47,24,17,31,45,17,13,25,11,5,54,33,39,49,49,53,31,17,36,81,34,35,21,17,31,27,19,53,11,5,33,36,43,9,33,12,33,47,48,60,39,53,63,33,48,44,43,28,21,17,39,41,60,40,32,17,13,50,23,63,40,65,40,44,28,17,13,31,49,5,45,34,35,53,21,6,68,68,70,57,6,86,39,42,32,6,73,67,37,33,12,33,94,42,28,67,33,53,64,30,21,75,55,35,55,21,45,44,45,38,33,29,36,37,30,37,38,33,21,40,64,40,49,37,42,25,17,51,52,64,43,57,67,37,52,48,47,32,25,21,43,45,64,44,36,21,17,54,27,67,44,69,44,75,59,58,47,43,32,21,17,13,31,25,5,42,58,50,56,6,63,55,38,56,60,107,30,38,43,26,17,13,9,49,5,44,19,19,24,23,48,34,59,21,21,13,77,35,21,13,77,35,21,13,37,24,63,33,34,33,28,35,21,21,13,37,24,63,33,34,33,28,35,21,21,13,18,29,13,9,70,41,47,5,19,26,19,37,27,29,79,29,27,9,25,55,29,5,51,45,59,55,23,46,37,68,75,30,29,87,41,33,33,34,42,96,47,36,36,37,49,45,64,70,69,59,60,38,36,53,21,41,47,21,17,13,9,68,76,55,37,51,9,56,60,105,40,32,29,38,36,52,33,30,29,13,32,33,56,23,57,30,30,30,24,65,72,41,70,45,18,51,32,31,50,36,35,53,51,49,50,28,32,32,48,66,45,63,42,74,43,43,47,48,73,41,21,32,17,67,33,45,85,73,84,79,41,36,21,26,58,73,48,49,76,79,34,25,63,79,29,21,17,38,83,37,30,38,82,36,36,21,17,36,29,13,38,60,65,20,40,30,54,13,18,32,55,13,21,29,9,60,60,51,58,60,63,60,65,37,49,72,37,64,28,24,9,29,59,61,35,27,9,29,56,64,61,36,52,33,9,14,37,36,9,28,5,19,55,5,20,36,37,20,29,28,27,22,63,66,14,28,42,60,9,53,38,29,45,42,29,39,44,9,49,38,29,41,38,29,35,37,9,54,74,9,50,35,9,69,49,55,68,9,18,5,14,49,31,59,36,10,64,65,51,29,26,32,31,9,37,42,18,25,28,31,59,42,58,78,57,70,43,20,29,41,42,54,37,17,44,37,36,34,33,15,34,39,39,58,27,17,41,66,73,21,26,40,21,17,46,66,17,45,78,41,17,15,60,10,23,71,75,71,36,56,43,56,24,38,13,62,33,9,20,35,32,9,28,27,5,19,59,69,54,50,43,32,9,59,50,43,9,14,34,9,5,38,45,54,25,27,25,9,25,28,9,35,24,9,37,40,29,40,9,53,38,46,66,67,43,47,29,45,82,41,24,67,33,13,9,46,35,26,60,34,13,62,22,41,32,17,36,13,9,67,38,33,25,9,27,5,26,49,5,1,21,31,37,41,20,20,32,26,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import expand from 'brace-expansion'\nimport { assertValidPattern } from './assert-valid-pattern.js'\nimport { AST, ExtglobType } from './ast.js'\nimport { escape } from './escape.js'\nimport { unescape } from './unescape.js'\n\ntype Platform =\n  | 'aix'\n  | 'android'\n  | 'darwin'\n  | 'freebsd'\n  | 'haiku'\n  | 'linux'\n  | 'openbsd'\n  | 'sunos'\n  | 'win32'\n  | 'cygwin'\n  | 'netbsd'\n\nexport interface MinimatchOptions {\n  nobrace?: boolean\n  nocomment?: boolean\n  nonegate?: boolean\n  debug?: boolean\n  noglobstar?: boolean\n  noext?: boolean\n  nonull?: boolean\n  windowsPathsNoEscape?: boolean\n  allowWindowsEscape?: boolean\n  partial?: boolean\n  dot?: boolean\n  nocase?: boolean\n  nocaseMagicOnly?: boolean\n  magicalBraces?: boolean\n  matchBase?: boolean\n  flipNegate?: boolean\n  preserveMultipleSlashes?: boolean\n  optimizationLevel?: number\n  platform?: Platform\n  windowsNoMagicRoot?: boolean\n}\n\nexport const minimatch = (\n  p: string,\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/\nconst starDotExtTest = (ext: string) => (f: string) =>\n  !f.startsWith('.') && f.endsWith(ext)\nconst starDotExtTestDot = (ext: string) => (f: string) => f.endsWith(ext)\nconst starDotExtTestNocase = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => !f.startsWith('.') && f.toLowerCase().endsWith(ext)\n}\nconst starDotExtTestNocaseDot = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => f.toLowerCase().endsWith(ext)\n}\nconst starDotStarRE = /^\\*+\\.\\*+$/\nconst starDotStarTest = (f: string) => !f.startsWith('.') && f.includes('.')\nconst starDotStarTestDot = (f: string) =>\n  f !== '.' && f !== '..' && f.includes('.')\nconst dotStarRE = /^\\.\\*+$/\nconst dotStarTest = (f: string) => f !== '.' && f !== '..' && f.startsWith('.')\nconst starRE = /^\\*+$/\nconst starTest = (f: string) => f.length !== 0 && !f.startsWith('.')\nconst starTestDot = (f: string) => f.length !== 0 && f !== '.' && f !== '..'\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/\nconst qmarksTestNocase = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestNocaseDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTest = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTestNoExt = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && !f.startsWith('.')\n}\nconst qmarksTestNoExtDot = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && f !== '.' && f !== '..'\n}\n\n/* c8 ignore start */\nconst defaultPlatform: Platform = (\n  typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n      process.platform\n    : 'posix'\n) as Platform\ntype Sep = '\\\\' | '/'\nconst path: { [k: string]: { sep: Sep } } = {\n  win32: { sep: '\\\\' },\n  posix: { sep: '/' },\n}\n/* c8 ignore stop */\n\nexport const sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep\nminimatch.sep = sep\n\nexport const GLOBSTAR = Symbol('globstar **')\nminimatch.GLOBSTAR = GLOBSTAR\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?'\n\nexport const filter =\n  (pattern: string, options: MinimatchOptions = {}) =>\n  (p: string) =>\n    minimatch(p, pattern, options)\nminimatch.filter = filter\n\nconst ext = (a: MinimatchOptions, b: MinimatchOptions = {}) =>\n  Object.assign({}, a, b)\n\nexport const defaults = (def: MinimatchOptions): typeof minimatch => {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = (p: string, pattern: string, options: MinimatchOptions = {}) =>\n    orig(p, pattern, ext(def, options))\n\n  return Object.assign(m, {\n    Minimatch: class Minimatch extends orig.Minimatch {\n      constructor(pattern: string, options: MinimatchOptions = {}) {\n        super(pattern, ext(def, options))\n      }\n      static defaults(options: MinimatchOptions) {\n        return orig.defaults(ext(def, options)).Minimatch\n      }\n    },\n\n    AST: class AST extends orig.AST {\n      /* c8 ignore start */\n      constructor(\n        type: ExtglobType | null,\n        parent?: AST,\n        options: MinimatchOptions = {}\n      ) {\n        super(type, parent, ext(def, options))\n      }\n      /* c8 ignore stop */\n\n      static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n        return orig.AST.fromGlob(pattern, ext(def, options))\n      }\n    },\n\n    unescape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.unescape(s, ext(def, options)),\n\n    escape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.escape(s, ext(def, options)),\n\n    filter: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.filter(pattern, ext(def, options)),\n\n    defaults: (options: MinimatchOptions) => orig.defaults(ext(def, options)),\n\n    makeRe: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.makeRe(pattern, ext(def, options)),\n\n    braceExpand: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.braceExpand(pattern, ext(def, options)),\n\n    match: (list: string[], pattern: string, options: MinimatchOptions = {}) =>\n      orig.match(list, pattern, ext(def, options)),\n\n    sep: orig.sep,\n    GLOBSTAR: GLOBSTAR as typeof GLOBSTAR,\n  })\n}\nminimatch.defaults = defaults\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nexport const braceExpand = (\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\nminimatch.braceExpand = braceExpand\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\n\nexport const makeRe = (pattern: string, options: MinimatchOptions = {}) =>\n  new Minimatch(pattern, options).makeRe()\nminimatch.makeRe = makeRe\n\nexport const match = (\n  list: string[],\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(f => mm.match(f))\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\nminimatch.match = match\n\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\nexport type MMRegExp = RegExp & {\n  _src?: string\n  _glob?: string\n}\n\nexport type ParseReturnFiltered = string | MMRegExp | typeof GLOBSTAR\nexport type ParseReturn = ParseReturnFiltered | false\n\nexport class Minimatch {\n  options: MinimatchOptions\n  set: ParseReturnFiltered[][]\n  pattern: string\n\n  windowsPathsNoEscape: boolean\n  nonegate: boolean\n  negate: boolean\n  comment: boolean\n  empty: boolean\n  preserveMultipleSlashes: boolean\n  partial: boolean\n  globSet: string[]\n  globParts: string[][]\n  nocase: boolean\n\n  isWindows: boolean\n  platform: Platform\n  windowsNoMagicRoot: boolean\n\n  regexp: false | null | MMRegExp\n  constructor(pattern: string, options: MinimatchOptions = {}) {\n    assertValidPattern(pattern)\n\n    options = options || {}\n    this.options = options\n    this.pattern = pattern\n    this.platform = options.platform || defaultPlatform\n    this.isWindows = this.platform === 'win32'\n    this.windowsPathsNoEscape =\n      !!options.windowsPathsNoEscape || options.allowWindowsEscape === false\n    if (this.windowsPathsNoEscape) {\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\n    }\n    this.preserveMultipleSlashes = !!options.preserveMultipleSlashes\n    this.regexp = null\n    this.negate = false\n    this.nonegate = !!options.nonegate\n    this.comment = false\n    this.empty = false\n    this.partial = !!options.partial\n    this.nocase = !!this.options.nocase\n    this.windowsNoMagicRoot =\n      options.windowsNoMagicRoot !== undefined\n        ? options.windowsNoMagicRoot\n        : !!(this.isWindows && this.nocase)\n\n    this.globSet = []\n    this.globParts = []\n    this.set = []\n\n    // make the set of regexps etc.\n    this.make()\n  }\n\n  hasMagic(): boolean {\n    if (this.options.magicalBraces && this.set.length > 1) {\n      return true\n    }\n    for (const pattern of this.set) {\n      for (const part of pattern) {\n        if (typeof part !== 'string') return true\n      }\n    }\n    return false\n  }\n\n  debug(..._: any[]) {}\n\n  make() {\n    const pattern = this.pattern\n    const options = this.options\n\n    // empty patterns and comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n      this.comment = true\n      return\n    }\n\n    if (!pattern) {\n      this.empty = true\n      return\n    }\n\n    // step 1: figure out negation, etc.\n    this.parseNegate()\n\n    // step 2: expand braces\n    this.globSet = [...new Set(this.braceExpand())]\n\n    if (options.debug) {\n      this.debug = (...args: any[]) => console.error(...args)\n    }\n\n    this.debug(this.pattern, this.globSet)\n\n    // step 3: now we have a set, so turn each one into a series of\n    // path-portion matching patterns.\n    // These will be regexps, except in the case of \"**\", which is\n    // set to the GLOBSTAR object for globstar behavior,\n    // and will not contain any / characters\n    //\n    // First, we preprocess to make the glob pattern sets a bit simpler\n    // and deduped.  There are some perf-killing patterns that can cause\n    // problems with a glob walk, but we can simplify them down a bit.\n    const rawGlobParts = this.globSet.map(s => this.slashSplit(s))\n    this.globParts = this.preprocess(rawGlobParts)\n    this.debug(this.pattern, this.globParts)\n\n    // glob --> regexps\n    let set = this.globParts.map((s, _, __) => {\n      if (this.isWindows && this.windowsNoMagicRoot) {\n        // check if it's a drive or unc path.\n        const isUNC =\n          s[0] === '' &&\n          s[1] === '' &&\n          (s[2] === '?' || !globMagic.test(s[2])) &&\n          !globMagic.test(s[3])\n        const isDrive = /^[a-z]:/i.test(s[0])\n        if (isUNC) {\n          return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))]\n        } else if (isDrive) {\n          return [s[0], ...s.slice(1).map(ss => this.parse(ss))]\n        }\n      }\n      return s.map(ss => this.parse(ss))\n    })\n\n    this.debug(this.pattern, set)\n\n    // filter out everything that didn't compile properly.\n    this.set = set.filter(\n      s => s.indexOf(false) === -1\n    ) as ParseReturnFiltered[][]\n\n    // do not treat the ? in UNC paths as magic\n    if (this.isWindows) {\n      for (let i = 0; i < this.set.length; i++) {\n        const p = this.set[i]\n        if (\n          p[0] === '' &&\n          p[1] === '' &&\n          this.globParts[i][2] === '?' &&\n          typeof p[3] === 'string' &&\n          /^[a-z]:$/i.test(p[3])\n        ) {\n          p[2] = '?'\n        }\n      }\n    }\n\n    this.debug(this.pattern, this.set)\n  }\n\n  // various transforms to equivalent pattern sets that are\n  // faster to process in a filesystem walk.  The goal is to\n  // eliminate what we can, and push all ** patterns as far\n  // to the right as possible, even if it increases the number\n  // of patterns that we have to process.\n  preprocess(globParts: string[][]) {\n    // if we're not in globstar mode, then turn all ** into *\n    if (this.options.noglobstar) {\n      for (let i = 0; i < globParts.length; i++) {\n        for (let j = 0; j < globParts[i].length; j++) {\n          if (globParts[i][j] === '**') {\n            globParts[i][j] = '*'\n          }\n        }\n      }\n    }\n\n    const { optimizationLevel = 1 } = this.options\n\n    if (optimizationLevel >= 2) {\n      // aggressive optimization for the purpose of fs walking\n      globParts = this.firstPhasePreProcess(globParts)\n      globParts = this.secondPhasePreProcess(globParts)\n    } else if (optimizationLevel >= 1) {\n      // just basic optimizations to remove some .. parts\n      globParts = this.levelOneOptimize(globParts)\n    } else {\n      // just collapse multiple ** portions into one\n      globParts = this.adjascentGlobstarOptimize(globParts)\n    }\n\n    return globParts\n  }\n\n  // just get rid of adjascent ** portions\n  adjascentGlobstarOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      let gs: number = -1\n      while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n        let i = gs\n        while (parts[i + 1] === '**') {\n          i++\n        }\n        if (i !== gs) {\n          parts.splice(gs, i - gs)\n        }\n      }\n      return parts\n    })\n  }\n\n  // get rid of adjascent ** and resolve .. portions\n  levelOneOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      parts = parts.reduce((set: string[], part) => {\n        const prev = set[set.length - 1]\n        if (part === '**' && prev === '**') {\n          return set\n        }\n        if (part === '..') {\n          if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n            set.pop()\n            return set\n          }\n        }\n        set.push(part)\n        return set\n      }, [])\n      return parts.length === 0 ? [''] : parts\n    })\n  }\n\n  levelTwoFileOptimize(parts: string | string[]) {\n    if (!Array.isArray(parts)) {\n      parts = this.slashSplit(parts)\n    }\n    let didSomething: boolean = false\n    do {\n      didSomething = false\n      // <pre>/<e>/<rest> -> <pre>/<rest>\n      if (!this.preserveMultipleSlashes) {\n        for (let i = 1; i < parts.length - 1; i++) {\n          const p = parts[i]\n          // don't squeeze out UNC patterns\n          if (i === 1 && p === '' && parts[0] === '') continue\n          if (p === '.' || p === '') {\n            didSomething = true\n            parts.splice(i, 1)\n            i--\n          }\n        }\n        if (\n          parts[0] === '.' &&\n          parts.length === 2 &&\n          (parts[1] === '.' || parts[1] === '')\n        ) {\n          didSomething = true\n          parts.pop()\n        }\n      }\n\n      // <pre>/<p>/../<rest> -> <pre>/<rest>\n      let dd: number = 0\n      while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n        const p = parts[dd - 1]\n        if (p && p !== '.' && p !== '..' && p !== '**') {\n          didSomething = true\n          parts.splice(dd - 1, 2)\n          dd -= 2\n        }\n      }\n    } while (didSomething)\n    return parts.length === 0 ? [''] : parts\n  }\n\n  // First phase: single-pattern processing\n  // <pre> is 1 or more portions\n  // <rest> is 1 or more portions\n  // <p> is any portion other than ., .., '', or **\n  // <e> is . or ''\n  //\n  // **/.. is *brutal* for filesystem walking performance, because\n  // it effectively resets the recursive walk each time it occurs,\n  // and ** cannot be reduced out by a .. pattern part like a regexp\n  // or most strings (other than .., ., and '') can be.\n  //\n  // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n  // <pre>/<e>/<rest> -> <pre>/<rest>\n  // <pre>/<p>/../<rest> -> <pre>/<rest>\n  // **/**/<rest> -> **/<rest>\n  //\n  // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n  // this WOULD be allowed if ** did follow symlinks, or * didn't\n  firstPhasePreProcess(globParts: string[][]) {\n    let didSomething = false\n    do {\n      didSomething = false\n      // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n      for (let parts of globParts) {\n        let gs: number = -1\n        while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n          let gss: number = gs\n          while (parts[gss + 1] === '**') {\n            // <pre>/**/**/<rest> -> <pre>/**/<rest>\n            gss++\n          }\n          // eg, if gs is 2 and gss is 4, that means we have 3 **\n          // parts, and can remove 2 of them.\n          if (gss > gs) {\n            parts.splice(gs + 1, gss - gs)\n          }\n\n          let next = parts[gs + 1]\n          const p = parts[gs + 2]\n          const p2 = parts[gs + 3]\n          if (next !== '..') continue\n          if (\n            !p ||\n            p === '.' ||\n            p === '..' ||\n            !p2 ||\n            p2 === '.' ||\n            p2 === '..'\n          ) {\n            continue\n          }\n          didSomething = true\n          // edit parts in place, and push the new one\n          parts.splice(gs, 1)\n          const other = parts.slice(0)\n          other[gs] = '**'\n          globParts.push(other)\n          gs--\n        }\n\n        // <pre>/<e>/<rest> -> <pre>/<rest>\n        if (!this.preserveMultipleSlashes) {\n          for (let i = 1; i < parts.length - 1; i++) {\n            const p = parts[i]\n            // don't squeeze out UNC patterns\n            if (i === 1 && p === '' && parts[0] === '') continue\n            if (p === '.' || p === '') {\n              didSomething = true\n              parts.splice(i, 1)\n              i--\n            }\n          }\n          if (\n            parts[0] === '.' &&\n            parts.length === 2 &&\n            (parts[1] === '.' || parts[1] === '')\n          ) {\n            didSomething = true\n            parts.pop()\n          }\n        }\n\n        // <pre>/<p>/../<rest> -> <pre>/<rest>\n        let dd: number = 0\n        while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n          const p = parts[dd - 1]\n          if (p && p !== '.' && p !== '..' && p !== '**') {\n            didSomething = true\n            const needDot = dd === 1 && parts[dd + 1] === '**'\n            const splin = needDot ? ['.'] : []\n            parts.splice(dd - 1, 2, ...splin)\n            if (parts.length === 0) parts.push('')\n            dd -= 2\n          }\n        }\n      }\n    } while (didSomething)\n\n    return globParts\n  }\n\n  // second phase: multi-pattern dedupes\n  // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n  // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n  // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n  //\n  // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n  // ^-- not valid because ** doens't follow symlinks\n  secondPhasePreProcess(globParts: string[][]): string[][] {\n    for (let i = 0; i < globParts.length - 1; i++) {\n      for (let j = i + 1; j < globParts.length; j++) {\n        const matched = this.partsMatch(\n          globParts[i],\n          globParts[j],\n          !this.preserveMultipleSlashes\n        )\n        if (matched) {\n          globParts[i] = []\n          globParts[j] = matched\n          break\n        }\n      }\n    }\n    return globParts.filter(gs => gs.length)\n  }\n\n  partsMatch(\n    a: string[],\n    b: string[],\n    emptyGSMatch: boolean = false\n  ): false | string[] {\n    let ai = 0\n    let bi = 0\n    let result: string[] = []\n    let which: string = ''\n    while (ai < a.length && bi < b.length) {\n      if (a[ai] === b[bi]) {\n        result.push(which === 'b' ? b[bi] : a[ai])\n        ai++\n        bi++\n      } else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n        result.push(a[ai])\n        ai++\n      } else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n        result.push(b[bi])\n        bi++\n      } else if (\n        a[ai] === '*' &&\n        b[bi] &&\n        (this.options.dot || !b[bi].startsWith('.')) &&\n        b[bi] !== '**'\n      ) {\n        if (which === 'b') return false\n        which = 'a'\n        result.push(a[ai])\n        ai++\n        bi++\n      } else if (\n        b[bi] === '*' &&\n        a[ai] &&\n        (this.options.dot || !a[ai].startsWith('.')) &&\n        a[ai] !== '**'\n      ) {\n        if (which === 'a') return false\n        which = 'b'\n        result.push(b[bi])\n        ai++\n        bi++\n      } else {\n        return false\n      }\n    }\n    // if we fall out of the loop, it means they two are identical\n    // as long as their lengths match\n    return a.length === b.length && result\n  }\n\n  parseNegate() {\n    if (this.nonegate) return\n\n    const pattern = this.pattern\n    let negate = false\n    let negateOffset = 0\n\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n      negate = !negate\n      negateOffset++\n    }\n\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\n    this.negate = negate\n  }\n\n  // set partial to true to test if, for example,\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\n  // Partial means, if you run out of file before you run\n  // out of pattern, then that's fine, as long as all\n  // the parts match.\n  matchOne(file: string[], pattern: ParseReturn[], partial: boolean = false) {\n    const options = this.options\n\n    // UNC paths like //?/X:/... can match X:/... and vice versa\n    // Drive letters in absolute drive or unc paths are always compared\n    // case-insensitively.\n    if (this.isWindows) {\n      const fileDrive = typeof file[0] === 'string' && /^[a-z]:$/i.test(file[0])\n      const fileUNC =\n        !fileDrive &&\n        file[0] === '' &&\n        file[1] === '' &&\n        file[2] === '?' &&\n        /^[a-z]:$/i.test(file[3])\n\n      const patternDrive =\n        typeof pattern[0] === 'string' && /^[a-z]:$/i.test(pattern[0])\n      const patternUNC =\n        !patternDrive &&\n        pattern[0] === '' &&\n        pattern[1] === '' &&\n        pattern[2] === '?' &&\n        typeof pattern[3] === 'string' &&\n        /^[a-z]:$/i.test(pattern[3])\n\n      const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined\n      const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined\n      if (typeof fdi === 'number' && typeof pdi === 'number') {\n        const [fd, pd]: [string, string] = [file[fdi], pattern[pdi] as string]\n        if (fd.toLowerCase() === pd.toLowerCase()) {\n          pattern[pdi] = fd\n          if (pdi > fdi) {\n            pattern = pattern.slice(pdi)\n          } else if (fdi > pdi) {\n            file = file.slice(fdi)\n          }\n        }\n      }\n    }\n\n    // resolve and reduce . and .. portions in the file as well.\n    // dont' need to do the second phase, because it's only one string[]\n    const { optimizationLevel = 1 } = this.options\n    if (optimizationLevel >= 2) {\n      file = this.levelTwoFileOptimize(file)\n    }\n\n    this.debug('matchOne', this, { file, pattern })\n    this.debug('matchOne', file.length, pattern.length)\n\n    for (\n      var fi = 0, pi = 0, fl = file.length, pl = pattern.length;\n      fi < fl && pi < pl;\n      fi++, pi++\n    ) {\n      this.debug('matchOne loop')\n      var p = pattern[pi]\n      var f = file[fi]\n\n      this.debug(pattern, p, f)\n\n      // should be impossible.\n      // some invalid regexp stuff in the set.\n      /* c8 ignore start */\n      if (p === false) {\n        return false\n      }\n      /* c8 ignore stop */\n\n      if (p === GLOBSTAR) {\n        this.debug('GLOBSTAR', [pattern, p, f])\n\n        // \"**\"\n        // a/**/b/**/c would match the following:\n        // a/b/x/y/z/c\n        // a/x/y/z/b/c\n        // a/b/x/b/x/c\n        // a/b/c\n        // To do this, take the rest of the pattern after\n        // the **, and see if it would match the file remainder.\n        // If so, return success.\n        // If not, the ** \"swallows\" a segment, and try again.\n        // This is recursively awful.\n        //\n        // a/**/b/**/c matching a/b/x/y/z/c\n        // - a matches a\n        // - doublestar\n        //   - matchOne(b/x/y/z/c, b/**/c)\n        //     - b matches b\n        //     - doublestar\n        //       - matchOne(x/y/z/c, c) -> no\n        //       - matchOne(y/z/c, c) -> no\n        //       - matchOne(z/c, c) -> no\n        //       - matchOne(c, c) yes, hit\n        var fr = fi\n        var pr = pi + 1\n        if (pr === pl) {\n          this.debug('** at the end')\n          // a ** at the end will just swallow the rest.\n          // We have found a match.\n          // however, it will not swallow /.x, unless\n          // options.dot is set.\n          // . and .. are *never* matched by **, for explosively\n          // exponential reasons.\n          for (; fi < fl; fi++) {\n            if (\n              file[fi] === '.' ||\n              file[fi] === '..' ||\n              (!options.dot && file[fi].charAt(0) === '.')\n            )\n              return false\n          }\n          return true\n        }\n\n        // ok, let's see if we can swallow whatever we can.\n        while (fr < fl) {\n          var swallowee = file[fr]\n\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n          // XXX remove this slice.  Just pass the start index.\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n            this.debug('globstar found match!', fr, fl, swallowee)\n            // found a match.\n            return true\n          } else {\n            // can't swallow \".\" or \"..\" ever.\n            // can only swallow \".foo\" when explicitly asked.\n            if (\n              swallowee === '.' ||\n              swallowee === '..' ||\n              (!options.dot && swallowee.charAt(0) === '.')\n            ) {\n              this.debug('dot detected!', file, fr, pattern, pr)\n              break\n            }\n\n            // ** swallows a segment, and continue.\n            this.debug('globstar swallow a segment, and continue')\n            fr++\n          }\n        }\n\n        // no match was found.\n        // However, in partial mode, we can't say this is necessarily over.\n        /* c8 ignore start */\n        if (partial) {\n          // ran out of file\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n          if (fr === fl) {\n            return true\n          }\n        }\n        /* c8 ignore stop */\n        return false\n      }\n\n      // something other than **\n      // non-magic patterns just have to match exactly\n      // patterns with magic have been turned into regexps.\n      let hit: boolean\n      if (typeof p === 'string') {\n        hit = f === p\n        this.debug('string match', p, f, hit)\n      } else {\n        hit = p.test(f)\n        this.debug('pattern match', p, f, hit)\n      }\n\n      if (!hit) return false\n    }\n\n    // Note: ending in / means that we'll get a final \"\"\n    // at the end of the pattern.  This can only match a\n    // corresponding \"\" at the end of the file.\n    // If the file ends in /, then it can only match a\n    // a pattern that ends in /, unless the pattern just\n    // doesn't have any more for it. But, a/b/ should *not*\n    // match \"a/b/*\", even though \"\" matches against the\n    // [^/]*? pattern, except in partial mode, where it might\n    // simply not be reached yet.\n    // However, a/b/ should still satisfy a/*\n\n    // now either we fell off the end of the pattern, or we're done.\n    if (fi === fl && pi === pl) {\n      // ran out of pattern and filename at the same time.\n      // an exact hit!\n      return true\n    } else if (fi === fl) {\n      // ran out of file, but still had pattern left.\n      // this is ok if we're doing the match as part of\n      // a glob fs traversal.\n      return partial\n    } else if (pi === pl) {\n      // ran out of pattern, still have file left.\n      // this is only acceptable if we're on the very last\n      // empty segment of a file with a trailing slash.\n      // a/* should match a/b/\n      return fi === fl - 1 && file[fi] === ''\n\n      /* c8 ignore start */\n    } else {\n      // should be unreachable.\n      throw new Error('wtf?')\n    }\n    /* c8 ignore stop */\n  }\n\n  braceExpand() {\n    return braceExpand(this.pattern, this.options)\n  }\n\n  parse(pattern: string): ParseReturn {\n    assertValidPattern(pattern)\n\n    const options = this.options\n\n    // shortcuts\n    if (pattern === '**') return GLOBSTAR\n    if (pattern === '') return ''\n\n    // far and away, the most common glob pattern parts are\n    // *, *.*, and *.<ext>  Add a fast check method for those.\n    let m: RegExpMatchArray | null\n    let fastTest: null | ((f: string) => boolean) = null\n    if ((m = pattern.match(starRE))) {\n      fastTest = options.dot ? starTestDot : starTest\n    } else if ((m = pattern.match(starDotExtRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? starDotExtTestNocaseDot\n            : starDotExtTestNocase\n          : options.dot\n          ? starDotExtTestDot\n          : starDotExtTest\n      )(m[1])\n    } else if ((m = pattern.match(qmarksRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? qmarksTestNocaseDot\n            : qmarksTestNocase\n          : options.dot\n          ? qmarksTestDot\n          : qmarksTest\n      )(m)\n    } else if ((m = pattern.match(starDotStarRE))) {\n      fastTest = options.dot ? starDotStarTestDot : starDotStarTest\n    } else if ((m = pattern.match(dotStarRE))) {\n      fastTest = dotStarTest\n    }\n\n    const re = AST.fromGlob(pattern, this.options).toMMPattern()\n    if (fastTest && typeof re === 'object') {\n      // Avoids overriding in frozen environments\n      Reflect.defineProperty(re, 'test', { value: fastTest })\n    }\n    return re\n  }\n\n  makeRe() {\n    if (this.regexp || this.regexp === false) return this.regexp\n\n    // at this point, this.set is a 2d array of partial\n    // pattern strings, or \"**\".\n    //\n    // It's better to use .match().  This function shouldn't\n    // be used, really, but it's pretty convenient sometimes,\n    // when you just want to work with a regex.\n    const set = this.set\n\n    if (!set.length) {\n      this.regexp = false\n      return this.regexp\n    }\n    const options = this.options\n\n    const twoStar = options.noglobstar\n      ? star\n      : options.dot\n      ? twoStarDot\n      : twoStarNoDot\n    const flags = new Set(options.nocase ? ['i'] : [])\n\n    // regexpify non-globstar patterns\n    // if ** is only item, then we just do one twoStar\n    // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n    // if ** is last, append (\\/twoStar|) to previous\n    // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n    // then filter out GLOBSTAR symbols\n    let re = set\n      .map(pattern => {\n        const pp: (string | typeof GLOBSTAR)[] = pattern.map(p => {\n          if (p instanceof RegExp) {\n            for (const f of p.flags.split('')) flags.add(f)\n          }\n          return typeof p === 'string'\n            ? regExpEscape(p)\n            : p === GLOBSTAR\n            ? GLOBSTAR\n            : p._src\n        }) as (string | typeof GLOBSTAR)[]\n        pp.forEach((p, i) => {\n          const next = pp[i + 1]\n          const prev = pp[i - 1]\n          if (p !== GLOBSTAR || prev === GLOBSTAR) {\n            return\n          }\n          if (prev === undefined) {\n            if (next !== undefined && next !== GLOBSTAR) {\n              pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next\n            } else {\n              pp[i] = twoStar\n            }\n          } else if (next === undefined) {\n            pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?'\n          } else if (next !== GLOBSTAR) {\n            pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next\n            pp[i + 1] = GLOBSTAR\n          }\n        })\n        return pp.filter(p => p !== GLOBSTAR).join('/')\n      })\n      .join('|')\n\n    // need to wrap in parens if we had more than one thing with |,\n    // otherwise only the first will be anchored to ^ and the last to $\n    const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', '']\n    // must match entire pattern\n    // ending in a * or ** will make it less strict.\n    re = '^' + open + re + close + '$'\n\n    // can match anything, as long as it's not this.\n    if (this.negate) re = '^(?!' + re + ').+$'\n\n    try {\n      this.regexp = new RegExp(re, [...flags].join(''))\n      /* c8 ignore start */\n    } catch (ex) {\n      // should be impossible\n      this.regexp = false\n    }\n    /* c8 ignore stop */\n    return this.regexp\n  }\n\n  slashSplit(p: string) {\n    // if p starts with // on windows, we preserve that\n    // so that UNC paths aren't broken.  Otherwise, any number of\n    // / characters are coalesced into one, unless\n    // preserveMultipleSlashes is set to true.\n    if (this.preserveMultipleSlashes) {\n      return p.split('/')\n    } else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n      // add an extra '' for the one we lose\n      return ['', ...p.split(/\\/+/)]\n    } else {\n      return p.split(/\\/+/)\n    }\n  }\n\n  match(f: string, partial = this.partial) {\n    this.debug('match', f, this.pattern)\n    // short-circuit in the case of busted things.\n    // comments, etc.\n    if (this.comment) {\n      return false\n    }\n    if (this.empty) {\n      return f === ''\n    }\n\n    if (f === '/' && partial) {\n      return true\n    }\n\n    const options = this.options\n\n    // windows: need to use /, not \\\n    if (this.isWindows) {\n      f = f.split('\\\\').join('/')\n    }\n\n    // treat the test path as a set of pathparts.\n    const ff = this.slashSplit(f)\n    this.debug(this.pattern, 'split', ff)\n\n    // just ONE of the pattern sets in this.set needs to match\n    // in order for it to be valid.  If negating, then just one\n    // match means that we have failed.\n    // Either way, return on the first hit.\n\n    const set = this.set\n    this.debug(this.pattern, 'set', set)\n\n    // Find the basename of the path by looking for the last non-empty segment\n    let filename: string = ff[ff.length - 1]\n    if (!filename) {\n      for (let i = ff.length - 2; !filename && i >= 0; i--) {\n        filename = ff[i]\n      }\n    }\n\n    for (let i = 0; i < set.length; i++) {\n      const pattern = set[i]\n      let file = ff\n      if (options.matchBase && pattern.length === 1) {\n        file = [filename]\n      }\n      const hit = this.matchOne(file, pattern, partial)\n      if (hit) {\n        if (options.flipNegate) {\n          return true\n        }\n        return !this.negate\n      }\n    }\n\n    // didn't get any hits.  this is success if it's a negative\n    // pattern, failure otherwise.\n    if (options.flipNegate) {\n      return false\n    }\n    return this.negate\n  }\n\n  static defaults(def: MinimatchOptions) {\n    return minimatch.defaults(def).Minimatch\n  }\n}\n/* c8 ignore start */\nexport { AST } from './ast.js'\nexport { escape } from './escape.js'\nexport { unescape } from './unescape.js'\n/* c8 ignore stop */\nminimatch.AST = AST\nminimatch.Minimatch = Minimatch\nminimatch.escape = escape\nminimatch.unescape = unescape\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/esm/has-magic.js":{"lineLengths":[38,3,74,30,2,78,77,74,78,78,77,3,52,34,28,5,30,49,24,5,17,2,37],"data":{"version":3,"file":"has-magic.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/has-magic.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;AAGrC;;;;;;;;;;GAUG;AACH,MAAM,CAAC,MAAM,QAAQ,GAAG,CACtB,OAA0B,EAC1B,UAAuB,EAAE,EAChB,EAAE;IACX,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;QAC5B,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;IACrB,CAAC;IACD,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE,CAAC;QACxB,IAAI,IAAI,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE;YAAE,OAAO,IAAI,CAAA;IACvD,CAAC;IACD,OAAO,KAAK,CAAA;AACd,CAAC,CAAA","sourcesContent":["import { Minimatch } from 'minimatch'\nimport { GlobOptions } from './glob.js'\n\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nexport const hasMagic = (\n  pattern: string | string[],\n  options: GlobOptions = {},\n): boolean => {\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern]\n  }\n  for (const p of pattern) {\n    if (new Minimatch(p, options).hasMagic()) return true\n  }\n  return false\n}\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/esm/glob.js":{"lineLengths":[38,41,94,39,53,44,48,55,14,43,20,14,3,54,3,19,13,8,9,8,16,11,11,18,9,14,13,12,11,10,10,15,12,13,13,11,9,11,25,18,24,7,47,7,9,7,60,7,13,7,65,6,61,6,62,71,37,6,71,13,7,32,29,18,57,28,50,34,36,30,46,34,32,24,26,9,77,47,9,34,30,50,38,34,40,38,70,44,42,23,73,32,34,64,74,9,42,32,9,35,42,43,26,40,62,9,29,34,71,13,76,9,31,57,57,26,38,44,53,84,13,9,14,70,63,53,37,48,36,28,15,9,41,70,66,69,42,88,21,47,20,26,38,34,32,28,28,30,27,33,36,60,37,10,65,62,34,40,23,21,50,35,33,19,58,32,57,11,5,18,74,73,79,46,16,70,29,54,59,31,40,36,62,23,10,5,16,16,63,29,54,59,31,40,36,62,26,10,5,14,63,25,50,55,27,36,32,58,20,5,18,63,25,50,55,27,36,32,58,24,5,7,64,33,7,19,52,5,25,34,5,7,71,33,7,15,53,5,30,30,5,1,32],"data":{"version":3,"file":"glob.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/glob.ts"],"names":[],"mappings":"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","sourcesContent":["import { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Minipass } from 'minipass'\nimport { fileURLToPath } from 'node:url'\nimport {\n  FSOption,\n  Path,\n  PathScurry,\n  PathScurryDarwin,\n  PathScurryPosix,\n  PathScurryWin32,\n} from 'path-scurry'\nimport { IgnoreLike } from './ignore.js'\nimport { Pattern } from './pattern.js'\nimport { GlobStream, GlobWalker } from './walker.js'\n\nexport type MatchSet = Minimatch['set']\nexport type GlobParts = Exclude<Minimatch['globParts'], undefined>\n\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform: NodeJS.Platform =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n  ) ?\n    process.platform\n  : 'linux'\n\n/**\n * A `GlobOptions` object may be provided to any of the exported methods, and\n * must be provided to the `Glob` constructor.\n *\n * All options are optional, boolean, and false by default, unless otherwise\n * noted.\n *\n * All resolved options are added to the Glob object as properties.\n *\n * If you are running many `glob` operations, you can pass a Glob object as the\n * `options` argument to a subsequent operation to share the previously loaded\n * cache.\n */\nexport interface GlobOptions {\n  /**\n   * Set to `true` to always receive absolute paths for\n   * matched files. Set to `false` to always return relative paths.\n   *\n   * When this option is not set, absolute paths are returned for patterns\n   * that are absolute, and otherwise paths are returned that are relative\n   * to the `cwd` setting.\n   *\n   * This does _not_ make an extra system call to get\n   * the realpath, it only does string path resolution.\n   *\n   * Conflicts with {@link withFileTypes}\n   */\n  absolute?: boolean\n\n  /**\n   * Set to false to enable {@link windowsPathsNoEscape}\n   *\n   * @deprecated\n   */\n  allowWindowsEscape?: boolean\n\n  /**\n   * The current working directory in which to search. Defaults to\n   * `process.cwd()`.\n   *\n   * May be eiher a string path or a `file://` URL object or string.\n   */\n  cwd?: string | URL\n\n  /**\n   * Include `.dot` files in normal matches and `globstar`\n   * matches. Note that an explicit dot in a portion of the pattern\n   * will always match dot files.\n   */\n  dot?: boolean\n\n  /**\n   * Prepend all relative path strings with `./` (or `.\\` on Windows).\n   *\n   * Without this option, returned relative paths are \"bare\", so instead of\n   * returning `'./foo/bar'`, they are returned as `'foo/bar'`.\n   *\n   * Relative patterns starting with `'../'` are not prepended with `./`, even\n   * if this option is set.\n   */\n  dotRelative?: boolean\n\n  /**\n   * Follow symlinked directories when expanding `**`\n   * patterns. This can result in a lot of duplicate references in\n   * the presence of cyclic links, and make performance quite bad.\n   *\n   * By default, a `**` in a pattern will follow 1 symbolic link if\n   * it is not the first item in the pattern, or none if it is the\n   * first item in the pattern, following the same behavior as Bash.\n   */\n  follow?: boolean\n\n  /**\n   * string or string[], or an object with `ignore` and `ignoreChildren`\n   * methods.\n   *\n   * If a string or string[] is provided, then this is treated as a glob\n   * pattern or array of glob patterns to exclude from matches. To ignore all\n   * children within a directory, as well as the entry itself, append `'/**'`\n   * to the ignore pattern.\n   *\n   * **Note** `ignore` patterns are _always_ in `dot:true` mode, regardless of\n   * any other settings.\n   *\n   * If an object is provided that has `ignored(path)` and/or\n   * `childrenIgnored(path)` methods, then these methods will be called to\n   * determine whether any Path is a match or if its children should be\n   * traversed, respectively.\n   */\n  ignore?: string | string[] | IgnoreLike\n\n  /**\n   * Treat brace expansion like `{a,b}` as a \"magic\" pattern. Has no\n   * effect if {@link nobrace} is set.\n   *\n   * Only has effect on the {@link hasMagic} function.\n   */\n  magicalBraces?: boolean\n\n  /**\n   * Add a `/` character to directory matches. Note that this requires\n   * additional stat calls in some cases.\n   */\n  mark?: boolean\n\n  /**\n   * Perform a basename-only match if the pattern does not contain any slash\n   * characters. That is, `*.js` would be treated as equivalent to\n   * `**\\/*.js`, matching all js files in all directories.\n   */\n  matchBase?: boolean\n\n  /**\n   * Limit the directory traversal to a given depth below the cwd.\n   * Note that this does NOT prevent traversal to sibling folders,\n   * root patterns, and so on. It only limits the maximum folder depth\n   * that the walk will descend, relative to the cwd.\n   */\n  maxDepth?: number\n\n  /**\n   * Do not expand `{a,b}` and `{1..3}` brace sets.\n   */\n  nobrace?: boolean\n\n  /**\n   * Perform a case-insensitive match. This defaults to `true` on macOS and\n   * Windows systems, and `false` on all others.\n   *\n   * **Note** `nocase` should only be explicitly set when it is\n   * known that the filesystem's case sensitivity differs from the\n   * platform default. If set `true` on case-sensitive file\n   * systems, or `false` on case-insensitive file systems, then the\n   * walk may return more or less results than expected.\n   */\n  nocase?: boolean\n\n  /**\n   * Do not match directories, only files. (Note: to match\n   * _only_ directories, put a `/` at the end of the pattern.)\n   */\n  nodir?: boolean\n\n  /**\n   * Do not match \"extglob\" patterns such as `+(a|b)`.\n   */\n  noext?: boolean\n\n  /**\n   * Do not match `**` against multiple filenames. (Ie, treat it as a normal\n   * `*` instead.)\n   *\n   * Conflicts with {@link matchBase}\n   */\n  noglobstar?: boolean\n\n  /**\n   * Defaults to value of `process.platform` if available, or `'linux'` if\n   * not. Setting `platform:'win32'` on non-Windows systems may cause strange\n   * behavior.\n   */\n  platform?: NodeJS.Platform\n\n  /**\n   * Set to true to call `fs.realpath` on all of the\n   * results. In the case of an entry that cannot be resolved, the\n   * entry is omitted. This incurs a slight performance penalty, of\n   * course, because of the added system calls.\n   */\n  realpath?: boolean\n\n  /**\n   *\n   * A string path resolved against the `cwd` option, which\n   * is used as the starting point for absolute patterns that start\n   * with `/`, (but not drive letters or UNC paths on Windows).\n   *\n   * Note that this _doesn't_ necessarily limit the walk to the\n   * `root` directory, and doesn't affect the cwd starting point for\n   * non-absolute patterns. A pattern containing `..` will still be\n   * able to traverse out of the root directory, if it is not an\n   * actual root directory on the filesystem, and any non-absolute\n   * patterns will be matched in the `cwd`. For example, the\n   * pattern `/../*` with `{root:'/some/path'}` will return all\n   * files in `/some`, not all files in `/some/path`. The pattern\n   * `*` with `{root:'/some/path'}` will return all the entries in\n   * the cwd, not the entries in `/some/path`.\n   *\n   * To start absolute and non-absolute patterns in the same\n   * path, you can use `{root:''}`. However, be aware that on\n   * Windows systems, a pattern like `x:/*` or `//host/share/*` will\n   * _always_ start in the `x:/` or `//host/share` directory,\n   * regardless of the `root` setting.\n   */\n  root?: string\n\n  /**\n   * A [PathScurry](http://npm.im/path-scurry) object used\n   * to traverse the file system. If the `nocase` option is set\n   * explicitly, then any provided `scurry` object must match this\n   * setting.\n   */\n  scurry?: PathScurry\n\n  /**\n   * Call `lstat()` on all entries, whether required or not to determine\n   * if it's a valid match. When used with {@link withFileTypes}, this means\n   * that matches will include data such as modified time, permissions, and\n   * so on.  Note that this will incur a performance cost due to the added\n   * system calls.\n   */\n  stat?: boolean\n\n  /**\n   * An AbortSignal which will cancel the Glob walk when\n   * triggered.\n   */\n  signal?: AbortSignal\n\n  /**\n   * Use `\\\\` as a path separator _only_, and\n   *  _never_ as an escape character. If set, all `\\\\` characters are\n   *  replaced with `/` in the pattern.\n   *\n   *  Note that this makes it **impossible** to match against paths\n   *  containing literal glob pattern characters, but allows matching\n   *  with patterns constructed using `path.join()` and\n   *  `path.resolve()` on Windows platforms, mimicking the (buggy!)\n   *  behavior of Glob v7 and before on Windows. Please use with\n   *  caution, and be mindful of [the caveat below about Windows\n   *  paths](#windows). (For legacy reasons, this is also set if\n   *  `allowWindowsEscape` is set to the exact value `false`.)\n   */\n  windowsPathsNoEscape?: boolean\n\n  /**\n   * Return [PathScurry](http://npm.im/path-scurry)\n   * `Path` objects instead of strings. These are similar to a\n   * NodeJS `Dirent` object, but with additional methods and\n   * properties.\n   *\n   * Conflicts with {@link absolute}\n   */\n  withFileTypes?: boolean\n\n  /**\n   * An fs implementation to override some or all of the defaults.  See\n   * http://npm.im/path-scurry for details about what can be overridden.\n   */\n  fs?: FSOption\n\n  /**\n   * Just passed along to Minimatch.  Note that this makes all pattern\n   * matching operations slower and *extremely* noisy.\n   */\n  debug?: boolean\n\n  /**\n   * Return `/` delimited paths, even on Windows.\n   *\n   * On posix systems, this has no effect.  But, on Windows, it means that\n   * paths will be `/` delimited, and absolute paths will be their full\n   * resolved UNC forms, eg instead of `'C:\\\\foo\\\\bar'`, it would return\n   * `'//?/C:/foo/bar'`\n   */\n  posix?: boolean\n\n  /**\n   * Do not match any children of any matches. For example, the pattern\n   * `**\\/foo` would match `a/foo`, but not `a/foo/b/foo` in this mode.\n   *\n   * This is especially useful for cases like \"find all `node_modules`\n   * folders, but not the ones in `node_modules`\".\n   *\n   * In order to support this, the `Ignore` implementation must support an\n   * `add(pattern: string)` method. If using the default `Ignore` class, then\n   * this is fine, but if this is set to `false`, and a custom `Ignore` is\n   * provided that does not have an `add()` method, then it will throw an\n   * error.\n   *\n   * **Caveat** It *only* ignores matches that would be a descendant of a\n   * previous match, and only if that descendant is matched *after* the\n   * ancestor is encountered. Since the file system walk happens in\n   * indeterminate order, it's possible that a match will already be added\n   * before its ancestor, if multiple or braced patterns are used.\n   *\n   * For example:\n   *\n   * ```ts\n   * const results = await glob([\n   *   // likely to match first, since it's just a stat\n   *   'a/b/c/d/e/f',\n   *\n   *   // this pattern is more complicated! It must to various readdir()\n   *   // calls and test the results against a regular expression, and that\n   *   // is certainly going to take a little bit longer.\n   *   //\n   *   // So, later on, it encounters a match at 'a/b/c/d/e', but it's too\n   *   // late to ignore a/b/c/d/e/f, because it's already been emitted.\n   *   'a/[bdf]/?/[a-z]/*',\n   * ], { includeChildMatches: false })\n   * ```\n   *\n   * It's best to only set this to `false` if you can be reasonably sure that\n   * no components of the pattern will potentially match one another's file\n   * system descendants, or if the occasional included child entry will not\n   * cause problems.\n   *\n   * @default true\n   */\n  includeChildMatches?: boolean\n}\n\nexport type GlobOptionsWithFileTypesTrue = GlobOptions & {\n  withFileTypes: true\n  // string options not relevant if returning Path objects.\n  absolute?: undefined\n  mark?: undefined\n  posix?: undefined\n}\n\nexport type GlobOptionsWithFileTypesFalse = GlobOptions & {\n  withFileTypes?: false\n}\n\nexport type GlobOptionsWithFileTypesUnset = GlobOptions & {\n  withFileTypes?: undefined\n}\n\nexport type Result<Opts> =\n  Opts extends GlobOptionsWithFileTypesTrue ? Path\n  : Opts extends GlobOptionsWithFileTypesFalse ? string\n  : Opts extends GlobOptionsWithFileTypesUnset ? string\n  : string | Path\nexport type Results<Opts> = Result<Opts>[]\n\nexport type FileTypes<Opts> =\n  Opts extends GlobOptionsWithFileTypesTrue ? true\n  : Opts extends GlobOptionsWithFileTypesFalse ? false\n  : Opts extends GlobOptionsWithFileTypesUnset ? false\n  : boolean\n\n/**\n * An object that can perform glob pattern traversals.\n */\nexport class Glob<Opts extends GlobOptions> implements GlobOptions {\n  absolute?: boolean\n  cwd: string\n  root?: string\n  dot: boolean\n  dotRelative: boolean\n  follow: boolean\n  ignore?: string | string[] | IgnoreLike\n  magicalBraces: boolean\n  mark?: boolean\n  matchBase: boolean\n  maxDepth: number\n  nobrace: boolean\n  nocase: boolean\n  nodir: boolean\n  noext: boolean\n  noglobstar: boolean\n  pattern: string[]\n  platform: NodeJS.Platform\n  realpath: boolean\n  scurry: PathScurry\n  stat: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape: boolean\n  withFileTypes: FileTypes<Opts>\n  includeChildMatches: boolean\n\n  /**\n   * The options provided to the constructor.\n   */\n  opts: Opts\n\n  /**\n   * An array of parsed immutable {@link Pattern} objects.\n   */\n  patterns: Pattern[]\n\n  /**\n   * All options are stored as properties on the `Glob` object.\n   *\n   * See {@link GlobOptions} for full options descriptions.\n   *\n   * Note that a previous `Glob` object can be passed as the\n   * `GlobOptions` to another `Glob` instantiation to re-use settings\n   * and caches with a new pattern.\n   *\n   * Traversal functions can be called multiple times to run the walk\n   * again.\n   */\n  constructor(pattern: string | string[], opts: Opts) {\n    /* c8 ignore start */\n    if (!opts) throw new TypeError('glob options required')\n    /* c8 ignore stop */\n    this.withFileTypes = !!opts.withFileTypes as FileTypes<Opts>\n    this.signal = opts.signal\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.dotRelative = !!opts.dotRelative\n    this.nodir = !!opts.nodir\n    this.mark = !!opts.mark\n    if (!opts.cwd) {\n      this.cwd = ''\n    } else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n      opts.cwd = fileURLToPath(opts.cwd)\n    }\n    this.cwd = opts.cwd || ''\n    this.root = opts.root\n    this.magicalBraces = !!opts.magicalBraces\n    this.nobrace = !!opts.nobrace\n    this.noext = !!opts.noext\n    this.realpath = !!opts.realpath\n    this.absolute = opts.absolute\n    this.includeChildMatches = opts.includeChildMatches !== false\n\n    this.noglobstar = !!opts.noglobstar\n    this.matchBase = !!opts.matchBase\n    this.maxDepth =\n      typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity\n    this.stat = !!opts.stat\n    this.ignore = opts.ignore\n\n    if (this.withFileTypes && this.absolute !== undefined) {\n      throw new Error('cannot set absolute and withFileTypes:true')\n    }\n\n    if (typeof pattern === 'string') {\n      pattern = [pattern]\n    }\n\n    this.windowsPathsNoEscape =\n      !!opts.windowsPathsNoEscape ||\n      (opts as { allowWindowsEscape?: boolean }).allowWindowsEscape ===\n        false\n\n    if (this.windowsPathsNoEscape) {\n      pattern = pattern.map(p => p.replace(/\\\\/g, '/'))\n    }\n\n    if (this.matchBase) {\n      if (opts.noglobstar) {\n        throw new TypeError('base matching requires globstar')\n      }\n      pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`))\n    }\n\n    this.pattern = pattern\n\n    this.platform = opts.platform || defaultPlatform\n    this.opts = { ...opts, platform: this.platform }\n    if (opts.scurry) {\n      this.scurry = opts.scurry\n      if (\n        opts.nocase !== undefined &&\n        opts.nocase !== opts.scurry.nocase\n      ) {\n        throw new Error('nocase option contradicts provided scurry option')\n      }\n    } else {\n      const Scurry =\n        opts.platform === 'win32' ? PathScurryWin32\n        : opts.platform === 'darwin' ? PathScurryDarwin\n        : opts.platform ? PathScurryPosix\n        : PathScurry\n      this.scurry = new Scurry(this.cwd, {\n        nocase: opts.nocase,\n        fs: opts.fs,\n      })\n    }\n    this.nocase = this.scurry.nocase\n\n    // If you do nocase:true on a case-sensitive file system, then\n    // we need to use regexps instead of strings for non-magic\n    // path portions, because statting `aBc` won't return results\n    // for the file `AbC` for example.\n    const nocaseMagicOnly =\n      this.platform === 'darwin' || this.platform === 'win32'\n\n    const mmo: MinimatchOptions = {\n      // default nocase based on platform\n      ...opts,\n      dot: this.dot,\n      matchBase: this.matchBase,\n      nobrace: this.nobrace,\n      nocase: this.nocase,\n      nocaseMagicOnly,\n      nocomment: true,\n      noext: this.noext,\n      nonegate: true,\n      optimizationLevel: 2,\n      platform: this.platform,\n      windowsPathsNoEscape: this.windowsPathsNoEscape,\n      debug: !!this.opts.debug,\n    }\n\n    const mms = this.pattern.map(p => new Minimatch(p, mmo))\n    const [matchSet, globParts] = mms.reduce(\n      (set: [MatchSet, GlobParts], m) => {\n        set[0].push(...m.set)\n        set[1].push(...m.globParts)\n        return set\n      },\n      [[], []],\n    )\n    this.patterns = matchSet.map((set, i) => {\n      const g = globParts[i]\n      /* c8 ignore start */\n      if (!g) throw new Error('invalid pattern object')\n      /* c8 ignore stop */\n      return new Pattern(set, g, 0, this.platform)\n    })\n  }\n\n  /**\n   * Returns a Promise that resolves to the results array.\n   */\n  async walk(): Promise<Results<Opts>>\n  async walk(): Promise<(string | Path)[]> {\n    // Walkers always return array of Path objects, so we just have to\n    // coerce them into the right shape.  It will have already called\n    // realpath() if the option was set to do so, so we know that's cached.\n    // start out knowing the cwd, at least\n    return [\n      ...(await new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity ?\n            this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n        includeChildMatches: this.includeChildMatches,\n      }).walk()),\n    ]\n  }\n\n  /**\n   * synchronous {@link Glob.walk}\n   */\n  walkSync(): Results<Opts>\n  walkSync(): (string | Path)[] {\n    return [\n      ...new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity ?\n            this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n        includeChildMatches: this.includeChildMatches,\n      }).walkSync(),\n    ]\n  }\n\n  /**\n   * Stream results asynchronously.\n   */\n  stream(): Minipass<Result<Opts>, Result<Opts>>\n  stream(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity ?\n          this.maxDepth + this.scurry.cwd.depth()\n        : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n      includeChildMatches: this.includeChildMatches,\n    }).stream()\n  }\n\n  /**\n   * Stream results synchronously.\n   */\n  streamSync(): Minipass<Result<Opts>, Result<Opts>>\n  streamSync(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity ?\n          this.maxDepth + this.scurry.cwd.depth()\n        : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n      includeChildMatches: this.includeChildMatches,\n    }).streamSync()\n  }\n\n  /**\n   * Default sync iteration function. Returns a Generator that\n   * iterates over the results.\n   */\n  iterateSync(): Generator<Result<Opts>, void, void> {\n    return this.streamSync()[Symbol.iterator]()\n  }\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  /**\n   * Default async iteration function. Returns an AsyncGenerator that\n   * iterates over the results.\n   */\n  iterate(): AsyncGenerator<Result<Opts>, void, void> {\n    return this.stream()[Symbol.asyncIterator]()\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/esm/ignore.js":{"lineLengths":[54,34,66,45,38,39,55,14,43,20,14,3,41,3,21,13,21,13,21,13,11,95,27,27,35,35,33,23,22,20,19,18,23,33,21,28,27,10,34,26,5,14,75,72,75,47,75,77,31,79,76,29,78,48,51,49,37,46,33,40,58,13,44,61,63,31,34,13,32,71,65,70,44,25,38,16,38,27,29,50,20,50,13,9,5,16,38,41,45,41,40,56,28,9,40,56,28,9,21,5,24,44,53,48,34,28,9,48,34,28,9,21,5,1,34],"data":{"version":3,"file":"ignore.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/ignore.ts"],"names":[],"mappings":"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","sourcesContent":["// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\n\nimport { Minimatch, MinimatchOptions } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\nexport interface IgnoreLike {\n  ignored?: (p: Path) => boolean\n  childrenIgnored?: (p: Path) => boolean\n  add?: (ignore: string) => void\n}\n\nconst defaultPlatform: NodeJS.Platform =\n  (\n    typeof process === 'object' &&\n    process &&\n    typeof process.platform === 'string'\n  ) ?\n    process.platform\n  : 'linux'\n\n/**\n * Class used to process ignored patterns\n */\nexport class Ignore implements IgnoreLike {\n  relative: Minimatch[]\n  relativeChildren: Minimatch[]\n  absolute: Minimatch[]\n  absoluteChildren: Minimatch[]\n  platform: NodeJS.Platform\n  mmopts: MinimatchOptions\n\n  constructor(\n    ignored: string[],\n    {\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      platform = defaultPlatform,\n    }: GlobWalkerOpts,\n  ) {\n    this.relative = []\n    this.absolute = []\n    this.relativeChildren = []\n    this.absoluteChildren = []\n    this.platform = platform\n    this.mmopts = {\n      dot: true,\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      optimizationLevel: 2,\n      platform,\n      nocomment: true,\n      nonegate: true,\n    }\n    for (const ign of ignored) this.add(ign)\n  }\n\n  add(ign: string) {\n    // this is a little weird, but it gives us a clean set of optimized\n    // minimatch matchers, without getting tripped up if one of them\n    // ends in /** inside a brace section, and it's only inefficient at\n    // the start of the walk, not along it.\n    // It'd be nice if the Pattern class just had a .test() method, but\n    // handling globstars is a bit of a pita, and that code already lives\n    // in minimatch anyway.\n    // Another way would be if maybe Minimatch could take its set/globParts\n    // as an option, and then we could at least just use Pattern to test\n    // for absolute-ness.\n    // Yet another way, Minimatch could take an array of glob strings, and\n    // a cwd option, and do the right thing.\n    const mm = new Minimatch(ign, this.mmopts)\n    for (let i = 0; i < mm.set.length; i++) {\n      const parsed = mm.set[i]\n      const globParts = mm.globParts[i]\n      /* c8 ignore start */\n      if (!parsed || !globParts) {\n        throw new Error('invalid pattern object')\n      }\n      // strip off leading ./ portions\n      // https://github.com/isaacs/node-glob/issues/570\n      while (parsed[0] === '.' && globParts[0] === '.') {\n        parsed.shift()\n        globParts.shift()\n      }\n      /* c8 ignore stop */\n      const p = new Pattern(parsed, globParts, 0, this.platform)\n      const m = new Minimatch(p.globString(), this.mmopts)\n      const children = globParts[globParts.length - 1] === '**'\n      const absolute = p.isAbsolute()\n      if (absolute) this.absolute.push(m)\n      else this.relative.push(m)\n      if (children) {\n        if (absolute) this.absoluteChildren.push(m)\n        else this.relativeChildren.push(m)\n      }\n    }\n  }\n\n  ignored(p: Path): boolean {\n    const fullpath = p.fullpath()\n    const fullpaths = `${fullpath}/`\n    const relative = p.relative() || '.'\n    const relatives = `${relative}/`\n    for (const m of this.relative) {\n      if (m.match(relative) || m.match(relatives)) return true\n    }\n    for (const m of this.absolute) {\n      if (m.match(fullpath) || m.match(fullpaths)) return true\n    }\n    return false\n  }\n\n  childrenIgnored(p: Path): boolean {\n    const fullpath = p.fullpath() + '/'\n    const relative = (p.relative() || '.') + '/'\n    for (const m of this.relativeChildren) {\n      if (m.match(relative)) return true\n    }\n    for (const m of this.absoluteChildren) {\n      if (m.match(fullpath)) return true\n    }\n    return false\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/esm/assert-valid-pattern.js":{"lineLengths":[37,48,38,47,5,46,51,5,2,48],"data":{"version":3,"file":"assert-valid-pattern.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/assert-valid-pattern.ts"],"names":[],"mappings":"AAAA,MAAM,kBAAkB,GAAG,IAAI,GAAG,EAAE,CAAA;AACpC,MAAM,CAAC,MAAM,kBAAkB,GAA2B,CACxD,OAAY,EACe,EAAE;IAC7B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QAC/B,MAAM,IAAI,SAAS,CAAC,iBAAiB,CAAC,CAAA;KACvC;IAED,IAAI,OAAO,CAAC,MAAM,GAAG,kBAAkB,EAAE;QACvC,MAAM,IAAI,SAAS,CAAC,qBAAqB,CAAC,CAAA;KAC3C;AACH,CAAC,CAAA","sourcesContent":["const MAX_PATTERN_LENGTH = 1024 * 64\nexport const assertValidPattern: (pattern: any) => void = (\n  pattern: any\n): asserts pattern is string => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/esm/escape.js":{"lineLengths":[3,49,2,73,75,74,75,73,3,70,60,64,58,31,41,44,2,34],"data":{"version":3,"file":"escape.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/escape.ts"],"names":[],"mappings":"AACA;;;;;;;;GAQG;AACH,MAAM,CAAC,MAAM,MAAM,GAAG,CACpB,CAAS,EACT,EACE,oBAAoB,GAAG,KAAK,MACsB,EAAE,EACtD,EAAE;IACF,wDAAwD;IACxD,4DAA4D;IAC5D,sDAAsD;IACtD,OAAO,oBAAoB;QACzB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC,CAAA;AACvC,CAAC,CAAA","sourcesContent":["import { MinimatchOptions } from './index.js'\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  // don't need to escape +@! because we escape the parens\n  // that make those magic, and escaping ! as [!] isn't valid,\n  // because [!]] is a valid glob class meaning not ']'.\n  return windowsPathsNoEscape\n    ? s.replace(/[?*()[\\]]/g, '[$&]')\n    : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&')\n}\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/esm/unescape.js":{"lineLengths":[3,64,2,72,77,72,66,2,70,33,2,77,16,3,72,31,43,85,2,36],"data":{"version":3,"file":"unescape.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/unescape.ts"],"names":[],"mappings":"AACA;;;;;;;;;;;;;GAaG;AACH,MAAM,CAAC,MAAM,QAAQ,GAAG,CACtB,CAAS,EACT,EACE,oBAAoB,GAAG,KAAK,MACsB,EAAE,EACtD,EAAE;IACF,OAAO,oBAAoB;QACzB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA;AAChF,CAAC,CAAA","sourcesContent":["import { MinimatchOptions } from './index.js'\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nexport const unescape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  return windowsPathsNoEscape\n    ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n    : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1')\n}\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/esm/ast.js":{"lineLengths":[30,52,41,49,42,65,64,42,71,53,29,71,69,69,44,58,38,46,74,32,21,32,26,74,38,33,73,59,18,9,10,14,19,16,12,17,10,24,13,14,54,43,22,45,25,42,17,34,30,62,76,65,52,34,74,5,20,29,41,34,28,38,38,25,37,47,9,80,30,5,31,16,41,34,25,79,9,14,36,83,9,5,17,29,32,56,29,24,28,48,24,32,14,40,31,25,81,22,31,24,89,50,45,55,76,25,44,50,21,17,23,31,13,9,20,5,20,32,25,25,33,85,54,13,32,32,9,5,14,38,84,63,41,28,27,35,74,25,9,19,5,15,32,24,58,37,25,36,24,81,31,53,35,58,29,13,9,20,5,13,32,24,39,24,35,25,23,41,50,29,65,28,44,5,18,37,28,12,40,5,19,45,38,24,9,17,5,42,29,28,28,29,32,65,24,25,36,42,75,42,45,41,29,29,17,30,47,53,44,25,21,80,40,21,29,29,17,37,35,35,37,29,29,17,78,34,29,48,56,34,29,17,25,13,26,21,9,48,31,24,38,25,21,32,38,71,38,41,37,25,25,13,26,43,49,40,21,17,76,36,17,25,25,13,33,31,31,33,25,25,13,60,31,25,45,31,52,25,13,28,31,25,33,42,25,13,28,60,41,17,31,25,41,25,13,21,9,29,74,41,24,34,46,17,5,44,54,48,19,5,72,21,19,40,29,32,44,28,37,66,71,75,46,36,29,36,49,59,24,24,9,77,60,21,24,11,5,19,29,5,73,73,77,74,73,76,72,62,6,43,32,60,43,50,14,32,16,6,71,28,53,34,66,43,50,14,52,21,6,78,79,79,19,6,76,64,69,32,66,49,56,6,75,68,6,74,41,6,78,79,6,22,51,48,75,6,81,78,74,42,6,77,72,46,6,31,74,73,75,30,52,32,29,25,59,35,27,70,64,49,60,51,26,14,26,27,33,57,83,67,84,67,100,42,52,78,44,43,79,58,74,80,76,81,83,68,86,92,21,17,13,73,25,31,41,45,34,13,44,20,22,30,52,28,14,9,73,73,44,64,31,62,44,75,79,39,38,30,29,39,64,9,43,72,16,40,38,32,9,29,56,9,62,23,50,77,9,14,43,67,26,81,30,27,35,25,39,30,61,33,65,38,50,41,9,16,18,27,48,24,10,5,25,26,23,59,33,40,64,13,32,77,68,47,22,10,66,23,5,56,29,20,26,47,37,27,33,58,25,13,29,44,33,17,22,36,17,25,13,28,78,31,30,47,38,49,29,17,13,28,44,38,20,31,32,25,13,28,28,32,25,13,34,9,55,5,1,31],"data":{"version":3,"file":"ast.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/ast.ts"],"names":[],"mappings":"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","sourcesContent":["// parse a single path portion\n\nimport { parseClass } from './brace-expressions.js'\nimport { MinimatchOptions, MMRegExp } from './index.js'\nimport { unescape } from './unescape.js'\n\n// classes [] are handled by the parseClass method\n// for positive extglobs, we sub-parse the contents, and combine,\n// with the appropriate regexp close.\n// for negative extglobs, we sub-parse the contents, but then\n// have to include the rest of the pattern, then the parent, etc.,\n// as the thing that cannot be because RegExp negative lookaheads\n// are different from globs.\n//\n// So for example:\n// a@(i|w!(x|y)z|j)b => ^a(i|w((!?(x|y)zb).*)z|j)b$\n//   1   2 3   4 5 6      1   2    3   46      5 6\n//\n// Assembling the extglob requires not just the negated patterns themselves,\n// but also anything following the negative patterns up to the boundary\n// of the current pattern, plus anything following in the parent pattern.\n//\n//\n// So, first, we parse the string into an AST of extglobs, without turning\n// anything into regexps yet.\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y']}, 'z'], ['j']]}, 'b']\n//\n// Then, for all the negative extglobs, we append whatever comes after in\n// each parent as their tail\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y'], 'z', 'b'}, 'z'], ['j']]}, 'b']\n//\n// Lastly, we turn each of these pieces into a regexp, and join\n//\n//                                 v----- .* because there's more following,\n//                                 v    v  otherwise, .+ because it must be\n//                                 v    v  *something* there.\n// ['^a', {@ ['i', 'w(?:(!?(?:x|y).*zb$).*)z', 'j' ]}, 'b$']\n//   copy what follows into here--^^^^^\n// ['^a', '(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)', 'b$']\n// ['^a(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)b$']\n\nexport type ExtglobType = '!' | '?' | '+' | '*' | '@'\nconst types = new Set<ExtglobType>(['!', '?', '+', '*', '@'])\nconst isExtglobType = (c: string): c is ExtglobType =>\n  types.has(c as ExtglobType)\n\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!(?:^|/)\\\\.\\\\.?(?:$|/))'\nconst startNoDot = '(?!\\\\.)'\n\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.'])\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.'])\nconst reSpecials = new Set('().*{}+?[]^$\\\\!')\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// any single thing other than /\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?'\n\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\n\nexport class AST {\n  type: ExtglobType | null\n  readonly #root: AST\n\n  #hasMagic?: boolean\n  #uflag: boolean = false\n  #parts: (string | AST)[] = []\n  readonly #parent?: AST\n  readonly #parentIndex: number\n  #negs: AST[]\n  #filledNegs: boolean = false\n  #options: MinimatchOptions\n  #toString?: string\n  // set to true if it's an extglob with no children\n  // (which really means one child of '')\n  #emptyExt: boolean = false\n\n  constructor(\n    type: ExtglobType | null,\n    parent?: AST,\n    options: MinimatchOptions = {}\n  ) {\n    this.type = type\n    // extglobs are inherently magical\n    if (type) this.#hasMagic = true\n    this.#parent = parent\n    this.#root = this.#parent ? this.#parent.#root : this\n    this.#options = this.#root === this ? options : this.#root.#options\n    this.#negs = this.#root === this ? [] : this.#root.#negs\n    if (type === '!' && !this.#root.#filledNegs) this.#negs.push(this)\n    this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0\n  }\n\n  get hasMagic(): boolean | undefined {\n    /* c8 ignore start */\n    if (this.#hasMagic !== undefined) return this.#hasMagic\n    /* c8 ignore stop */\n    for (const p of this.#parts) {\n      if (typeof p === 'string') continue\n      if (p.type || p.hasMagic) return (this.#hasMagic = true)\n    }\n    // note: will be undefined until we generate the regexp src and find out\n    return this.#hasMagic\n  }\n\n  // reconstructs the pattern\n  toString(): string {\n    if (this.#toString !== undefined) return this.#toString\n    if (!this.type) {\n      return (this.#toString = this.#parts.map(p => String(p)).join(''))\n    } else {\n      return (this.#toString =\n        this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')')\n    }\n  }\n\n  #fillNegs() {\n    /* c8 ignore start */\n    if (this !== this.#root) throw new Error('should only call on root')\n    if (this.#filledNegs) return this\n    /* c8 ignore stop */\n\n    // call toString() once to fill this out\n    this.toString()\n    this.#filledNegs = true\n    let n: AST | undefined\n    while ((n = this.#negs.pop())) {\n      if (n.type !== '!') continue\n      // walk up the tree, appending everthing that comes AFTER parentIndex\n      let p: AST | undefined = n\n      let pp = p.#parent\n      while (pp) {\n        for (\n          let i = p.#parentIndex + 1;\n          !pp.type && i < pp.#parts.length;\n          i++\n        ) {\n          for (const part of n.#parts) {\n            /* c8 ignore start */\n            if (typeof part === 'string') {\n              throw new Error('string part in extglob AST??')\n            }\n            /* c8 ignore stop */\n            part.copyIn(pp.#parts[i])\n          }\n        }\n        p = pp\n        pp = p.#parent\n      }\n    }\n    return this\n  }\n\n  push(...parts: (string | AST)[]) {\n    for (const p of parts) {\n      if (p === '') continue\n      /* c8 ignore start */\n      if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n        throw new Error('invalid part: ' + p)\n      }\n      /* c8 ignore stop */\n      this.#parts.push(p)\n    }\n  }\n\n  toJSON() {\n    const ret: any[] =\n      this.type === null\n        ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n        : [this.type, ...this.#parts.map(p => (p as AST).toJSON())]\n    if (this.isStart() && !this.type) ret.unshift([])\n    if (\n      this.isEnd() &&\n      (this === this.#root ||\n        (this.#root.#filledNegs && this.#parent?.type === '!'))\n    ) {\n      ret.push({})\n    }\n    return ret\n  }\n\n  isStart(): boolean {\n    if (this.#root === this) return true\n    // if (this.type) return !!this.#parent?.isStart()\n    if (!this.#parent?.isStart()) return false\n    if (this.#parentIndex === 0) return true\n    // if everything AHEAD of this is a negation, then it's still the \"start\"\n    const p = this.#parent\n    for (let i = 0; i < this.#parentIndex; i++) {\n      const pp = p.#parts[i]\n      if (!(pp instanceof AST && pp.type === '!')) {\n        return false\n      }\n    }\n    return true\n  }\n\n  isEnd(): boolean {\n    if (this.#root === this) return true\n    if (this.#parent?.type === '!') return true\n    if (!this.#parent?.isEnd()) return false\n    if (!this.type) return this.#parent?.isEnd()\n    // if not root, it'll always have a parent\n    /* c8 ignore start */\n    const pl = this.#parent ? this.#parent.#parts.length : 0\n    /* c8 ignore stop */\n    return this.#parentIndex === pl - 1\n  }\n\n  copyIn(part: AST | string) {\n    if (typeof part === 'string') this.push(part)\n    else this.push(part.clone(this))\n  }\n\n  clone(parent: AST) {\n    const c = new AST(this.type, parent)\n    for (const p of this.#parts) {\n      c.copyIn(p)\n    }\n    return c\n  }\n\n  static #parseAST(\n    str: string,\n    ast: AST,\n    pos: number,\n    opt: MinimatchOptions\n  ): number {\n    let escaping = false\n    let inBrace = false\n    let braceStart = -1\n    let braceNeg = false\n    if (ast.type === null) {\n      // outside of a extglob, append until we find a start\n      let i = pos\n      let acc = ''\n      while (i < str.length) {\n        const c = str.charAt(i++)\n        // still accumulate escapes at this point, but we do ignore\n        // starts that are escaped\n        if (escaping || c === '\\\\') {\n          escaping = !escaping\n          acc += c\n          continue\n        }\n\n        if (inBrace) {\n          if (i === braceStart + 1) {\n            if (c === '^' || c === '!') {\n              braceNeg = true\n            }\n          } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n            inBrace = false\n          }\n          acc += c\n          continue\n        } else if (c === '[') {\n          inBrace = true\n          braceStart = i\n          braceNeg = false\n          acc += c\n          continue\n        }\n\n        if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n          ast.push(acc)\n          acc = ''\n          const ext = new AST(c, ast)\n          i = AST.#parseAST(str, ext, i, opt)\n          ast.push(ext)\n          continue\n        }\n        acc += c\n      }\n      ast.push(acc)\n      return i\n    }\n\n    // some kind of extglob, pos is at the (\n    // find the next | or )\n    let i = pos + 1\n    let part = new AST(null, ast)\n    const parts: AST[] = []\n    let acc = ''\n    while (i < str.length) {\n      const c = str.charAt(i++)\n      // still accumulate escapes at this point, but we do ignore\n      // starts that are escaped\n      if (escaping || c === '\\\\') {\n        escaping = !escaping\n        acc += c\n        continue\n      }\n\n      if (inBrace) {\n        if (i === braceStart + 1) {\n          if (c === '^' || c === '!') {\n            braceNeg = true\n          }\n        } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n          inBrace = false\n        }\n        acc += c\n        continue\n      } else if (c === '[') {\n        inBrace = true\n        braceStart = i\n        braceNeg = false\n        acc += c\n        continue\n      }\n\n      if (isExtglobType(c) && str.charAt(i) === '(') {\n        part.push(acc)\n        acc = ''\n        const ext = new AST(c, part)\n        part.push(ext)\n        i = AST.#parseAST(str, ext, i, opt)\n        continue\n      }\n      if (c === '|') {\n        part.push(acc)\n        acc = ''\n        parts.push(part)\n        part = new AST(null, ast)\n        continue\n      }\n      if (c === ')') {\n        if (acc === '' && ast.#parts.length === 0) {\n          ast.#emptyExt = true\n        }\n        part.push(acc)\n        acc = ''\n        ast.push(...parts, part)\n        return i\n      }\n      acc += c\n    }\n\n    // unfinished extglob\n    // if we got here, it was a malformed extglob! not an extglob, but\n    // maybe something else in there.\n    ast.type = null\n    ast.#hasMagic = undefined\n    ast.#parts = [str.substring(pos - 1)]\n    return i\n  }\n\n  static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n    const ast = new AST(null, undefined, options)\n    AST.#parseAST(pattern, ast, 0, options)\n    return ast\n  }\n\n  // returns the regular expression if there's magic, or the unescaped\n  // string if not.\n  toMMPattern(): MMRegExp | string {\n    // should only be called on root\n    /* c8 ignore start */\n    if (this !== this.#root) return this.#root.toMMPattern()\n    /* c8 ignore stop */\n    const glob = this.toString()\n    const [re, body, hasMagic, uflag] = this.toRegExpSource()\n    // if we're in nocase mode, and not nocaseMagicOnly, then we do\n    // still need a regular expression if we have to case-insensitively\n    // match capital/lowercase characters.\n    const anyMagic =\n      hasMagic ||\n      this.#hasMagic ||\n      (this.#options.nocase &&\n        !this.#options.nocaseMagicOnly &&\n        glob.toUpperCase() !== glob.toLowerCase())\n    if (!anyMagic) {\n      return body\n    }\n\n    const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '')\n    return Object.assign(new RegExp(`^${re}$`, flags), {\n      _src: re,\n      _glob: glob,\n    })\n  }\n\n  get options() {\n    return this.#options\n  }\n\n  // returns the string match, the regexp source, whether there's magic\n  // in the regexp (so a regular expression is required) and whether or\n  // not the uflag is needed for the regular expression (for posix classes)\n  // TODO: instead of injecting the start/end at this point, just return\n  // the BODY of the regexp, along with the start/end portions suitable\n  // for binding the start/end in either a joined full-path makeRe context\n  // (where we bind to (^|/), or a standalone matchPart context (where\n  // we bind to ^, and not /).  Otherwise slashes get duped!\n  //\n  // In part-matching mode, the start is:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n  // - if dots allowed or not possible: ^\n  // - if dots possible and not allowed: ^(?!\\.)\n  // end is:\n  // - if not isEnd(): nothing\n  // - else: $\n  //\n  // In full-path matching mode, we put the slash at the START of the\n  // pattern, so start is:\n  // - if first pattern: same as part-matching mode\n  // - if not isStart(): nothing\n  // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n  // - if dots allowed or not possible: /\n  // - if dots possible and not allowed: /(?!\\.)\n  // end is:\n  // - if last pattern, same as part-matching mode\n  // - else nothing\n  //\n  // Always put the (?:$|/) on negated tails, though, because that has to be\n  // there to bind the end of the negated pattern portion, and it's easier to\n  // just stick it in now rather than try to inject it later in the middle of\n  // the pattern.\n  //\n  // We can just always return the same end, and leave it up to the caller\n  // to know whether it's going to be used joined or in parts.\n  // And, if the start is adjusted slightly, can do the same there:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n  // - if dots allowed or not possible: (?:/|^)\n  // - if dots possible and not allowed: (?:/|^)(?!\\.)\n  //\n  // But it's better to have a simpler binding without a conditional, for\n  // performance, so probably better to return both start options.\n  //\n  // Then the caller just ignores the end if it's not the first pattern,\n  // and the start always gets applied.\n  //\n  // But that's always going to be $ if it's the ending pattern, or nothing,\n  // so the caller can just attach $ at the end of the pattern when building.\n  //\n  // So the todo is:\n  // - better detect what kind of start is needed\n  // - return both flavors of starting pattern\n  // - attach $ at the end of the pattern when creating the actual RegExp\n  //\n  // Ah, but wait, no, that all only applies to the root when the first pattern\n  // is not an extglob. If the first pattern IS an extglob, then we need all\n  // that dot prevention biz to live in the extglob portions, because eg\n  // +(*|.x*) can match .xy but not .yx.\n  //\n  // So, return the two flavors if it's #root and the first child is not an\n  // AST, otherwise leave it to the child AST to handle it, and there,\n  // use the (?:^|/) style of start binding.\n  //\n  // Even simplified further:\n  // - Since the start for a join is eg /(?!\\.) and the start for a part\n  // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n  // or start or whatever) and prepend ^ or / at the Regexp construction.\n  toRegExpSource(\n    allowDot?: boolean\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    const dot = allowDot ?? !!this.#options.dot\n    if (this.#root === this) this.#fillNegs()\n    if (!this.type) {\n      const noEmpty = this.isStart() && this.isEnd()\n      const src = this.#parts\n        .map(p => {\n          const [re, _, hasMagic, uflag] =\n            typeof p === 'string'\n              ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n              : p.toRegExpSource(allowDot)\n          this.#hasMagic = this.#hasMagic || hasMagic\n          this.#uflag = this.#uflag || uflag\n          return re\n        })\n        .join('')\n\n      let start = ''\n      if (this.isStart()) {\n        if (typeof this.#parts[0] === 'string') {\n          // this is the string that will match the start of the pattern,\n          // so we need to protect against dots and such.\n\n          // '.' and '..' cannot match unless the pattern is that exactly,\n          // even if it starts with . or dot:true is set.\n          const dotTravAllowed =\n            this.#parts.length === 1 && justDots.has(this.#parts[0])\n          if (!dotTravAllowed) {\n            const aps = addPatternStart\n            // check if we have a possibility of matching . or ..,\n            // and prevent that.\n            const needNoTrav =\n              // dots are allowed, and the pattern starts with [ or .\n              (dot && aps.has(src.charAt(0))) ||\n              // the pattern starts with \\., and then [ or .\n              (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n              // the pattern starts with \\.\\., and then [ or .\n              (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)))\n            // no need to prevent dots if it can't match a dot, or if a\n            // sub-pattern will be preventing it anyway.\n            const needNoDot = !dot && !allowDot && aps.has(src.charAt(0))\n\n            start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : ''\n          }\n        }\n      }\n\n      // append the \"end of path portion\" pattern to negation tails\n      let end = ''\n      if (\n        this.isEnd() &&\n        this.#root.#filledNegs &&\n        this.#parent?.type === '!'\n      ) {\n        end = '(?:$|\\\\/)'\n      }\n      const final = start + src + end\n      return [\n        final,\n        unescape(src),\n        (this.#hasMagic = !!this.#hasMagic),\n        this.#uflag,\n      ]\n    }\n\n    // We need to calculate the body *twice* if it's a repeat pattern\n    // at the start, once in nodot mode, then again in dot mode, so a\n    // pattern like *(?) can match 'x.y'\n\n    const repeated = this.type === '*' || this.type === '+'\n    // some kind of extglob\n    const start = this.type === '!' ? '(?:(?!(?:' : '(?:'\n    let body = this.#partsToRegExp(dot)\n\n    if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n      // invalid extglob, has to at least be *something* present, if it's\n      // the entire path portion.\n      const s = this.toString()\n      this.#parts = [s]\n      this.type = null\n      this.#hasMagic = undefined\n      return [s, unescape(this.toString()), false, false]\n    }\n\n    // XXX abstract out this map method\n    let bodyDotAllowed =\n      !repeated || allowDot || dot || !startNoDot\n        ? ''\n        : this.#partsToRegExp(true)\n    if (bodyDotAllowed === body) {\n      bodyDotAllowed = ''\n    }\n    if (bodyDotAllowed) {\n      body = `(?:${body})(?:${bodyDotAllowed})*?`\n    }\n\n    // an empty !() is exactly equivalent to a starNoEmpty\n    let final = ''\n    if (this.type === '!' && this.#emptyExt) {\n      final = (this.isStart() && !dot ? startNoDot : '') + starNoEmpty\n    } else {\n      const close =\n        this.type === '!'\n          ? // !() must match something,but !(x) can match ''\n            '))' +\n            (this.isStart() && !dot && !allowDot ? startNoDot : '') +\n            star +\n            ')'\n          : this.type === '@'\n          ? ')'\n          : this.type === '?'\n          ? ')?'\n          : this.type === '+' && bodyDotAllowed\n          ? ')'\n          : this.type === '*' && bodyDotAllowed\n          ? `)?`\n          : `)${this.type}`\n      final = start + body + close\n    }\n    return [\n      final,\n      unescape(body),\n      (this.#hasMagic = !!this.#hasMagic),\n      this.#uflag,\n    ]\n  }\n\n  #partsToRegExp(dot: boolean) {\n    return this.#parts\n      .map(p => {\n        // extglob ASTs should only contain parent ASTs\n        /* c8 ignore start */\n        if (typeof p === 'string') {\n          throw new Error('string type in extglob ast??')\n        }\n        /* c8 ignore stop */\n        // can ignore hasMagic, because extglobs are already always magic\n        const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot)\n        this.#uflag = this.#uflag || uflag\n        return re\n      })\n      .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n      .join('|')\n  }\n\n  static #parseGlob(\n    glob: string,\n    hasMagic: boolean | undefined,\n    noEmpty: boolean = false\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    let escaping = false\n    let re = ''\n    let uflag = false\n    for (let i = 0; i < glob.length; i++) {\n      const c = glob.charAt(i)\n      if (escaping) {\n        escaping = false\n        re += (reSpecials.has(c) ? '\\\\' : '') + c\n        continue\n      }\n      if (c === '\\\\') {\n        if (i === glob.length - 1) {\n          re += '\\\\\\\\'\n        } else {\n          escaping = true\n        }\n        continue\n      }\n      if (c === '[') {\n        const [src, needUflag, consumed, magic] = parseClass(glob, i)\n        if (consumed) {\n          re += src\n          uflag = uflag || needUflag\n          i += consumed - 1\n          hasMagic = hasMagic || magic\n          continue\n        }\n      }\n      if (c === '*') {\n        if (noEmpty && glob === '*') re += starNoEmpty\n        else re += star\n        hasMagic = true\n        continue\n      }\n      if (c === '?') {\n        re += qmark\n        hasMagic = true\n        continue\n      }\n      re += regExpEscape(c)\n    }\n    return [re, unescape(glob), !!hasMagic, uflag]\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/esm/pattern.js":{"lineLengths":[73,37,45,42,3,67,10,3,22,17,14,11,11,14,10,16,13,11,16,27,57,42,54,9,36,51,9,53,81,9,41,48,54,9,40,34,28,34,75,32,28,29,35,48,49,55,35,25,31,45,69,66,38,32,34,34,17,57,57,50,47,55,13,59,57,54,38,32,34,34,17,35,35,50,47,55,13,9,5,7,53,7,15,46,5,7,44,7,16,66,5,7,44,7,18,59,5,7,41,7,16,64,5,7,63,7,18,34,31,36,39,77,50,68,5,7,58,7,15,45,5,7,74,7,12,37,30,28,39,101,50,40,44,26,5,7,62,7,13,37,42,23,28,45,40,35,35,48,30,48,29,5,26,26,71,74,49,7,64,7,15,37,44,25,30,45,40,38,48,45,5,42,54,56,7,56,7,18,37,47,28,33,50,37,34,5,7,53,7,12,39,82,13,17,5,7,72,23,7,27,37,33,35,5,7,74,7,26,77,25,37,20,5,1,35],"data":{"version":3,"file":"pattern.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/pattern.ts"],"names":[],"mappings":"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","sourcesContent":["// this is just a very light wrapper around 2 arrays with an offset index\n\nimport { GLOBSTAR } from 'minimatch'\nexport type MMPattern = string | RegExp | typeof GLOBSTAR\n\n// an array of length >= 1\nexport type PatternList = [p: MMPattern, ...rest: MMPattern[]]\nexport type UNCPatternList = [\n  p0: '',\n  p1: '',\n  p2: string,\n  p3: string,\n  ...rest: MMPattern[],\n]\nexport type DrivePatternList = [p0: string, ...rest: MMPattern[]]\nexport type AbsolutePatternList = [p0: '', ...rest: MMPattern[]]\nexport type GlobList = [p: string, ...rest: string[]]\n\nconst isPatternList = (pl: MMPattern[]): pl is PatternList =>\n  pl.length >= 1\nconst isGlobList = (gl: string[]): gl is GlobList => gl.length >= 1\n\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nexport class Pattern {\n  readonly #patternList: PatternList\n  readonly #globList: GlobList\n  readonly #index: number\n  readonly length: number\n  readonly #platform: NodeJS.Platform\n  #rest?: Pattern | null\n  #globString?: string\n  #isDrive?: boolean\n  #isUNC?: boolean\n  #isAbsolute?: boolean\n  #followGlobstar: boolean = true\n\n  constructor(\n    patternList: MMPattern[],\n    globList: string[],\n    index: number,\n    platform: NodeJS.Platform,\n  ) {\n    if (!isPatternList(patternList)) {\n      throw new TypeError('empty pattern list')\n    }\n    if (!isGlobList(globList)) {\n      throw new TypeError('empty glob list')\n    }\n    if (globList.length !== patternList.length) {\n      throw new TypeError('mismatched pattern list and glob list lengths')\n    }\n    this.length = patternList.length\n    if (index < 0 || index >= this.length) {\n      throw new TypeError('index out of range')\n    }\n    this.#patternList = patternList\n    this.#globList = globList\n    this.#index = index\n    this.#platform = platform\n\n    // normalize root entries of absolute patterns on initial creation.\n    if (this.#index === 0) {\n      // c: => ['c:/']\n      // C:/ => ['C:/']\n      // C:/x => ['C:/', 'x']\n      // //host/share => ['//host/share/']\n      // //host/share/ => ['//host/share/']\n      // //host/share/x => ['//host/share/', 'x']\n      // /etc => ['/', 'etc']\n      // / => ['/']\n      if (this.isUNC()) {\n        // '' / '' / 'host' / 'share'\n        const [p0, p1, p2, p3, ...prest] = this.#patternList\n        const [g0, g1, g2, g3, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = [p0, p1, p2, p3, ''].join('/')\n        const g = [g0, g1, g2, g3, ''].join('/')\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      } else if (this.isDrive() || this.isAbsolute()) {\n        const [p1, ...prest] = this.#patternList\n        const [g1, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = (p1 as string) + '/'\n        const g = g1 + '/'\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      }\n    }\n  }\n\n  /**\n   * The first entry in the parsed list of patterns\n   */\n  pattern(): MMPattern {\n    return this.#patternList[this.#index] as MMPattern\n  }\n\n  /**\n   * true of if pattern() returns a string\n   */\n  isString(): boolean {\n    return typeof this.#patternList[this.#index] === 'string'\n  }\n  /**\n   * true of if pattern() returns GLOBSTAR\n   */\n  isGlobstar(): boolean {\n    return this.#patternList[this.#index] === GLOBSTAR\n  }\n  /**\n   * true if pattern() returns a regexp\n   */\n  isRegExp(): boolean {\n    return this.#patternList[this.#index] instanceof RegExp\n  }\n\n  /**\n   * The /-joined set of glob parts that make up this pattern\n   */\n  globString(): string {\n    return (this.#globString =\n      this.#globString ||\n      (this.#index === 0 ?\n        this.isAbsolute() ?\n          this.#globList[0] + this.#globList.slice(1).join('/')\n        : this.#globList.join('/')\n      : this.#globList.slice(this.#index).join('/')))\n  }\n\n  /**\n   * true if there are more pattern parts after this one\n   */\n  hasMore(): boolean {\n    return this.length > this.#index + 1\n  }\n\n  /**\n   * The rest of the pattern after this part, or null if this is the end\n   */\n  rest(): Pattern | null {\n    if (this.#rest !== undefined) return this.#rest\n    if (!this.hasMore()) return (this.#rest = null)\n    this.#rest = new Pattern(\n      this.#patternList,\n      this.#globList,\n      this.#index + 1,\n      this.#platform,\n    )\n    this.#rest.#isAbsolute = this.#isAbsolute\n    this.#rest.#isUNC = this.#isUNC\n    this.#rest.#isDrive = this.#isDrive\n    return this.#rest\n  }\n\n  /**\n   * true if the pattern represents a //unc/path/ on windows\n   */\n  isUNC(): boolean {\n    const pl = this.#patternList\n    return this.#isUNC !== undefined ?\n        this.#isUNC\n      : (this.#isUNC =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          pl[0] === '' &&\n          pl[1] === '' &&\n          typeof pl[2] === 'string' &&\n          !!pl[2] &&\n          typeof pl[3] === 'string' &&\n          !!pl[3])\n  }\n\n  // pattern like C:/...\n  // split = ['C:', ...]\n  // XXX: would be nice to handle patterns like `c:*` to test the cwd\n  // in c: for *, but I don't know of a way to even figure out what that\n  // cwd is without actually chdir'ing into it?\n  /**\n   * True if the pattern starts with a drive letter on Windows\n   */\n  isDrive(): boolean {\n    const pl = this.#patternList\n    return this.#isDrive !== undefined ?\n        this.#isDrive\n      : (this.#isDrive =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          this.length > 1 &&\n          typeof pl[0] === 'string' &&\n          /^[a-z]:$/i.test(pl[0]))\n  }\n\n  // pattern = '/' or '/...' or '/x/...'\n  // split = ['', ''] or ['', ...] or ['', 'x', ...]\n  // Drive and UNC both considered absolute on windows\n  /**\n   * True if the pattern is rooted on an absolute path\n   */\n  isAbsolute(): boolean {\n    const pl = this.#patternList\n    return this.#isAbsolute !== undefined ?\n        this.#isAbsolute\n      : (this.#isAbsolute =\n          (pl[0] === '' && pl.length > 1) ||\n          this.isDrive() ||\n          this.isUNC())\n  }\n\n  /**\n   * consume the root of the pattern, and return it\n   */\n  root(): string {\n    const p = this.#patternList[0]\n    return (\n        typeof p === 'string' && this.isAbsolute() && this.#index === 0\n      ) ?\n        p\n      : ''\n  }\n\n  /**\n   * Check to see if the current globstar pattern is allowed to follow\n   * a symbolic link.\n   */\n  checkFollowGlobstar(): boolean {\n    return !(\n      this.#index === 0 ||\n      !this.isGlobstar() ||\n      !this.#followGlobstar\n    )\n  }\n\n  /**\n   * Mark that the current globstar pattern is following a symbolic link\n   */\n  markFollowGlobstar(): boolean {\n    if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n      return false\n    this.#followGlobstar = false\n    return true\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/esm/brace-expressions.js":{"lineLengths":[72,40,62,22,48,41,50,38,35,35,46,35,34,34,49,35,54,39,2,63,19,58,37,74,60,51,63,66,67,41,65,29,47,25,25,35,53,5,24,22,20,20,25,22,25,23,21,24,36,33,56,26,16,21,9,49,27,18,9,24,25,28,32,20,25,13,70,9,37,72,79,46,67,37,70,21,36,28,40,24,42,39,35,17,13,9,56,25,25,66,31,33,76,13,40,44,13,28,16,21,9,45,70,43,46,19,21,9,42,27,19,21,9,60,36,12,5,21,62,55,37,5,68,70,41,54,5,77,74,77,74,28,30,35,18,75,61,5,77,73,45,43,23,21,20,45,2,45],"data":{"version":3,"file":"brace-expressions.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/src/brace-expressions.ts"],"names":[],"mappings":"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","sourcesContent":["// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses: { [k: string]: [e: string, u: boolean, n?: boolean] } = {\n  '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n  '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n  '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n  '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n  '[:cntrl:]': ['\\\\p{Cc}', true],\n  '[:digit:]': ['\\\\p{Nd}', true],\n  '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n  '[:lower:]': ['\\\\p{Ll}', true],\n  '[:print:]': ['\\\\p{C}', true],\n  '[:punct:]': ['\\\\p{P}', true],\n  '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n  '[:upper:]': ['\\\\p{Lu}', true],\n  '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n  '[:xdigit:]': ['A-Fa-f0-9', false],\n}\n\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s: string) => s.replace(/[[\\]\\\\-]/g, '\\\\$&')\n// escape all regexp magic characters\nconst regexpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges: string[]): string => ranges.join('')\n\nexport type ParseClassResult = [\n  src: string,\n  uFlag: boolean,\n  consumed: number,\n  hasMagic: boolean\n]\n\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nexport const parseClass = (\n  glob: string,\n  position: number\n): ParseClassResult => {\n  const pos = position\n  /* c8 ignore start */\n  if (glob.charAt(pos) !== '[') {\n    throw new Error('not in a brace expression')\n  }\n  /* c8 ignore stop */\n  const ranges: string[] = []\n  const negs: string[] = []\n\n  let i = pos + 1\n  let sawStart = false\n  let uflag = false\n  let escaping = false\n  let negate = false\n  let endPos = pos\n  let rangeStart = ''\n  WHILE: while (i < glob.length) {\n    const c = glob.charAt(i)\n    if ((c === '!' || c === '^') && i === pos + 1) {\n      negate = true\n      i++\n      continue\n    }\n\n    if (c === ']' && sawStart && !escaping) {\n      endPos = i + 1\n      break\n    }\n\n    sawStart = true\n    if (c === '\\\\') {\n      if (!escaping) {\n        escaping = true\n        i++\n        continue\n      }\n      // escaped \\ char, fall through and treat like normal char\n    }\n    if (c === '[' && !escaping) {\n      // either a posix class, a collation equivalent, or just a [\n      for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n        if (glob.startsWith(cls, i)) {\n          // invalid, [a-[] is fine, but not [a-[:alpha]]\n          if (rangeStart) {\n            return ['$.', false, glob.length - pos, true]\n          }\n          i += cls.length\n          if (neg) negs.push(unip)\n          else ranges.push(unip)\n          uflag = uflag || u\n          continue WHILE\n        }\n      }\n    }\n\n    // now it's just a normal character, effectively\n    escaping = false\n    if (rangeStart) {\n      // throw this range away if it's not valid, but others\n      // can still match.\n      if (c > rangeStart) {\n        ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c))\n      } else if (c === rangeStart) {\n        ranges.push(braceEscape(c))\n      }\n      rangeStart = ''\n      i++\n      continue\n    }\n\n    // now might be the start of a range.\n    // can be either c-d or c-] or c<more...>] or c] at this point\n    if (glob.startsWith('-]', i + 1)) {\n      ranges.push(braceEscape(c + '-'))\n      i += 2\n      continue\n    }\n    if (glob.startsWith('-', i + 1)) {\n      rangeStart = c\n      i += 2\n      continue\n    }\n\n    // not the start of a range, just a single character\n    ranges.push(braceEscape(c))\n    i++\n  }\n\n  if (endPos < i) {\n    // didn't see the end of the class, not a valid class,\n    // but might still be valid as a literal match.\n    return ['', false, 0, false]\n  }\n\n  // if we got no ranges and no negates, then we have a range that\n  // cannot possibly match anything, and that poisons the whole glob\n  if (!ranges.length && !negs.length) {\n    return ['$.', false, glob.length - pos, true]\n  }\n\n  // if we got one positive range, and it's a single character, then that's\n  // not actually a magic pattern, it's just that one literal character.\n  // we should not treat that as \"magic\", we should just return the literal\n  // character. [_] is a perfectly valid way to escape glob magic chars.\n  if (\n    negs.length === 0 &&\n    ranges.length === 1 &&\n    /^\\\\?.$/.test(ranges[0]) &&\n    !negate\n  ) {\n    const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0]\n    return [regexpEscape(r), false, endPos - pos, false]\n  }\n\n  const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']'\n  const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']'\n  const comb =\n    ranges.length && negs.length\n      ? '(' + sranges + '|' + snegs + ')'\n      : ranges.length\n      ? sranges\n      : snegs\n\n  return [comb, uflag, endPos - pos, true]\n}\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/esm/walker.js":{"lineLengths":[3,74,11,2,10,3,36,37,43,92,54,17,3,61,3,23,9,13,9,21,19,20,19,12,9,11,13,24,39,33,25,25,74,70,55,63,44,57,84,35,13,9,69,27,29,50,28,26,38,57,42,15,9,5,20,70,5,28,55,5,29,13,27,5,14,29,33,19,28,28,27,63,17,9,5,18,33,19,29,27,17,9,14,32,36,9,5,67,44,32,37,29,16,33,61,21,33,20,9,57,49,73,46,33,67,37,13,32,9,45,5,30,20,73,41,53,32,36,38,54,32,13,24,5,30,37,29,16,33,57,21,33,20,9,57,47,73,44,68,35,13,9,45,5,30,29,19,69,61,50,34,9,85,25,72,36,38,30,9,23,75,39,9,14,75,84,31,21,65,9,5,37,50,14,42,5,35,48,14,42,5,34,29,33,17,28,69,5,46,42,24,33,17,26,79,19,9,52,77,68,65,22,28,30,21,10,73,33,25,20,62,9,53,75,25,13,20,53,34,65,18,93,13,9,15,5,45,61,22,28,30,21,10,73,33,25,20,62,9,72,20,68,9,15,5,38,29,33,17,28,73,5,50,42,24,33,17,26,83,19,9,52,77,68,65,22,28,30,21,10,73,33,25,47,9,53,75,25,13,20,45,59,9,15,5,49,61,22,28,30,21,10,73,33,25,47,9,72,20,72,9,15,5,1,42,24,39,36,5,18,28,5,18,33,37,36,36,9,41,57,43,44,17,22,38,17,15,11,28,5,16,33,37,36,34,9,68,57,37,41,11,28,5,1,42,12,39,36,37,32,29,11,54,55,5,18,30,34,25,5,14,33,33,39,77,15,9,14,73,9,28,5,18,36,34,9,76,28,5,1,34],"data":{"version":3,"file":"walker.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/walker.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nimport { Minipass } from 'minipass'\nimport { Path } from 'path-scurry'\nimport { Ignore, IgnoreLike } from './ignore.js'\n\n// XXX can we somehow make it so that it NEVER processes a given path more than\n// once, enough that the match set tracking is no longer needed?  that'd speed\n// things up a lot.  Or maybe bring back nounique, and skip it in that case?\n\n// a single minimatch set entry with 1 or more parts\nimport { Pattern } from './pattern.js'\nimport { Processor } from './processor.js'\n\nexport interface GlobWalkerOpts {\n  absolute?: boolean\n  allowWindowsEscape?: boolean\n  cwd?: string | URL\n  dot?: boolean\n  dotRelative?: boolean\n  follow?: boolean\n  ignore?: string | string[] | IgnoreLike\n  mark?: boolean\n  matchBase?: boolean\n  // Note: maxDepth here means \"maximum actual Path.depth()\",\n  // not \"maximum depth beyond cwd\"\n  maxDepth?: number\n  nobrace?: boolean\n  nocase?: boolean\n  nodir?: boolean\n  noext?: boolean\n  noglobstar?: boolean\n  platform?: NodeJS.Platform\n  posix?: boolean\n  realpath?: boolean\n  root?: string\n  stat?: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape?: boolean\n  withFileTypes?: boolean\n  includeChildMatches?: boolean\n}\n\nexport type GWOFileTypesTrue = GlobWalkerOpts & {\n  withFileTypes: true\n}\nexport type GWOFileTypesFalse = GlobWalkerOpts & {\n  withFileTypes: false\n}\nexport type GWOFileTypesUnset = GlobWalkerOpts & {\n  withFileTypes?: undefined\n}\n\nexport type Result<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue ? Path\n  : O extends GWOFileTypesFalse ? string\n  : O extends GWOFileTypesUnset ? string\n  : Path | string\n\nexport type Matches<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue ? Set<Path>\n  : O extends GWOFileTypesFalse ? Set<string>\n  : O extends GWOFileTypesUnset ? Set<string>\n  : Set<Path | string>\n\nexport type MatchStream<O extends GlobWalkerOpts> = Minipass<\n  Result<O>,\n  Result<O>\n>\n\nconst makeIgnore = (\n  ignore: string | string[] | IgnoreLike,\n  opts: GlobWalkerOpts,\n): IgnoreLike =>\n  typeof ignore === 'string' ? new Ignore([ignore], opts)\n  : Array.isArray(ignore) ? new Ignore(ignore, opts)\n  : ignore\n\n/**\n * basic walking utilities that all the glob walker types use\n */\nexport abstract class GlobUtil<O extends GlobWalkerOpts = GlobWalkerOpts> {\n  path: Path\n  patterns: Pattern[]\n  opts: O\n  seen: Set<Path> = new Set<Path>()\n  paused: boolean = false\n  aborted: boolean = false\n  #onResume: (() => any)[] = []\n  #ignore?: IgnoreLike\n  #sep: '\\\\' | '/'\n  signal?: AbortSignal\n  maxDepth: number\n  includeChildMatches: boolean\n\n  constructor(patterns: Pattern[], path: Path, opts: O)\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    this.patterns = patterns\n    this.path = path\n    this.opts = opts\n    this.#sep = !opts.posix && opts.platform === 'win32' ? '\\\\' : '/'\n    this.includeChildMatches = opts.includeChildMatches !== false\n    if (opts.ignore || !this.includeChildMatches) {\n      this.#ignore = makeIgnore(opts.ignore ?? [], opts)\n      if (\n        !this.includeChildMatches &&\n        typeof this.#ignore.add !== 'function'\n      ) {\n        const m = 'cannot ignore child matches, ignore lacks add() method.'\n        throw new Error(m)\n      }\n    }\n    // ignore, always set with maxDepth, but it's optional on the\n    // GlobOptions type\n    /* c8 ignore start */\n    this.maxDepth = opts.maxDepth || Infinity\n    /* c8 ignore stop */\n    if (opts.signal) {\n      this.signal = opts.signal\n      this.signal.addEventListener('abort', () => {\n        this.#onResume.length = 0\n      })\n    }\n  }\n\n  #ignored(path: Path): boolean {\n    return this.seen.has(path) || !!this.#ignore?.ignored?.(path)\n  }\n  #childrenIgnored(path: Path): boolean {\n    return !!this.#ignore?.childrenIgnored?.(path)\n  }\n\n  // backpressure mechanism\n  pause() {\n    this.paused = true\n  }\n  resume() {\n    /* c8 ignore start */\n    if (this.signal?.aborted) return\n    /* c8 ignore stop */\n    this.paused = false\n    let fn: (() => any) | undefined = undefined\n    while (!this.paused && (fn = this.#onResume.shift())) {\n      fn()\n    }\n  }\n  onResume(fn: () => any) {\n    if (this.signal?.aborted) return\n    /* c8 ignore start */\n    if (!this.paused) {\n      fn()\n    } else {\n      /* c8 ignore stop */\n      this.#onResume.push(fn)\n    }\n  }\n\n  // do the requisite realpath/stat checking, and return the path\n  // to add or undefined to filter it out.\n  async matchCheck(e: Path, ifDir: boolean): Promise<Path | undefined> {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || (await e.realpath())\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? await e.lstat() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = await s.realpath()\n      /* c8 ignore start */\n      if (target && (target.isUnknown() || this.opts.stat)) {\n        await target.lstat()\n      }\n      /* c8 ignore stop */\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  matchCheckTest(e: Path | undefined, ifDir: boolean): Path | undefined {\n    return (\n        e &&\n          (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n          (!ifDir || e.canReaddir()) &&\n          (!this.opts.nodir || !e.isDirectory()) &&\n          (!this.opts.nodir ||\n            !this.opts.follow ||\n            !e.isSymbolicLink() ||\n            !e.realpathCached()?.isDirectory()) &&\n          !this.#ignored(e)\n      ) ?\n        e\n      : undefined\n  }\n\n  matchCheckSync(e: Path, ifDir: boolean): Path | undefined {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || e.realpathSync()\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    const s = needStat ? e.lstatSync() : e\n    if (this.opts.follow && this.opts.nodir && s?.isSymbolicLink()) {\n      const target = s.realpathSync()\n      if (target && (target?.isUnknown() || this.opts.stat)) {\n        target.lstatSync()\n      }\n    }\n    return this.matchCheckTest(s, ifDir)\n  }\n\n  abstract matchEmit(p: Result<O>): void\n  abstract matchEmit(p: string | Path): void\n\n  matchFinish(e: Path, absolute: boolean) {\n    if (this.#ignored(e)) return\n    // we know we have an ignore if this is false, but TS doesn't\n    if (!this.includeChildMatches && this.#ignore?.add) {\n      const ign = `${e.relativePosix()}/**`\n      this.#ignore.add(ign)\n    }\n    const abs =\n      this.opts.absolute === undefined ? absolute : this.opts.absolute\n    this.seen.add(e)\n    const mark = this.opts.mark && e.isDirectory() ? this.#sep : ''\n    // ok, we have what we need!\n    if (this.opts.withFileTypes) {\n      this.matchEmit(e)\n    } else if (abs) {\n      const abs = this.opts.posix ? e.fullpathPosix() : e.fullpath()\n      this.matchEmit(abs + mark)\n    } else {\n      const rel = this.opts.posix ? e.relativePosix() : e.relative()\n      const pre =\n        this.opts.dotRelative && !rel.startsWith('..' + this.#sep) ?\n          '.' + this.#sep\n        : ''\n      this.matchEmit(!rel ? '.' + mark : pre + rel + mark)\n    }\n  }\n\n  async match(e: Path, absolute: boolean, ifDir: boolean): Promise<void> {\n    const p = await this.matchCheck(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  matchSync(e: Path, absolute: boolean, ifDir: boolean): void {\n    const p = this.matchCheckSync(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  walkCB(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() => this.walkCB2(target, patterns, processor, cb))\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const childrenCached = t.readdirCached()\n      if (t.calledReaddir())\n        this.walkCB3(t, childrenCached, processor, next)\n      else {\n        t.readdirCB(\n          (_, entries) => this.walkCB3(t, entries, processor, next),\n          true,\n        )\n      }\n    }\n\n    next()\n  }\n\n  walkCB3(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n\n  walkCBSync(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2Sync(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2Sync(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() =>\n        this.walkCB2Sync(target, patterns, processor, cb),\n      )\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const children = t.readdirSync()\n      this.walkCB3Sync(t, children, processor, next)\n    }\n\n    next()\n  }\n\n  walkCB3Sync(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any,\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2Sync(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n}\n\nexport class GlobWalker<\n  O extends GlobWalkerOpts = GlobWalkerOpts,\n> extends GlobUtil<O> {\n  matches = new Set<Result<O>>()\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n  }\n\n  matchEmit(e: Result<O>): void {\n    this.matches.add(e)\n  }\n\n  async walk(): Promise<Set<Result<O>>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      await this.path.lstat()\n    }\n    await new Promise((res, rej) => {\n      this.walkCB(this.path, this.patterns, () => {\n        if (this.signal?.aborted) {\n          rej(this.signal.reason)\n        } else {\n          res(this.matches)\n        }\n      })\n    })\n    return this.matches\n  }\n\n  walkSync(): Set<Result<O>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    // nothing for the callback to do, because this never pauses\n    this.walkCBSync(this.path, this.patterns, () => {\n      if (this.signal?.aborted) throw this.signal.reason\n    })\n    return this.matches\n  }\n}\n\nexport class GlobStream<\n  O extends GlobWalkerOpts = GlobWalkerOpts,\n> extends GlobUtil<O> {\n  results: Minipass<Result<O>, Result<O>>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.results = new Minipass<Result<O>, Result<O>>({\n      signal: this.signal,\n      objectMode: true,\n    })\n    this.results.on('drain', () => this.resume())\n    this.results.on('resume', () => this.resume())\n  }\n\n  matchEmit(e: Result<O>): void {\n    this.results.write(e)\n    if (!this.results.flowing) this.pause()\n  }\n\n  stream(): MatchStream<O> {\n    const target = this.path\n    if (target.isUnknown()) {\n      target.lstat().then(() => {\n        this.walkCB(target, this.patterns, () => this.results.end())\n      })\n    } else {\n      this.walkCB(target, this.patterns, () => this.results.end())\n    }\n    return this.results\n  }\n\n  streamSync(): MatchStream<O> {\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    this.walkCBSync(this.path, this.patterns, () => this.results.end())\n    return this.results\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/path-scurry@1.11.1/node_modules/path-scurry/dist/esm/index.js":{"lineLengths":[37,41,41,102,36,32,57,46,70,36,19,14,23,16,17,17,15,14,16,17,17,6,2,58,97,13,7,21,20,19,34,41,10,6,39,48,95,47,27,57,21,21,21,21,21,21,22,20,27,27,64,40,33,38,66,33,57,64,32,74,29,37,38,37,48,34,43,29,36,43,43,43,44,38,31,33,26,36,10,17,34,29,13,2,39,32,42,10,17,41,35,13,2,3,65,12,3,44,19,28,5,1,72,79,73,79,78,77,75,76,2,78,70,3,41,12,3,45,38,15,20,32,47,11,5,1,47,3,48,78,2,78,74,75,19,2,75,75,16,3,23,7,32,6,73,74,80,74,45,7,9,7,53,6,16,7,9,7,59,6,16,7,10,7,79,6,16,7,11,7,71,16,7,11,7,73,53,7,18,36,8,19,9,15,25,5,10,16,26,5,11,17,27,5,9,15,25,5,9,15,25,5,10,16,26,5,13,19,29,5,9,15,25,5,10,16,26,5,12,18,28,5,13,19,29,5,13,19,29,5,13,19,29,5,17,23,33,5,11,17,27,5,11,17,27,5,11,17,27,5,15,21,31,5,15,11,14,19,14,19,10,14,16,14,7,69,69,76,27,7,22,48,5,7,77,77,7,16,31,5,7,79,67,6,16,7,76,25,75,37,29,27,33,34,39,39,49,34,26,39,9,14,45,9,5,7,58,6,65,7,13,38,31,25,37,55,5,7,16,7,21,30,5,7,81,7,19,20,24,9,50,52,50,33,58,43,22,5,29,21,38,30,9,17,5,7,77,80,79,14,6,16,7,16,48,21,26,9,63,43,38,24,5,7,69,6,78,14,6,75,61,6,36,6,16,7,27,50,24,9,32,39,9,25,41,83,35,40,25,13,9,71,67,34,46,84,57,20,25,21,11,33,35,9,78,79,30,22,5,7,76,68,7,16,23,22,43,34,9,31,30,17,48,9,32,62,5,7,69,44,73,57,7,21,29,35,23,22,46,39,31,30,17,64,9,37,57,5,7,57,7,16,43,34,9,31,30,17,48,9,32,59,37,5,7,70,6,77,21,7,21,46,39,29,59,27,58,39,58,13,18,49,13,9,30,39,71,43,5,7,38,6,80,76,45,7,17,47,5,18,35,5,15,44,46,40,60,48,74,70,86,53,28,5,7,34,7,14,45,5,7,31,7,19,45,5,7,38,7,25,45,5,7,34,7,21,45,5,7,31,7,14,45,5,7,28,7,16,46,5,7,35,7,22,46,5,7,72,27,6,74,47,7,19,60,5,7,75,51,6,80,74,48,7,22,32,5,7,75,56,6,80,74,48,7,22,30,5,7,76,58,6,75,74,67,7,21,41,55,5,7,77,57,6,76,55,7,19,29,24,25,25,49,39,56,39,33,5,7,77,61,7,21,47,5,7,80,74,71,7,16,39,5,7,80,50,6,75,77,56,6,73,16,7,16,29,44,53,5,7,77,6,80,39,6,79,7,22,40,21,26,9,34,29,9,29,72,27,29,9,28,13,75,77,29,55,13,9,20,40,29,9,5,7,44,7,20,40,21,26,9,34,29,9,29,72,27,29,9,28,13,64,73,29,55,13,9,20,40,29,9,5,31,45,37,60,70,34,18,32,9,5,19,37,32,19,58,35,5,27,56,41,33,35,28,9,5,24,34,28,5,63,20,65,66,66,46,29,33,19,28,27,62,54,33,30,33,35,5,29,60,53,32,9,37,31,9,14,44,9,5,27,70,29,33,57,34,29,9,37,32,31,9,5,30,29,27,30,26,69,54,77,29,32,9,25,72,62,29,48,39,9,28,5,28,55,44,5,31,61,34,68,40,67,35,9,25,24,21,5,37,56,32,83,45,25,13,62,9,5,42,25,59,58,63,25,28,69,71,38,39,24,16,35,25,9,24,17,5,7,78,18,6,78,71,74,6,79,81,16,6,75,15,7,19,42,17,80,28,13,24,41,13,9,5,7,41,7,17,42,17,69,28,13,24,41,13,9,5,20,157,28,32,36,40,32,30,28,32,24,24,24,26,28,32,28,26,26,24,35,51,71,67,34,9,5,22,31,32,40,46,37,46,5,7,79,6,79,19,6,75,15,6,76,76,63,81,76,74,7,39,33,27,29,16,51,19,9,41,35,62,27,28,16,50,19,9,57,35,38,19,9,39,52,54,41,78,21,43,41,13,18,68,28,42,55,17,47,13,75,19,11,5,26,7,46,6,79,19,6,75,15,7,21,33,22,9,41,35,59,9,52,54,41,41,45,9,14,33,36,32,77,17,75,40,21,55,17,47,13,24,43,41,13,51,22,9,55,5,7,43,7,19,33,22,9,41,35,59,9,52,54,41,13,60,36,17,51,13,43,9,20,39,37,9,55,5,18,34,25,39,75,29,70,25,9,28,20,5,34,49,39,30,47,5,7,63,22,6,74,6,79,41,7,22,27,34,62,29,13,73,55,9,19,36,9,5,7,35,7,20,27,34,62,29,13,62,55,9,19,36,9,5,7,66,41,6,16,7,24,28,19,29,26,36,20,21,31,27,44,44,25,26,9,44,19,50,36,41,25,9,5,1,3,35,2,79,43,3,41,7,45,7,15,7,42,7,25,7,79,67,6,16,7,76,63,5,7,16,7,47,105,5,7,16,7,25,38,5,7,16,7,23,54,42,29,9,70,67,51,53,13,9,47,81,5,7,16,7,50,67,77,33,27,26,33,45,36,5,1,3,40,2,36,3,41,7,41,7,19,7,44,7,14,7,79,67,6,16,7,76,63,5,7,16,7,25,47,5,7,16,7,24,25,5,7,16,7,47,105,5,1,3,78,40,2,78,77,36,3,29,7,75,7,9,7,78,7,13,7,68,7,10,7,83,7,8,18,23,14,7,51,6,68,7,11,8,7,54,6,76,6,16,7,118,36,62,37,9,61,55,46,41,52,48,53,62,73,70,46,24,9,29,35,86,9,28,29,43,46,29,35,37,32,29,35,28,37,64,65,68,15,28,9,24,5,7,59,7,28,39,42,9,28,5,7,75,53,6,16,7,21,30,5,7,60,6,49,6,78,71,17,7,23,71,72,19,53,31,32,25,36,37,22,13,9,49,35,26,9,54,42,22,5,7,71,72,62,6,49,6,78,71,17,7,28,71,72,19,53,31,32,25,36,37,22,13,9,54,35,26,9,59,47,22,5,7,79,7,32,40,44,9,32,5,7,73,61,7,37,40,44,9,37,5,7,65,7,32,40,44,9,26,5,7,64,7,31,40,44,9,50,5,44,28,8,40,44,9,48,25,29,9,39,34,22,9,14,44,58,9,5,42,28,8,40,44,9,48,25,29,9,46,34,22,9,33,39,9,14,56,9,5,7,70,42,6,78,71,74,6,79,81,16,6,75,15,7,35,40,44,9,29,5,7,47,7,33,40,44,9,33,5,58,29,8,40,44,9,48,48,29,9,41,49,5,56,29,8,40,44,9,48,48,29,9,39,49,5,58,29,8,40,44,9,48,48,29,9,41,49,5,56,29,8,40,44,9,48,48,29,9,39,49,5,45,40,44,9,48,25,29,9,83,27,39,67,9,31,35,26,44,37,25,34,17,36,41,25,32,36,38,29,21,18,42,47,71,21,55,36,72,97,21,26,61,42,25,30,35,25,21,17,36,10,28,42,31,37,23,35,36,29,15,11,5,43,40,44,9,48,25,29,9,83,27,39,67,9,38,33,46,38,43,67,17,26,41,60,33,38,38,17,53,32,17,13,9,23,5,7,30,6,47,6,75,80,76,7,30,30,5,45,76,81,81,40,44,9,48,28,29,9,67,5,7,63,6,51,7,25,34,5,47,40,44,9,48,25,29,9,83,39,59,9,38,33,46,38,43,59,17,26,41,60,33,38,38,17,53,32,17,13,9,5,41,40,44,9,48,25,29,9,83,59,39,68,9,31,30,27,31,31,29,42,27,41,38,27,17,29,30,74,41,27,57,40,50,44,50,53,47,47,82,29,25,46,93,35,25,21,46,58,83,46,29,25,21,33,46,58,61,42,25,21,53,55,21,37,34,21,18,36,32,47,29,13,10,18,23,5,45,40,44,9,48,25,29,9,83,59,31,39,68,9,30,27,31,31,29,42,27,41,38,27,17,29,30,50,42,47,79,42,25,21,17,29,42,30,45,64,37,42,42,21,57,38,21,17,13,43,47,10,18,23,5,28,32,76,35,5,1,3,51,2,75,38,3,53,7,44,7,15,49,39,53,29,49,35,9,5,7,16,7,24,80,73,58,51,5,7,16,7,17,117,5,7,66,7,19,86,5,1,3,81,2,76,2,43,3,53,7,44,7,14,49,40,52,29,5,7,16,7,25,19,5,7,16,7,17,117,5,7,66,7,19,33,5,1,3,68,2,72,11,2,43,3,55,49,39,40,5,1,3,68,2,73,3,73,3,74,2,74,65,3,72,54,26,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/path-scurry@1.11.1/node_modules/path-scurry/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { LRUCache } from 'lru-cache'\nimport { posix, win32 } from 'node:path'\n\nimport { fileURLToPath } from 'node:url'\n\nimport {\n  lstatSync,\n  readdir as readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync as rps,\n} from 'fs'\nimport * as actualFS from 'node:fs'\n\nconst realpathSync = rps.native\n// TODO: test perf of fs/promises realpath vs realpathCB,\n// since the promises one uses realpath.native\n\nimport { lstat, readdir, readlink, realpath } from 'node:fs/promises'\n\nimport { Minipass } from 'minipass'\nimport type { Dirent, Stats } from 'node:fs'\n\n/**\n * An object that will be used to override the default `fs`\n * methods.  Any methods that are not overridden will use Node's\n * built-in implementations.\n *\n * - lstatSync\n * - readdir (callback `withFileTypes` Dirent variant, used for\n *   readdirCB and most walks)\n * - readdirSync\n * - readlinkSync\n * - realpathSync\n * - promises: Object containing the following async methods:\n *   - lstat\n *   - readdir (Dirent variant only)\n *   - readlink\n *   - realpath\n */\nexport interface FSOption {\n  lstatSync?: (path: string) => Stats\n  readdir?: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any,\n  ) => void\n  readdirSync?: (\n    path: string,\n    options: { withFileTypes: true },\n  ) => Dirent[]\n  readlinkSync?: (path: string) => string\n  realpathSync?: (path: string) => string\n  promises?: {\n    lstat?: (path: string) => Promise<Stats>\n    readdir?: (\n      path: string,\n      options: { withFileTypes: true },\n    ) => Promise<Dirent[]>\n    readlink?: (path: string) => Promise<string>\n    realpath?: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\ninterface FSValue {\n  lstatSync: (path: string) => Stats\n  readdir: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any,\n  ) => void\n  readdirSync: (path: string, options: { withFileTypes: true }) => Dirent[]\n  readlinkSync: (path: string) => string\n  realpathSync: (path: string) => string\n  promises: {\n    lstat: (path: string) => Promise<Stats>\n    readdir: (\n      path: string,\n      options: { withFileTypes: true },\n    ) => Promise<Dirent[]>\n    readlink: (path: string) => Promise<string>\n    realpath: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\nconst defaultFS: FSValue = {\n  lstatSync,\n  readdir: readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync,\n  promises: {\n    lstat,\n    readdir,\n    readlink,\n    realpath,\n  },\n}\n\n// if they just gave us require('fs') then use our default\nconst fsFromOption = (fsOption?: FSOption): FSValue =>\n  !fsOption || fsOption === defaultFS || fsOption === actualFS ?\n    defaultFS\n  : {\n      ...defaultFS,\n      ...fsOption,\n      promises: {\n        ...defaultFS.promises,\n        ...(fsOption.promises || {}),\n      },\n    }\n\n// turn something like //?/c:/ into c:\\\nconst uncDriveRegexp = /^\\\\\\\\\\?\\\\([a-z]:)\\\\?$/i\nconst uncToDrive = (rootPath: string): string =>\n  rootPath.replace(/\\//g, '\\\\').replace(uncDriveRegexp, '$1\\\\')\n\n// windows paths are separated by either / or \\\nconst eitherSep = /[\\\\\\/]/\n\nconst UNKNOWN = 0 // may not even exist, for all we know\nconst IFIFO = 0b0001\nconst IFCHR = 0b0010\nconst IFDIR = 0b0100\nconst IFBLK = 0b0110\nconst IFREG = 0b1000\nconst IFLNK = 0b1010\nconst IFSOCK = 0b1100\nconst IFMT = 0b1111\n\nexport type Type =\n  | 'Unknown'\n  | 'FIFO'\n  | 'CharacterDevice'\n  | 'Directory'\n  | 'BlockDevice'\n  | 'File'\n  | 'SymbolicLink'\n  | 'Socket'\n\n// mask to unset low 4 bits\nconst IFMT_UNKNOWN = ~IFMT\n\n// set after successfully calling readdir() and getting entries.\nconst READDIR_CALLED = 0b0000_0001_0000\n// set after a successful lstat()\nconst LSTAT_CALLED = 0b0000_0010_0000\n// set if an entry (or one of its parents) is definitely not a dir\nconst ENOTDIR = 0b0000_0100_0000\n// set if an entry (or one of its parents) does not exist\n// (can also be set on lstat errors like EACCES or ENAMETOOLONG)\nconst ENOENT = 0b0000_1000_0000\n// cannot have child entries -- also verify &IFMT is either IFDIR or IFLNK\n// set if we fail to readlink\nconst ENOREADLINK = 0b0001_0000_0000\n// set if we know realpath() will fail\nconst ENOREALPATH = 0b0010_0000_0000\n\nconst ENOCHILD = ENOTDIR | ENOENT | ENOREALPATH\nconst TYPEMASK = 0b0011_1111_1111\n\nconst entToType = (s: Dirent | Stats) =>\n  s.isFile() ? IFREG\n  : s.isDirectory() ? IFDIR\n  : s.isSymbolicLink() ? IFLNK\n  : s.isCharacterDevice() ? IFCHR\n  : s.isBlockDevice() ? IFBLK\n  : s.isSocket() ? IFSOCK\n  : s.isFIFO() ? IFIFO\n  : UNKNOWN\n\n// normalize unicode path names\nconst normalizeCache = new Map<string, string>()\nconst normalize = (s: string) => {\n  const c = normalizeCache.get(s)\n  if (c) return c\n  const n = s.normalize('NFKD')\n  normalizeCache.set(s, n)\n  return n\n}\n\nconst normalizeNocaseCache = new Map<string, string>()\nconst normalizeNocase = (s: string) => {\n  const c = normalizeNocaseCache.get(s)\n  if (c) return c\n  const n = normalize(s.toLowerCase())\n  normalizeNocaseCache.set(s, n)\n  return n\n}\n\n/**\n * Options that may be provided to the Path constructor\n */\nexport interface PathOpts {\n  fullpath?: string\n  relative?: string\n  relativePosix?: string\n  parent?: PathBase\n  /**\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * An LRUCache for storing resolved path strings or Path objects.\n * @internal\n */\nexport class ResolveCache extends LRUCache<string, string> {\n  constructor() {\n    super({ max: 256 })\n  }\n}\n\n// In order to prevent blowing out the js heap by allocating hundreds of\n// thousands of Path entries when walking extremely large trees, the \"children\"\n// in this tree are represented by storing an array of Path entries in an\n// LRUCache, indexed by the parent.  At any time, Path.children() may return an\n// empty array, indicating that it doesn't know about any of its children, and\n// thus has to rebuild that cache.  This is fine, it just means that we don't\n// benefit as much from having the cached entries, but huge directory walks\n// don't blow out the stack, and smaller ones are still as fast as possible.\n//\n//It does impose some complexity when building up the readdir data, because we\n//need to pass a reference to the children array that we started with.\n\n/**\n * an LRUCache for storing child entries.\n * @internal\n */\nexport class ChildrenCache extends LRUCache<PathBase, Children> {\n  constructor(maxSize: number = 16 * 1024) {\n    super({\n      maxSize,\n      // parent + children\n      sizeCalculation: a => a.length + 1,\n    })\n  }\n}\n\n/**\n * Array of Path objects, plus a marker indicating the first provisional entry\n *\n * @internal\n */\nexport type Children = PathBase[] & { provisional: number }\n\nconst setAsCwd = Symbol('PathScurry setAsCwd')\n\n/**\n * Path objects are sort of like a super-powered\n * {@link https://nodejs.org/docs/latest/api/fs.html#class-fsdirent fs.Dirent}\n *\n * Each one represents a single filesystem entry on disk, which may or may not\n * exist. It includes methods for reading various types of information via\n * lstat, readlink, and readdir, and caches all information to the greatest\n * degree possible.\n *\n * Note that fs operations that would normally throw will instead return an\n * \"empty\" value. This is in order to prevent excessive overhead from error\n * stack traces.\n */\nexport abstract class PathBase implements Dirent {\n  /**\n   * the basename of this path\n   *\n   * **Important**: *always* test the path name against any test string\n   * usingthe {@link isNamed} method, and not by directly comparing this\n   * string. Otherwise, unicode path strings that the system sees as identical\n   * will not be properly treated as the same path, leading to incorrect\n   * behavior and possible security issues.\n   */\n  name: string\n  /**\n   * the Path entry corresponding to the path root.\n   *\n   * @internal\n   */\n  root: PathBase\n  /**\n   * All roots found within the current PathScurry family\n   *\n   * @internal\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * a reference to the parent path, or undefined in the case of root entries\n   *\n   * @internal\n   */\n  parent?: PathBase\n  /**\n   * boolean indicating whether paths are compared case-insensitively\n   * @internal\n   */\n  nocase: boolean\n\n  /**\n   * boolean indicating that this path is the current working directory\n   * of the PathScurry collection that contains it.\n   */\n  isCWD: boolean = false\n\n  /**\n   * the string or regexp used to split paths. On posix, it is `'/'`, and on\n   * windows it is a RegExp matching either `'/'` or `'\\\\'`\n   */\n  abstract splitSep: string | RegExp\n  /**\n   * The path separator string to use when joining paths\n   */\n  abstract sep: string\n\n  // potential default fs override\n  #fs: FSValue\n\n  // Stats fields\n  #dev?: number\n  get dev() {\n    return this.#dev\n  }\n  #mode?: number\n  get mode() {\n    return this.#mode\n  }\n  #nlink?: number\n  get nlink() {\n    return this.#nlink\n  }\n  #uid?: number\n  get uid() {\n    return this.#uid\n  }\n  #gid?: number\n  get gid() {\n    return this.#gid\n  }\n  #rdev?: number\n  get rdev() {\n    return this.#rdev\n  }\n  #blksize?: number\n  get blksize() {\n    return this.#blksize\n  }\n  #ino?: number\n  get ino() {\n    return this.#ino\n  }\n  #size?: number\n  get size() {\n    return this.#size\n  }\n  #blocks?: number\n  get blocks() {\n    return this.#blocks\n  }\n  #atimeMs?: number\n  get atimeMs() {\n    return this.#atimeMs\n  }\n  #mtimeMs?: number\n  get mtimeMs() {\n    return this.#mtimeMs\n  }\n  #ctimeMs?: number\n  get ctimeMs() {\n    return this.#ctimeMs\n  }\n  #birthtimeMs?: number\n  get birthtimeMs() {\n    return this.#birthtimeMs\n  }\n  #atime?: Date\n  get atime() {\n    return this.#atime\n  }\n  #mtime?: Date\n  get mtime() {\n    return this.#mtime\n  }\n  #ctime?: Date\n  get ctime() {\n    return this.#ctime\n  }\n  #birthtime?: Date\n  get birthtime() {\n    return this.#birthtime\n  }\n\n  #matchName: string\n  #depth?: number\n  #fullpath?: string\n  #fullpathPosix?: string\n  #relative?: string\n  #relativePosix?: string\n  #type: number\n  #children: ChildrenCache\n  #linkTarget?: PathBase\n  #realpath?: PathBase\n\n  /**\n   * This property is for compatibility with the Dirent class as of\n   * Node v20, where Dirent['parentPath'] refers to the path of the\n   * directory that was passed to readdir. For root entries, it's the path\n   * to the entry itself.\n   */\n  get parentPath(): string {\n    return (this.parent || this).fullpath()\n  }\n\n  /**\n   * Deprecated alias for Dirent['parentPath'] Somewhat counterintuitively,\n   * this property refers to the *parent* path, not the path object itself.\n   */\n  get path(): string {\n    return this.parentPath\n  }\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    this.name = name\n    this.#matchName = nocase ? normalizeNocase(name) : normalize(name)\n    this.#type = type & TYPEMASK\n    this.nocase = nocase\n    this.roots = roots\n    this.root = root || this\n    this.#children = children\n    this.#fullpath = opts.fullpath\n    this.#relative = opts.relative\n    this.#relativePosix = opts.relativePosix\n    this.parent = opts.parent\n    if (this.parent) {\n      this.#fs = this.parent.#fs\n    } else {\n      this.#fs = fsFromOption(opts.fs)\n    }\n  }\n\n  /**\n   * Returns the depth of the Path object from its root.\n   *\n   * For example, a path at `/foo/bar` would have a depth of 2.\n   */\n  depth(): number {\n    if (this.#depth !== undefined) return this.#depth\n    if (!this.parent) return (this.#depth = 0)\n    return (this.#depth = this.parent.depth() + 1)\n  }\n\n  /**\n   * @internal\n   */\n  abstract getRootString(path: string): string\n  /**\n   * @internal\n   */\n  abstract getRoot(rootPath: string): PathBase\n  /**\n   * @internal\n   */\n  abstract newChild(name: string, type?: number, opts?: PathOpts): PathBase\n\n  /**\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Get the Path object referenced by the string path, resolved from this Path\n   */\n  resolve(path?: string): PathBase {\n    if (!path) {\n      return this\n    }\n    const rootPath = this.getRootString(path)\n    const dir = path.substring(rootPath.length)\n    const dirParts = dir.split(this.splitSep)\n    const result: PathBase =\n      rootPath ?\n        this.getRoot(rootPath).#resolveParts(dirParts)\n      : this.#resolveParts(dirParts)\n    return result\n  }\n\n  #resolveParts(dirParts: string[]) {\n    let p: PathBase = this\n    for (const part of dirParts) {\n      p = p.child(part)\n    }\n    return p\n  }\n\n  /**\n   * Returns the cached children Path objects, if still available.  If they\n   * have fallen out of the cache, then returns an empty array, and resets the\n   * READDIR_CALLED bit, so that future calls to readdir() will require an fs\n   * lookup.\n   *\n   * @internal\n   */\n  children(): Children {\n    const cached = this.#children.get(this)\n    if (cached) {\n      return cached\n    }\n    const children: Children = Object.assign([], { provisional: 0 })\n    this.#children.set(this, children)\n    this.#type &= ~READDIR_CALLED\n    return children\n  }\n\n  /**\n   * Resolves a path portion and returns or creates the child Path.\n   *\n   * Returns `this` if pathPart is `''` or `'.'`, or `parent` if pathPart is\n   * `'..'`.\n   *\n   * This should not be called directly.  If `pathPart` contains any path\n   * separators, it will lead to unsafe undefined behavior.\n   *\n   * Use `Path.resolve()` instead.\n   *\n   * @internal\n   */\n  child(pathPart: string, opts?: PathOpts): PathBase {\n    if (pathPart === '' || pathPart === '.') {\n      return this\n    }\n    if (pathPart === '..') {\n      return this.parent || this\n    }\n\n    // find the child\n    const children = this.children()\n    const name =\n      this.nocase ? normalizeNocase(pathPart) : normalize(pathPart)\n    for (const p of children) {\n      if (p.#matchName === name) {\n        return p\n      }\n    }\n\n    // didn't find it, create provisional child, since it might not\n    // actually exist.  If we know the parent isn't a dir, then\n    // in fact it CAN'T exist.\n    const s = this.parent ? this.sep : ''\n    const fullpath =\n      this.#fullpath ? this.#fullpath + s + pathPart : undefined\n    const pchild = this.newChild(pathPart, UNKNOWN, {\n      ...opts,\n      parent: this,\n      fullpath,\n    })\n\n    if (!this.canReaddir()) {\n      pchild.#type |= ENOENT\n    }\n\n    // don't have to update provisional, because if we have real children,\n    // then provisional is set to children.length, otherwise a lower number\n    children.push(pchild)\n    return pchild\n  }\n\n  /**\n   * The relative path from the cwd. If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpath()\n   */\n  relative(): string {\n    if (this.isCWD) return ''\n    if (this.#relative !== undefined) {\n      return this.#relative\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relative = this.name)\n    }\n    const pv = p.relative()\n    return pv + (!pv || !p.parent ? '' : this.sep) + name\n  }\n\n  /**\n   * The relative path from the cwd, using / as the path separator.\n   * If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpathPosix()\n   * On posix systems, this is identical to relative().\n   */\n  relativePosix(): string {\n    if (this.sep === '/') return this.relative()\n    if (this.isCWD) return ''\n    if (this.#relativePosix !== undefined) return this.#relativePosix\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relativePosix = this.fullpathPosix())\n    }\n    const pv = p.relativePosix()\n    return pv + (!pv || !p.parent ? '' : '/') + name\n  }\n\n  /**\n   * The fully resolved path string for this Path entry\n   */\n  fullpath(): string {\n    if (this.#fullpath !== undefined) {\n      return this.#fullpath\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#fullpath = this.name)\n    }\n    const pv = p.fullpath()\n    const fp = pv + (!p.parent ? '' : this.sep) + name\n    return (this.#fullpath = fp)\n  }\n\n  /**\n   * On platforms other than windows, this is identical to fullpath.\n   *\n   * On windows, this is overridden to return the forward-slash form of the\n   * full UNC path.\n   */\n  fullpathPosix(): string {\n    if (this.#fullpathPosix !== undefined) return this.#fullpathPosix\n    if (this.sep === '/') return (this.#fullpathPosix = this.fullpath())\n    if (!this.parent) {\n      const p = this.fullpath().replace(/\\\\/g, '/')\n      if (/^[a-z]:\\//i.test(p)) {\n        return (this.#fullpathPosix = `//?/${p}`)\n      } else {\n        return (this.#fullpathPosix = p)\n      }\n    }\n    const p = this.parent\n    const pfpp = p.fullpathPosix()\n    const fpp = pfpp + (!pfpp || !p.parent ? '' : '/') + this.name\n    return (this.#fullpathPosix = fpp)\n  }\n\n  /**\n   * Is the Path of an unknown type?\n   *\n   * Note that we might know *something* about it if there has been a previous\n   * filesystem operation, for example that it does not exist, or is not a\n   * link, or whether it has child entries.\n   */\n  isUnknown(): boolean {\n    return (this.#type & IFMT) === UNKNOWN\n  }\n\n  isType(type: Type): boolean {\n    return this[`is${type}`]()\n  }\n\n  getType(): Type {\n    return (\n      this.isUnknown() ? 'Unknown'\n      : this.isDirectory() ? 'Directory'\n      : this.isFile() ? 'File'\n      : this.isSymbolicLink() ? 'SymbolicLink'\n      : this.isFIFO() ? 'FIFO'\n      : this.isCharacterDevice() ? 'CharacterDevice'\n      : this.isBlockDevice() ? 'BlockDevice'\n      : /* c8 ignore start */ this.isSocket() ? 'Socket'\n      : 'Unknown'\n    )\n    /* c8 ignore stop */\n  }\n\n  /**\n   * Is the Path a regular file?\n   */\n  isFile(): boolean {\n    return (this.#type & IFMT) === IFREG\n  }\n\n  /**\n   * Is the Path a directory?\n   */\n  isDirectory(): boolean {\n    return (this.#type & IFMT) === IFDIR\n  }\n\n  /**\n   * Is the path a character device?\n   */\n  isCharacterDevice(): boolean {\n    return (this.#type & IFMT) === IFCHR\n  }\n\n  /**\n   * Is the path a block device?\n   */\n  isBlockDevice(): boolean {\n    return (this.#type & IFMT) === IFBLK\n  }\n\n  /**\n   * Is the path a FIFO pipe?\n   */\n  isFIFO(): boolean {\n    return (this.#type & IFMT) === IFIFO\n  }\n\n  /**\n   * Is the path a socket?\n   */\n  isSocket(): boolean {\n    return (this.#type & IFMT) === IFSOCK\n  }\n\n  /**\n   * Is the path a symbolic link?\n   */\n  isSymbolicLink(): boolean {\n    return (this.#type & IFLNK) === IFLNK\n  }\n\n  /**\n   * Return the entry if it has been subject of a successful lstat, or\n   * undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* simply\n   * mean that we haven't called lstat on it.\n   */\n  lstatCached(): PathBase | undefined {\n    return this.#type & LSTAT_CALLED ? this : undefined\n  }\n\n  /**\n   * Return the cached link target if the entry has been the subject of a\n   * successful readlink, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readlink() has been called at some point.\n   */\n  readlinkCached(): PathBase | undefined {\n    return this.#linkTarget\n  }\n\n  /**\n   * Returns the cached realpath target if the entry has been the subject\n   * of a successful realpath, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * realpath() has been called at some point.\n   */\n  realpathCached(): PathBase | undefined {\n    return this.#realpath\n  }\n\n  /**\n   * Returns the cached child Path entries array if the entry has been the\n   * subject of a successful readdir(), or [] otherwise.\n   *\n   * Does not read the filesystem, so an empty array *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readdir() has been called recently enough to still be valid.\n   */\n  readdirCached(): PathBase[] {\n    const children = this.children()\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * Return true if it's worth trying to readlink.  Ie, we don't (yet) have\n   * any indication that readlink will definitely fail.\n   *\n   * Returns false if the path is known to not be a symlink, if a previous\n   * readlink failed, or if the entry does not exist.\n   */\n  canReadlink(): boolean {\n    if (this.#linkTarget) return true\n    if (!this.parent) return false\n    // cases where it cannot possibly succeed\n    const ifmt = this.#type & IFMT\n    return !(\n      (ifmt !== UNKNOWN && ifmt !== IFLNK) ||\n      this.#type & ENOREADLINK ||\n      this.#type & ENOENT\n    )\n  }\n\n  /**\n   * Return true if readdir has previously been successfully called on this\n   * path, indicating that cachedReaddir() is likely valid.\n   */\n  calledReaddir(): boolean {\n    return !!(this.#type & READDIR_CALLED)\n  }\n\n  /**\n   * Returns true if the path is known to not exist. That is, a previous lstat\n   * or readdir failed to verify its existence when that would have been\n   * expected, or a parent entry was marked either enoent or enotdir.\n   */\n  isENOENT(): boolean {\n    return !!(this.#type & ENOENT)\n  }\n\n  /**\n   * Return true if the path is a match for the given path name.  This handles\n   * case sensitivity and unicode normalization.\n   *\n   * Note: even on case-sensitive systems, it is **not** safe to test the\n   * equality of the `.name` property to determine whether a given pathname\n   * matches, due to unicode normalization mismatches.\n   *\n   * Always use this method instead of testing the `path.name` property\n   * directly.\n   */\n  isNamed(n: string): boolean {\n    return !this.nocase ?\n        this.#matchName === normalize(n)\n      : this.#matchName === normalizeNocase(n)\n  }\n\n  /**\n   * Return the Path object corresponding to the target of a symbolic link.\n   *\n   * If the Path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   */\n  async readlink(): Promise<PathBase | undefined> {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = await this.#fs.promises.readlink(this.fullpath())\n      const linkTarget = (await this.parent.realpath())?.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  /**\n   * Synchronous {@link PathBase.readlink}\n   */\n  readlinkSync(): PathBase | undefined {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = this.#fs.readlinkSync(this.fullpath())\n      const linkTarget = this.parent.realpathSync()?.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  #readdirSuccess(children: Children) {\n    // succeeded, mark readdir called bit\n    this.#type |= READDIR_CALLED\n    // mark all remaining provisional children as ENOENT\n    for (let p = children.provisional; p < children.length; p++) {\n      const c = children[p]\n      if (c) c.#markENOENT()\n    }\n  }\n\n  #markENOENT() {\n    // mark as UNKNOWN and ENOENT\n    if (this.#type & ENOENT) return\n    this.#type = (this.#type | ENOENT) & IFMT_UNKNOWN\n    this.#markChildrenENOENT()\n  }\n\n  #markChildrenENOENT() {\n    // all children are provisional and do not exist\n    const children = this.children()\n    children.provisional = 0\n    for (const p of children) {\n      p.#markENOENT()\n    }\n  }\n\n  #markENOREALPATH() {\n    this.#type |= ENOREALPATH\n    this.#markENOTDIR()\n  }\n\n  // save the information when we know the entry is not a dir\n  #markENOTDIR() {\n    // entry is not a directory, so any children can't exist.\n    // this *should* be impossible, since any children created\n    // after it's been marked ENOTDIR should be marked ENOENT,\n    // so it won't even get to this point.\n    /* c8 ignore start */\n    if (this.#type & ENOTDIR) return\n    /* c8 ignore stop */\n    let t = this.#type\n    // this could happen if we stat a dir, then delete it,\n    // then try to read it or one of its children.\n    if ((t & IFMT) === IFDIR) t &= IFMT_UNKNOWN\n    this.#type = t | ENOTDIR\n    this.#markChildrenENOENT()\n  }\n\n  #readdirFail(code: string = '') {\n    // markENOTDIR and markENOENT also set provisional=0\n    if (code === 'ENOTDIR' || code === 'EPERM') {\n      this.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      this.#markENOENT()\n    } else {\n      this.children().provisional = 0\n    }\n  }\n\n  #lstatFail(code: string = '') {\n    // Windows just raises ENOENT in this case, disable for win CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR') {\n      // already know it has a parent by this point\n      const p = this.parent as PathBase\n      p.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      /* c8 ignore stop */\n      this.#markENOENT()\n    }\n  }\n\n  #readlinkFail(code: string = '') {\n    let ter = this.#type\n    ter |= ENOREADLINK\n    if (code === 'ENOENT') ter |= ENOENT\n    // windows gets a weird error when you try to readlink a file\n    if (code === 'EINVAL' || code === 'UNKNOWN') {\n      // exists, but not a symlink, we don't know WHAT it is, so remove\n      // all IFMT bits.\n      ter &= IFMT_UNKNOWN\n    }\n    this.#type = ter\n    // windows just gets ENOENT in this case.  We do cover the case,\n    // just disabled because it's impossible on Windows CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR' && this.parent) {\n      this.parent.#markENOTDIR()\n    }\n    /* c8 ignore stop */\n  }\n\n  #readdirAddChild(e: Dirent, c: Children) {\n    return (\n      this.#readdirMaybePromoteChild(e, c) ||\n      this.#readdirAddNewChild(e, c)\n    )\n  }\n\n  #readdirAddNewChild(e: Dirent, c: Children): PathBase {\n    // alloc new entry at head, so it's never provisional\n    const type = entToType(e)\n    const child = this.newChild(e.name, type, { parent: this })\n    const ifmt = child.#type & IFMT\n    if (ifmt !== IFDIR && ifmt !== IFLNK && ifmt !== UNKNOWN) {\n      child.#type |= ENOTDIR\n    }\n    c.unshift(child)\n    c.provisional++\n    return child\n  }\n\n  #readdirMaybePromoteChild(e: Dirent, c: Children): PathBase | undefined {\n    for (let p = c.provisional; p < c.length; p++) {\n      const pchild = c[p]\n      const name =\n        this.nocase ? normalizeNocase(e.name) : normalize(e.name)\n      if (name !== pchild!.#matchName) {\n        continue\n      }\n\n      return this.#readdirPromoteChild(e, pchild!, p, c)\n    }\n  }\n\n  #readdirPromoteChild(\n    e: Dirent,\n    p: PathBase,\n    index: number,\n    c: Children,\n  ): PathBase {\n    const v = p.name\n    // retain any other flags, but set ifmt from dirent\n    p.#type = (p.#type & IFMT_UNKNOWN) | entToType(e)\n    // case sensitivity fixing when we learn the true name.\n    if (v !== e.name) p.name = e.name\n\n    // just advance provisional index (potentially off the list),\n    // otherwise we have to splice/pop it out and re-insert at head\n    if (index !== c.provisional) {\n      if (index === c.length - 1) c.pop()\n      else c.splice(index, 1)\n      c.unshift(p)\n    }\n    c.provisional++\n    return p\n  }\n\n  /**\n   * Call lstat() on this Path, and update all known information that can be\n   * determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(): Promise<PathBase | undefined> {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(await this.#fs.promises.lstat(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  /**\n   * synchronous {@link PathBase.lstat}\n   */\n  lstatSync(): PathBase | undefined {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(this.#fs.lstatSync(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  #applyStat(st: Stats) {\n    const {\n      atime,\n      atimeMs,\n      birthtime,\n      birthtimeMs,\n      blksize,\n      blocks,\n      ctime,\n      ctimeMs,\n      dev,\n      gid,\n      ino,\n      mode,\n      mtime,\n      mtimeMs,\n      nlink,\n      rdev,\n      size,\n      uid,\n    } = st\n    this.#atime = atime\n    this.#atimeMs = atimeMs\n    this.#birthtime = birthtime\n    this.#birthtimeMs = birthtimeMs\n    this.#blksize = blksize\n    this.#blocks = blocks\n    this.#ctime = ctime\n    this.#ctimeMs = ctimeMs\n    this.#dev = dev\n    this.#gid = gid\n    this.#ino = ino\n    this.#mode = mode\n    this.#mtime = mtime\n    this.#mtimeMs = mtimeMs\n    this.#nlink = nlink\n    this.#rdev = rdev\n    this.#size = size\n    this.#uid = uid\n    const ifmt = entToType(st)\n    // retain any other flags, but set the ifmt\n    this.#type = (this.#type & IFMT_UNKNOWN) | ifmt | LSTAT_CALLED\n    if (ifmt !== UNKNOWN && ifmt !== IFDIR && ifmt !== IFLNK) {\n      this.#type |= ENOTDIR\n    }\n  }\n\n  #onReaddirCB: ((\n    er: NodeJS.ErrnoException | null,\n    entries: Path[],\n  ) => any)[] = []\n  #readdirCBInFlight: boolean = false\n  #callOnReaddirCB(children: Path[]) {\n    this.#readdirCBInFlight = false\n    const cbs = this.#onReaddirCB.slice()\n    this.#onReaddirCB.length = 0\n    cbs.forEach(cb => cb(null, children))\n  }\n\n  /**\n   * Standard node-style callback interface to get list of directory entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * @param cb The callback called with (er, entries).  Note that the `er`\n   * param is somewhat extraneous, as all readdir() errors are handled and\n   * simply result in an empty set of entries being returned.\n   * @param allowZalgo Boolean indicating that immediately known results should\n   * *not* be deferred with `queueMicrotask`. Defaults to `false`. Release\n   * zalgo at your peril, the dark pony lord is devious and unforgiving.\n   */\n  readdirCB(\n    cb: (er: NodeJS.ErrnoException | null, entries: PathBase[]) => any,\n    allowZalgo: boolean = false,\n  ): void {\n    if (!this.canReaddir()) {\n      if (allowZalgo) cb(null, [])\n      else queueMicrotask(() => cb(null, []))\n      return\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      const c = children.slice(0, children.provisional)\n      if (allowZalgo) cb(null, c)\n      else queueMicrotask(() => cb(null, c))\n      return\n    }\n\n    // don't have to worry about zalgo at this point.\n    this.#onReaddirCB.push(cb)\n    if (this.#readdirCBInFlight) {\n      return\n    }\n    this.#readdirCBInFlight = true\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    this.#fs.readdir(fullpath, { withFileTypes: true }, (er, entries) => {\n      if (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      } else {\n        // if we didn't get an error, we always get entries.\n        //@ts-ignore\n        for (const e of entries) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      }\n      this.#callOnReaddirCB(children.slice(0, children.provisional))\n      return\n    })\n  }\n\n  #asyncReaddirInFlight?: Promise<void>\n\n  /**\n   * Return an array of known child entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async readdir(): Promise<PathBase[]> {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    if (this.#asyncReaddirInFlight) {\n      await this.#asyncReaddirInFlight\n    } else {\n      /* c8 ignore start */\n      let resolve: () => void = () => {}\n      /* c8 ignore stop */\n      this.#asyncReaddirInFlight = new Promise<void>(\n        res => (resolve = res),\n      )\n      try {\n        for (const e of await this.#fs.promises.readdir(fullpath, {\n          withFileTypes: true,\n        })) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      } catch (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      }\n      this.#asyncReaddirInFlight = undefined\n      resolve()\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * synchronous {@link PathBase.readdir}\n   */\n  readdirSync(): PathBase[] {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    try {\n      for (const e of this.#fs.readdirSync(fullpath, {\n        withFileTypes: true,\n      })) {\n        this.#readdirAddChild(e, children)\n      }\n      this.#readdirSuccess(children)\n    } catch (er) {\n      this.#readdirFail((er as NodeJS.ErrnoException).code)\n      children.provisional = 0\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  canReaddir() {\n    if (this.#type & ENOCHILD) return false\n    const ifmt = IFMT & this.#type\n    // we always set ENOTDIR when setting IFMT, so should be impossible\n    /* c8 ignore start */\n    if (!(ifmt === UNKNOWN || ifmt === IFDIR || ifmt === IFLNK)) {\n      return false\n    }\n    /* c8 ignore stop */\n    return true\n  }\n\n  shouldWalk(\n    dirs: Set<PathBase | undefined>,\n    walkFilter?: (e: PathBase) => boolean,\n  ): boolean {\n    return (\n      (this.#type & IFDIR) === IFDIR &&\n      !(this.#type & ENOCHILD) &&\n      !dirs.has(this) &&\n      (!walkFilter || walkFilter(this))\n    )\n  }\n\n  /**\n   * Return the Path object corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   * On success, returns a Path object.\n   */\n  async realpath(): Promise<PathBase | undefined> {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = await this.#fs.promises.realpath(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Synchronous {@link realpath}\n   */\n  realpathSync(): PathBase | undefined {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = this.#fs.realpathSync(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Internal method to mark this Path object as the scurry cwd,\n   * called by {@link PathScurry#chdir}\n   *\n   * @internal\n   */\n  [setAsCwd](oldCwd: PathBase): void {\n    if (oldCwd === this) return\n    oldCwd.isCWD = false\n    this.isCWD = true\n\n    const changed = new Set<PathBase>([])\n    let rp = []\n    let p: PathBase = this\n    while (p && p.parent) {\n      changed.add(p)\n      p.#relative = rp.join(this.sep)\n      p.#relativePosix = rp.join('/')\n      p = p.parent\n      rp.push('..')\n    }\n    // now un-memoize parents of old cwd\n    p = oldCwd\n    while (p && p.parent && !changed.has(p)) {\n      p.#relative = undefined\n      p.#relativePosix = undefined\n      p = p.parent\n    }\n  }\n}\n\n/**\n * Path class used on win32 systems\n *\n * Uses `'\\\\'` as the path separator for returned paths, either `'\\\\'` or `'/'`\n * as the path separator for parsing paths.\n */\nexport class PathWin32 extends PathBase {\n  /**\n   * Separator for generating path strings.\n   */\n  sep: '\\\\' = '\\\\'\n  /**\n   * Separator for parsing path strings.\n   */\n  splitSep: RegExp = eitherSep\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathWin32(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts,\n    )\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return win32.parse(path).root\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(rootPath: string): PathBase {\n    rootPath = uncToDrive(rootPath.toUpperCase())\n    if (rootPath === this.root.name) {\n      return this.root\n    }\n    // ok, not that one, check if it matches another we know about\n    for (const [compare, root] of Object.entries(this.roots)) {\n      if (this.sameRoot(rootPath, compare)) {\n        return (this.roots[rootPath] = root)\n      }\n    }\n    // otherwise, have to create a new one.\n    return (this.roots[rootPath] = new PathScurryWin32(\n      rootPath,\n      this,\n    ).root)\n  }\n\n  /**\n   * @internal\n   */\n  sameRoot(rootPath: string, compare: string = this.root.name): boolean {\n    // windows can (rarely) have case-sensitive filesystem, but\n    // UNC and drive letters are always case-insensitive, and canonically\n    // represented uppercase.\n    rootPath = rootPath\n      .toUpperCase()\n      .replace(/\\//g, '\\\\')\n      .replace(uncDriveRegexp, '$1\\\\')\n    return rootPath === compare\n  }\n}\n\n/**\n * Path class used on all posix systems.\n *\n * Uses `'/'` as the path separator.\n */\nexport class PathPosix extends PathBase {\n  /**\n   * separator for parsing path strings\n   */\n  splitSep: '/' = '/'\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts,\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return path.startsWith('/') ? '/' : ''\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(_rootPath: string): PathBase {\n    return this.root\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathPosix(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts,\n    )\n  }\n}\n\n/**\n * Options that may be provided to the PathScurry constructor\n */\nexport interface PathScurryOpts {\n  /**\n   * perform case-insensitive path matching. Default based on platform\n   * subclass.\n   */\n  nocase?: boolean\n  /**\n   * Number of Path entries to keep in the cache of Path child references.\n   *\n   * Setting this higher than 65536 will dramatically increase the data\n   * consumption and construction time overhead of each PathScurry.\n   *\n   * Setting this value to 256 or lower will significantly reduce the data\n   * consumption and construction time overhead, but may also reduce resolve()\n   * and readdir() performance on large filesystems.\n   *\n   * Default `16384`.\n   */\n  childrenCacheSize?: number\n  /**\n   * An object that overrides the built-in functions from the fs and\n   * fs/promises modules.\n   *\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * The base class for all PathScurry classes, providing the interface for path\n * resolution and filesystem operations.\n *\n * Typically, you should *not* instantiate this class directly, but rather one\n * of the platform-specific classes, or the exported {@link PathScurry} which\n * defaults to the current platform.\n */\nexport abstract class PathScurryBase {\n  /**\n   * The root Path entry for the current working directory of this Scurry\n   */\n  root: PathBase\n  /**\n   * The string path for the root of this Scurry's current working directory\n   */\n  rootPath: string\n  /**\n   * A collection of all roots encountered, referenced by rootPath\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * The Path entry corresponding to this PathScurry's current working directory.\n   */\n  cwd: PathBase\n  #resolveCache: ResolveCache\n  #resolvePosixCache: ResolveCache\n  #children: ChildrenCache\n  /**\n   * Perform path comparisons case-insensitively.\n   *\n   * Defaults true on Darwin and Windows systems, false elsewhere.\n   */\n  nocase: boolean\n\n  /**\n   * The path separator used for parsing paths\n   *\n   * `'/'` on Posix systems, either `'/'` or `'\\\\'` on Windows\n   */\n  abstract sep: string | RegExp\n\n  #fs: FSValue\n\n  /**\n   * This class should not be instantiated directly.\n   *\n   * Use PathScurryWin32, PathScurryDarwin, PathScurryPosix, or PathScurry\n   *\n   * @internal\n   */\n  constructor(\n    cwd: URL | string = process.cwd(),\n    pathImpl: typeof win32 | typeof posix,\n    sep: string | RegExp,\n    {\n      nocase,\n      childrenCacheSize = 16 * 1024,\n      fs = defaultFS,\n    }: PathScurryOpts = {},\n  ) {\n    this.#fs = fsFromOption(fs)\n    if (cwd instanceof URL || cwd.startsWith('file://')) {\n      cwd = fileURLToPath(cwd)\n    }\n    // resolve and split root, and then add to the store.\n    // this is the only time we call path.resolve()\n    const cwdPath = pathImpl.resolve(cwd)\n    this.roots = Object.create(null)\n    this.rootPath = this.parseRootPath(cwdPath)\n    this.#resolveCache = new ResolveCache()\n    this.#resolvePosixCache = new ResolveCache()\n    this.#children = new ChildrenCache(childrenCacheSize)\n\n    const split = cwdPath.substring(this.rootPath.length).split(sep)\n    // resolve('/') leaves '', splits to [''], we don't want that.\n    if (split.length === 1 && !split[0]) {\n      split.pop()\n    }\n    /* c8 ignore start */\n    if (nocase === undefined) {\n      throw new TypeError(\n        'must provide nocase setting to PathScurryBase ctor',\n      )\n    }\n    /* c8 ignore stop */\n    this.nocase = nocase\n    this.root = this.newRoot(this.#fs)\n    this.roots[this.rootPath] = this.root\n    let prev: PathBase = this.root\n    let len = split.length - 1\n    const joinSep = pathImpl.sep\n    let abs = this.rootPath\n    let sawFirst = false\n    for (const part of split) {\n      const l = len--\n      prev = prev.child(part, {\n        relative: new Array(l).fill('..').join(joinSep),\n        relativePosix: new Array(l).fill('..').join('/'),\n        fullpath: (abs += (sawFirst ? '' : joinSep) + part),\n      })\n      sawFirst = true\n    }\n    this.cwd = prev\n  }\n\n  /**\n   * Get the depth of a provided path, string, or the cwd\n   */\n  depth(path: Path | string = this.cwd): number {\n    if (typeof path === 'string') {\n      path = this.cwd.resolve(path)\n    }\n    return path.depth()\n  }\n\n  /**\n   * Parse the root portion of a path string\n   *\n   * @internal\n   */\n  abstract parseRootPath(dir: string): string\n  /**\n   * create a new Path to use as root during construction.\n   *\n   * @internal\n   */\n  abstract newRoot(fs: FSValue): PathBase\n  /**\n   * Determine whether a given path string is absolute\n   */\n  abstract isAbsolute(p: string): boolean\n\n  /**\n   * Return the cache of child entries.  Exposed so subclasses can create\n   * child Path objects in a platform-specific way.\n   *\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolve(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolveCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpath()\n    this.#resolveCache.set(r, result)\n    return result\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string, returning\n   * the posix path.  Identical to .resolve() on posix systems, but on\n   * windows will return a forward-slash separated UNC path.\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolvePosix(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolvePosixCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpathPosix()\n    this.#resolvePosixCache.set(r, result)\n    return result\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or entry\n   */\n  relative(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relative()\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or\n   * entry, using / as the path delimiter, even on Windows.\n   */\n  relativePosix(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relativePosix()\n  }\n\n  /**\n   * Return the basename for the provided string or Path object\n   */\n  basename(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.name\n  }\n\n  /**\n   * Return the dirname for the provided string or Path object\n   */\n  dirname(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return (entry.parent || entry).fullpath()\n  }\n\n  /**\n   * Return an array of known child entries.\n   *\n   * First argument may be either a string, or a Path object.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * Unlike `fs.readdir()`, the `withFileTypes` option defaults to `true`. Set\n   * `{ withFileTypes: false }` to return strings.\n   */\n\n  readdir(): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: true }): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: false }): Promise<string[]>\n  readdir(opts: { withFileTypes: boolean }): Promise<PathBase[] | string[]>\n  readdir(entry: PathBase | string): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: true },\n  ): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: false },\n  ): Promise<string[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean },\n  ): Promise<PathBase[] | string[]>\n  async readdir(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    },\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else {\n      const p = await entry.readdir()\n      return withFileTypes ? p : p.map(e => e.name)\n    }\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readdir}\n   */\n  readdirSync(): PathBase[]\n  readdirSync(opts: { withFileTypes: true }): PathBase[]\n  readdirSync(opts: { withFileTypes: false }): string[]\n  readdirSync(opts: { withFileTypes: boolean }): PathBase[] | string[]\n  readdirSync(entry: PathBase | string): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: true },\n  ): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: false },\n  ): string[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean },\n  ): PathBase[] | string[]\n  readdirSync(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    },\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes = true } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else if (withFileTypes) {\n      return entry.readdirSync()\n    } else {\n      return entry.readdirSync().map(e => e.name)\n    }\n  }\n\n  /**\n   * Call lstat() on the string or Path object, and update all known\n   * information that can be determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(\n    entry: string | PathBase = this.cwd,\n  ): Promise<PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstat()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.lstat}\n   */\n  lstatSync(entry: string | PathBase = this.cwd): PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstatSync()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to the target of a\n   * symbolic link.\n   *\n   * If the path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  readlink(): Promise<string | undefined>\n  readlink(opt: { withFileTypes: false }): Promise<string | undefined>\n  readlink(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  readlink(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): Promise<string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): Promise<PathBase | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): Promise<string | PathBase | undefined>\n  async readlink(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.readlink()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readlink}\n   */\n  readlinkSync(): string | undefined\n  readlinkSync(opt: { withFileTypes: false }): string | undefined\n  readlinkSync(opt: { withFileTypes: true }): PathBase | undefined\n  readlinkSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): string | PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.readlinkSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  realpath(): Promise<string | undefined>\n  realpath(opt: { withFileTypes: false }): Promise<string | undefined>\n  realpath(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  realpath(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): Promise<string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): Promise<PathBase | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): Promise<string | PathBase | undefined>\n  async realpath(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.realpath()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  realpathSync(): string | undefined\n  realpathSync(opt: { withFileTypes: false }): string | undefined\n  realpathSync(opt: { withFileTypes: true }): PathBase | undefined\n  realpathSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false },\n  ): string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true },\n  ): PathBase | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean },\n  ): string | PathBase | undefined\n  realpathSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    },\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.realpathSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Asynchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walk(): Promise<PathBase[]>\n  walk(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Promise<PathBase[]>\n  walk(opts: WalkOptionsWithFileTypesFalse): Promise<string[]>\n  walk(opts: WalkOptions): Promise<string[] | PathBase[]>\n  walk(entry: string | PathBase): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Promise<string[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Promise<PathBase[] | string[]>\n  async walk(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const walk = (\n      dir: PathBase,\n      cb: (er?: NodeJS.ErrnoException) => void,\n    ) => {\n      dirs.add(dir)\n      dir.readdirCB((er, entries) => {\n        /* c8 ignore start */\n        if (er) {\n          return cb(er)\n        }\n        /* c8 ignore stop */\n        let len = entries.length\n        if (!len) return cb()\n        const next = () => {\n          if (--len === 0) {\n            cb()\n          }\n        }\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            results.push(withFileTypes ? e : e.fullpath())\n          }\n          if (follow && e.isSymbolicLink()) {\n            e.realpath()\n              .then(r => (r?.isUnknown() ? r.lstat() : r))\n              .then(r =>\n                r?.shouldWalk(dirs, walkFilter) ? walk(r, next) : next(),\n              )\n          } else {\n            if (e.shouldWalk(dirs, walkFilter)) {\n              walk(e, next)\n            } else {\n              next()\n            }\n          }\n        }\n      }, true) // zalgooooooo\n    }\n\n    const start = entry\n    return new Promise<PathBase[] | string[]>((res, rej) => {\n      walk(start, er => {\n        /* c8 ignore start */\n        if (er) return rej(er)\n        /* c8 ignore stop */\n        res(results as PathBase[] | string[])\n      })\n    })\n  }\n\n  /**\n   * Synchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walkSync(): PathBase[]\n  walkSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): PathBase[]\n  walkSync(opts: WalkOptionsWithFileTypesFalse): string[]\n  walkSync(opts: WalkOptions): string[] | PathBase[]\n  walkSync(entry: string | PathBase): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): string[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): PathBase[] | string[]\n  walkSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          results.push(withFileTypes ? e : e.fullpath())\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n    return results as string[] | PathBase[]\n  }\n\n  /**\n   * Support for `for await`\n   *\n   * Alias for {@link PathScurryBase.iterate}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n\n  /**\n   * Async generator form of {@link PathScurryBase.walk}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking, especially if most/all of the directory tree has been previously\n   * walked.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  iterate(): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesFalse,\n  ): AsyncGenerator<string, void, void>\n  iterate(opts: WalkOptions): AsyncGenerator<string | PathBase, void, void>\n  iterate(entry: string | PathBase): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): AsyncGenerator<string, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): AsyncGenerator<PathBase | string, void, void>\n  iterate(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    options: WalkOptions = {},\n  ): AsyncGenerator<PathBase | string, void, void> {\n    // iterating async over the stream is significantly more performant,\n    // especially in the warm-cache scenario, because it buffers up directory\n    // entries in the background instead of waiting for a yield for each one.\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      options = entry\n      entry = this.cwd\n    }\n    return this.stream(entry, options)[Symbol.asyncIterator]()\n  }\n\n  /**\n   * Iterating over a PathScurry performs a synchronous walk.\n   *\n   * Alias for {@link PathScurryBase.iterateSync}\n   */\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  iterateSync(): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Generator<string, void, void>\n  iterateSync(opts: WalkOptions): Generator<string | PathBase, void, void>\n  iterateSync(entry: string | PathBase): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Generator<string, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Generator<PathBase | string, void, void>\n  *iterateSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Generator<PathBase | string, void, void> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    if (!filter || filter(entry)) {\n      yield withFileTypes ? entry : entry.fullpath()\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          yield withFileTypes ? e : e.fullpath()\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n  }\n\n  /**\n   * Stream form of {@link PathScurryBase.walk}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   */\n  stream(): Minipass<PathBase>\n  stream(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Minipass<PathBase>\n  stream(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  stream(opts: WalkOptions): Minipass<string | PathBase>\n  stream(entry: string | PathBase): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Minipass<string>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Minipass<string> | Minipass<PathBase>\n  stream(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n\n        processing++\n        dirs.add(dir)\n\n        const onReaddir = (\n          er: null | NodeJS.ErrnoException,\n          entries: PathBase[],\n          didRealpaths: boolean = false,\n        ) => {\n          /* c8 ignore start */\n          if (er) return results.emit('error', er)\n          /* c8 ignore stop */\n          if (follow && !didRealpaths) {\n            const promises: Promise<PathBase | undefined>[] = []\n            for (const e of entries) {\n              if (e.isSymbolicLink()) {\n                promises.push(\n                  e\n                    .realpath()\n                    .then((r: PathBase | undefined) =>\n                      r?.isUnknown() ? r.lstat() : r,\n                    ),\n                )\n              }\n            }\n            if (promises.length) {\n              Promise.all(promises).then(() =>\n                onReaddir(null, entries, true),\n              )\n              return\n            }\n          }\n\n          for (const e of entries) {\n            if (e && (!filter || filter(e))) {\n              if (!results.write(withFileTypes ? e : e.fullpath())) {\n                paused = true\n              }\n            }\n          }\n\n          processing--\n          for (const e of entries) {\n            const r = e.realpathCached() || e\n            if (r.shouldWalk(dirs, walkFilter)) {\n              queue.push(r)\n            }\n          }\n          if (paused && !results.flowing) {\n            results.once('drain', process)\n          } else if (!sync) {\n            process()\n          }\n        }\n\n        // zalgo containment\n        let sync = true\n        dir.readdirCB(onReaddir, true)\n        sync = false\n      }\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  /**\n   * Synchronous form of {@link PathScurryBase.stream}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   *\n   * Will complete the walk in a single tick if the stream is consumed fully.\n   * Otherwise, will pause as needed for stream backpressure.\n   */\n  streamSync(): Minipass<PathBase>\n  streamSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset,\n  ): Minipass<PathBase>\n  streamSync(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  streamSync(opts: WalkOptions): Minipass<string | PathBase>\n  streamSync(entry: string | PathBase): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue,\n  ): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse,\n  ): Minipass<string>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptions,\n  ): Minipass<string> | Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {},\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    const dirs = new Set<PathBase>()\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n        processing++\n        dirs.add(dir)\n\n        const entries = dir.readdirSync()\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            if (!results.write(withFileTypes ? e : e.fullpath())) {\n              paused = true\n            }\n          }\n        }\n        processing--\n        for (const e of entries) {\n          let r: PathBase | undefined = e\n          if (e.isSymbolicLink()) {\n            if (!(follow && (r = e.realpathSync()))) continue\n            if (r.isUnknown()) r.lstatSync()\n          }\n          if (r.shouldWalk(dirs, walkFilter)) {\n            queue.push(r)\n          }\n        }\n      }\n      if (paused && !results.flowing) results.once('drain', process)\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  chdir(path: string | Path = this.cwd) {\n    const oldCwd = this.cwd\n    this.cwd = typeof path === 'string' ? this.cwd.resolve(path) : path\n    this.cwd[setAsCwd](oldCwd)\n  }\n}\n\n/**\n * Options provided to all walk methods.\n */\nexport interface WalkOptions {\n  /**\n   * Return results as {@link PathBase} objects rather than strings.\n   * When set to false, results are fully resolved paths, as returned by\n   * {@link PathBase.fullpath}.\n   * @default true\n   */\n  withFileTypes?: boolean\n\n  /**\n   *  Attempt to read directory entries from symbolic links. Otherwise, only\n   *  actual directories are traversed. Regardless of this setting, a given\n   *  target path will only ever be walked once, meaning that a symbolic link\n   *  to a previously traversed directory will never be followed.\n   *\n   *  Setting this imposes a slight performance penalty, because `readlink`\n   *  must be called on all symbolic links encountered, in order to avoid\n   *  infinite cycles.\n   * @default false\n   */\n  follow?: boolean\n\n  /**\n   * Only return entries where the provided function returns true.\n   *\n   * This will not prevent directories from being traversed, even if they do\n   * not pass the filter, though it will prevent directories themselves from\n   * being included in the result set.  See {@link walkFilter}\n   *\n   * Asynchronous functions are not supported here.\n   *\n   * By default, if no filter is provided, all entries and traversed\n   * directories are included.\n   */\n  filter?: (entry: PathBase) => boolean\n\n  /**\n   * Only traverse directories (and in the case of {@link follow} being set to\n   * true, symbolic links to directories) if the provided function returns\n   * true.\n   *\n   * This will not prevent directories from being included in the result set,\n   * even if they do not pass the supplied filter function.  See {@link filter}\n   * to do that.\n   *\n   * Asynchronous functions are not supported here.\n   */\n  walkFilter?: (entry: PathBase) => boolean\n}\n\nexport type WalkOptionsWithFileTypesUnset = WalkOptions & {\n  withFileTypes?: undefined\n}\nexport type WalkOptionsWithFileTypesTrue = WalkOptions & {\n  withFileTypes: true\n}\nexport type WalkOptionsWithFileTypesFalse = WalkOptions & {\n  withFileTypes: false\n}\n\n/**\n * Windows implementation of {@link PathScurryBase}\n *\n * Defaults to case insensitve, uses `'\\\\'` to generate path strings.  Uses\n * {@link PathWin32} for Path objects.\n */\nexport class PathScurryWin32 extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '\\\\' = '\\\\'\n\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = true } = opts\n    super(cwd, win32, '\\\\', { ...opts, nocase })\n    this.nocase = nocase\n    for (let p: PathBase | undefined = this.cwd; p; p = p.parent) {\n      p.nocase = this.nocase\n    }\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(dir: string): string {\n    // if the path starts with a single separator, it's not a UNC, and we'll\n    // just get separator as the root, and driveFromUNC will return \\\n    // In that case, mount \\ on the root from the cwd.\n    return win32.parse(dir).root.toUpperCase()\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathWin32(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs },\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return (\n      p.startsWith('/') || p.startsWith('\\\\') || /^[a-z]:(\\/|\\\\)/i.test(p)\n    )\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for all posix systems other than Darwin.\n *\n * Defaults to case-sensitive matching, uses `'/'` to generate path strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryPosix extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = false } = opts\n    super(cwd, posix, '/', { ...opts, nocase })\n    this.nocase = nocase\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(_dir: string): string {\n    return '/'\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathPosix(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs },\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return p.startsWith('/')\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for Darwin (macOS) systems.\n *\n * Defaults to case-insensitive matching, uses `'/'` for generating path\n * strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryDarwin extends PathScurryPosix {\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {},\n  ) {\n    const { nocase = true } = opts\n    super(cwd, { ...opts, nocase })\n  }\n}\n\n/**\n * Default {@link PathBase} implementation for the current platform.\n *\n * {@link PathWin32} on Windows systems, {@link PathPosix} on all others.\n */\nexport const Path = process.platform === 'win32' ? PathWin32 : PathPosix\nexport type Path = PathBase | InstanceType<typeof Path>\n\n/**\n * Default {@link PathScurryBase} implementation for the current platform.\n *\n * {@link PathScurryWin32} on Windows systems, {@link PathScurryDarwin} on\n * Darwin (macOS) systems, {@link PathScurryPosix} on all others.\n */\nexport const PathScurry:\n  | typeof PathScurryWin32\n  | typeof PathScurryDarwin\n  | typeof PathScurryPosix =\n  process.platform === 'win32' ? PathScurryWin32\n  : process.platform === 'darwin' ? PathScurryDarwin\n  : PathScurryPosix\nexport type PathScurry = PathScurryBase | InstanceType<typeof PathScurry>\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minipass@7.1.2/node_modules/minipass/dist/esm/index.js":{"lineLengths":[51,13,7,21,21,6,43,33,52,3,78,40,3,37,28,29,30,24,23,3,67,3,39,28,32,35,69,46,3,67,3,39,28,32,36,32,26,46,41,43,45,32,28,30,40,36,34,34,32,32,32,30,44,40,42,40,42,38,42,30,36,34,36,30,30,34,32,46,38,49,29,79,60,11,32,24,47,27,78,3,62,2,12,3,12,8,9,9,12,34,23,25,25,43,44,5,14,56,5,34,25,24,24,11,22,26,28,5,1,3,67,22,2,12,3,36,14,59,23,5,34,31,56,42,5,1,50,90,3,34,2,58,2,75,55,2,67,41,3,44,22,21,17,18,17,15,12,14,18,26,27,21,27,23,24,13,22,24,24,7,40,7,20,7,37,7,20,7,69,70,51,63,7,26,35,16,16,73,84,9,43,36,34,9,46,46,37,9,14,37,34,9,38,38,47,19,63,60,79,9,63,59,77,9,35,21,34,33,30,13,18,70,13,9,5,7,66,6,62,77,55,73,15,7,24,34,5,7,55,7,20,30,5,7,49,7,24,70,5,7,67,7,23,70,5,7,43,7,22,32,5,7,49,7,25,72,5,7,38,7,21,27,5,7,45,6,78,74,34,7,22,41,5,57,15,29,49,43,5,7,43,7,19,29,5,7,78,34,7,22,32,26,25,22,47,30,141,24,9,45,26,30,9,22,30,49,67,71,42,63,59,43,58,86,13,48,58,43,13,49,88,13,9,58,62,31,32,33,58,34,32,30,41,16,40,41,38,19,23,33,9,56,55,28,41,38,19,23,33,9,70,61,40,64,73,52,49,9,55,52,47,9,73,54,30,26,37,12,36,37,34,15,19,29,5,7,38,6,74,17,6,70,77,66,6,72,31,7,13,28,24,32,39,22,44,35,24,9,29,21,59,79,40,28,31,43,71,14,9,59,31,19,5,22,29,32,14,28,45,36,45,45,38,40,13,18,48,41,40,13,9,33,47,31,21,5,30,42,23,30,9,45,26,30,9,32,40,15,33,25,30,66,37,65,63,43,35,20,5,51,16,28,19,58,35,9,29,29,28,32,26,27,35,12,31,5,7,61,6,79,77,78,76,41,7,14,30,5,7,23,7,13,30,28,32,5,7,53,7,21,31,5,7,71,46,7,19,29,5,7,56,7,18,28,5,25,29,36,12,47,33,5,21,29,36,12,57,36,5,30,62,33,59,31,5,25,33,29,5,7,74,6,33,7,22,28,24,32,40,26,57,29,12,42,46,50,20,25,27,9,14,78,76,46,44,57,28,44,16,31,9,20,5,7,47,6,74,73,73,52,7,18,57,16,43,65,42,17,33,13,16,62,23,9,5,7,36,7,30,36,5,7,64,71,6,68,6,80,57,6,75,78,26,6,77,79,16,7,21,42,28,36,34,56,31,13,9,65,35,9,53,27,40,9,57,30,28,63,16,50,9,19,5,7,37,7,33,37,5,7,45,6,73,76,73,52,7,22,43,73,74,64,28,64,44,35,38,38,13,9,19,5,7,60,6,80,76,79,14,7,28,49,48,36,58,38,13,9,19,5,7,47,7,22,33,5,24,34,33,31,40,24,38,29,35,32,29,35,39,9,5,7,66,71,6,73,72,18,6,74,74,75,71,19,6,72,63,6,79,74,71,6,74,66,7,23,29,74,29,29,31,30,25,9,33,45,23,29,63,43,9,32,35,9,34,32,57,55,29,44,45,23,9,34,39,36,71,43,24,35,23,9,35,45,35,23,9,57,39,40,23,9,35,44,31,19,5,22,38,45,29,9,71,31,19,5,17,30,25,33,30,26,51,31,5,18,28,45,23,46,39,17,37,45,13,9,38,20,9,38,39,19,5,7,74,23,7,21,39,26,11,30,31,60,39,33,30,24,34,43,11,16,19,5,7,78,28,6,41,7,20,31,59,9,41,30,26,50,5,7,64,7,21,49,76,47,44,11,5,7,45,6,74,7,30,70,22,32,28,34,25,27,52,10,28,24,30,36,29,68,26,30,24,23,35,41,39,47,23,27,14,39,41,39,47,29,54,14,33,41,41,47,23,58,14,73,46,29,30,48,42,40,42,15,10,16,17,24,25,38,28,14,10,5,7,38,6,75,44,7,25,70,22,32,28,28,25,34,38,34,27,52,10,28,24,30,38,68,10,31,31,35,16,17,24,25,33,28,14,10,5,7,79,6,70,19,6,76,30,6,70,21,7,17,30,19,39,16,37,24,9,31,31,62,32,31,24,60,23,15,35,61,12,33,20,5,7,33,6,70,6,18,7,27,24,5,1,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/minipass@7.1.2/node_modules/minipass/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["const proc =\n  typeof process === 'object' && process\n    ? process\n    : {\n        stdout: null,\n        stderr: null,\n      }\nimport { EventEmitter } from 'node:events'\nimport Stream from 'node:stream'\nimport { StringDecoder } from 'node:string_decoder'\n\n/**\n * Same as StringDecoder, but exposing the `lastNeed` flag on the type\n */\ntype SD = StringDecoder & { lastNeed: boolean }\n\nexport type { SD, Pipe, PipeProxyErrors }\n\n/**\n * Return true if the argument is a Minipass stream, Node stream, or something\n * else that Minipass can interact with.\n */\nexport const isStream = (\n  s: any\n): s is Minipass.Readable | Minipass.Writable =>\n  !!s &&\n  typeof s === 'object' &&\n  (s instanceof Minipass ||\n    s instanceof Stream ||\n    isReadable(s) ||\n    isWritable(s))\n\n/**\n * Return true if the argument is a valid {@link Minipass.Readable}\n */\nexport const isReadable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Readable).pipe === 'function' &&\n  // node core Writable streams have a pipe() method, but it throws\n  (s as Minipass.Readable).pipe !== Stream.Writable.prototype.pipe\n\n/**\n * Return true if the argument is a valid {@link Minipass.Writable}\n */\nexport const isWritable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Writable).write === 'function' &&\n  typeof (s as Minipass.Writable).end === 'function'\n\nconst EOF = Symbol('EOF')\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd')\nconst EMITTED_END = Symbol('emittedEnd')\nconst EMITTING_END = Symbol('emittingEnd')\nconst EMITTED_ERROR = Symbol('emittedError')\nconst CLOSED = Symbol('closed')\nconst READ = Symbol('read')\nconst FLUSH = Symbol('flush')\nconst FLUSHCHUNK = Symbol('flushChunk')\nconst ENCODING = Symbol('encoding')\nconst DECODER = Symbol('decoder')\nconst FLOWING = Symbol('flowing')\nconst PAUSED = Symbol('paused')\nconst RESUME = Symbol('resume')\nconst BUFFER = Symbol('buffer')\nconst PIPES = Symbol('pipes')\nconst BUFFERLENGTH = Symbol('bufferLength')\nconst BUFFERPUSH = Symbol('bufferPush')\nconst BUFFERSHIFT = Symbol('bufferShift')\nconst OBJECTMODE = Symbol('objectMode')\n// internal event when stream is destroyed\nconst DESTROYED = Symbol('destroyed')\n// internal event when stream has an error\nconst ERROR = Symbol('error')\nconst EMITDATA = Symbol('emitData')\nconst EMITEND = Symbol('emitEnd')\nconst EMITEND2 = Symbol('emitEnd2')\nconst ASYNC = Symbol('async')\nconst ABORT = Symbol('abort')\nconst ABORTED = Symbol('aborted')\nconst SIGNAL = Symbol('signal')\nconst DATALISTENERS = Symbol('dataListeners')\nconst DISCARDED = Symbol('discarded')\n\nconst defer = (fn: (...a: any[]) => any) => Promise.resolve().then(fn)\nconst nodefer = (fn: (...a: any[]) => any) => fn()\n\n// events that mean 'the stream is over'\n// these are treated specially, and re-emitted\n// if they are listened for after emitting.\ntype EndishEvent = 'end' | 'finish' | 'prefinish'\nconst isEndish = (ev: any): ev is EndishEvent =>\n  ev === 'end' || ev === 'finish' || ev === 'prefinish'\n\nconst isArrayBufferLike = (b: any): b is ArrayBufferLike =>\n  b instanceof ArrayBuffer ||\n  (!!b &&\n    typeof b === 'object' &&\n    b.constructor &&\n    b.constructor.name === 'ArrayBuffer' &&\n    b.byteLength >= 0)\n\nconst isArrayBufferView = (b: any): b is ArrayBufferView =>\n  !Buffer.isBuffer(b) && ArrayBuffer.isView(b)\n\n/**\n * Options that may be passed to stream.pipe()\n */\nexport interface PipeOptions {\n  /**\n   * end the destination stream when the source stream ends\n   */\n  end?: boolean\n  /**\n   * proxy errors from the source stream to the destination stream\n   */\n  proxyErrors?: boolean\n}\n\n/**\n * Internal class representing a pipe to a destination stream.\n *\n * @internal\n */\nclass Pipe<T extends unknown> {\n  src: Minipass<T>\n  dest: Minipass<any, T>\n  opts: PipeOptions\n  ondrain: () => any\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    this.src = src\n    this.dest = dest as Minipass<any, T>\n    this.opts = opts\n    this.ondrain = () => src[RESUME]()\n    this.dest.on('drain', this.ondrain)\n  }\n  unpipe() {\n    this.dest.removeListener('drain', this.ondrain)\n  }\n  // only here for the prototype\n  /* c8 ignore start */\n  proxyErrors(_er: any) {}\n  /* c8 ignore stop */\n  end() {\n    this.unpipe()\n    if (this.opts.end) this.dest.end()\n  }\n}\n\n/**\n * Internal class representing a pipe to a destination stream where\n * errors are proxied.\n *\n * @internal\n */\nclass PipeProxyErrors<T> extends Pipe<T> {\n  unpipe() {\n    this.src.removeListener('error', this.proxyErrors)\n    super.unpipe()\n  }\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    super(src, dest, opts)\n    this.proxyErrors = er => dest.emit('error', er)\n    src.on('error', this.proxyErrors)\n  }\n}\n\nexport namespace Minipass {\n  /**\n   * Encoding used to create a stream that outputs strings rather than\n   * Buffer objects.\n   */\n  export type Encoding = BufferEncoding | 'buffer' | null\n\n  /**\n   * Any stream that Minipass can pipe into\n   */\n  export type Writable =\n    | Minipass<any, any, any>\n    | NodeJS.WriteStream\n    | (NodeJS.WriteStream & { fd: number })\n    | (EventEmitter & {\n        end(): any\n        write(chunk: any, ...args: any[]): any\n      })\n\n  /**\n   * Any stream that can be read from\n   */\n  export type Readable =\n    | Minipass<any, any, any>\n    | NodeJS.ReadStream\n    | (NodeJS.ReadStream & { fd: number })\n    | (EventEmitter & {\n        pause(): any\n        resume(): any\n        pipe(...destArgs: any[]): any\n      })\n\n  /**\n   * Utility type that can be iterated sync or async\n   */\n  export type DualIterable<T> = Iterable<T> & AsyncIterable<T>\n\n  type EventArguments = Record<string | symbol, unknown[]>\n\n  /**\n   * The listing of events that a Minipass class can emit.\n   * Extend this when extending the Minipass class, and pass as\n   * the third template argument.  The key is the name of the event,\n   * and the value is the argument list.\n   *\n   * Any undeclared events will still be allowed, but the handler will get\n   * arguments as `unknown[]`.\n   */\n  export interface Events<RType extends any = Buffer>\n    extends EventArguments {\n    readable: []\n    data: [chunk: RType]\n    error: [er: unknown]\n    abort: [reason: unknown]\n    drain: []\n    resume: []\n    end: []\n    finish: []\n    prefinish: []\n    close: []\n    [DESTROYED]: [er?: unknown]\n    [ERROR]: [er: unknown]\n  }\n\n  /**\n   * String or buffer-like data that can be joined and sliced\n   */\n  export type ContiguousData =\n    | Buffer\n    | ArrayBufferLike\n    | ArrayBufferView\n    | string\n  export type BufferOrString = Buffer | string\n\n  /**\n   * Options passed to the Minipass constructor.\n   */\n  export type SharedOptions = {\n    /**\n     * Defer all data emission and other events until the end of the\n     * current tick, similar to Node core streams\n     */\n    async?: boolean\n    /**\n     * A signal which will abort the stream\n     */\n    signal?: AbortSignal\n    /**\n     * Output string encoding. Set to `null` or `'buffer'` (or omit) to\n     * emit Buffer objects rather than strings.\n     *\n     * Conflicts with `objectMode`\n     */\n    encoding?: BufferEncoding | null | 'buffer'\n    /**\n     * Output data exactly as it was written, supporting non-buffer/string\n     * data (such as arbitrary objects, falsey values, etc.)\n     *\n     * Conflicts with `encoding`\n     */\n    objectMode?: boolean\n  }\n\n  /**\n   * Options for a string encoded output\n   */\n  export type EncodingOptions = SharedOptions & {\n    encoding: BufferEncoding\n    objectMode?: false\n  }\n\n  /**\n   * Options for contiguous data buffer output\n   */\n  export type BufferOptions = SharedOptions & {\n    encoding?: null | 'buffer'\n    objectMode?: false\n  }\n\n  /**\n   * Options for objectMode arbitrary output\n   */\n  export type ObjectModeOptions = SharedOptions & {\n    objectMode: true\n    encoding?: null\n  }\n\n  /**\n   * Utility type to determine allowed options based on read type\n   */\n  export type Options<T> =\n    | ObjectModeOptions\n    | (T extends string\n        ? EncodingOptions\n        : T extends Buffer\n        ? BufferOptions\n        : SharedOptions)\n}\n\nconst isObjectModeOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.ObjectModeOptions => !!o.objectMode\n\nconst isEncodingOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.EncodingOptions =>\n  !o.objectMode && !!o.encoding && o.encoding !== 'buffer'\n\n/**\n * Main export, the Minipass class\n *\n * `RType` is the type of data emitted, defaults to Buffer\n *\n * `WType` is the type of data to be written, if RType is buffer or string,\n * then any {@link Minipass.ContiguousData} is allowed.\n *\n * `Events` is the set of event handler signatures that this object\n * will emit, see {@link Minipass.Events}\n */\nexport class Minipass<\n    RType extends unknown = Buffer,\n    WType extends unknown = RType extends Minipass.BufferOrString\n      ? Minipass.ContiguousData\n      : RType,\n    Events extends Minipass.Events<RType> = Minipass.Events<RType>\n  >\n  extends EventEmitter\n  implements Minipass.DualIterable<RType>\n{\n  [FLOWING]: boolean = false;\n  [PAUSED]: boolean = false;\n  [PIPES]: Pipe<RType>[] = [];\n  [BUFFER]: RType[] = [];\n  [OBJECTMODE]: boolean;\n  [ENCODING]: BufferEncoding | null;\n  [ASYNC]: boolean;\n  [DECODER]: SD | null;\n  [EOF]: boolean = false;\n  [EMITTED_END]: boolean = false;\n  [EMITTING_END]: boolean = false;\n  [CLOSED]: boolean = false;\n  [EMITTED_ERROR]: unknown = null;\n  [BUFFERLENGTH]: number = 0;\n  [DESTROYED]: boolean = false;\n  [SIGNAL]?: AbortSignal;\n  [ABORTED]: boolean = false;\n  [DATALISTENERS]: number = 0;\n  [DISCARDED]: boolean = false\n\n  /**\n   * true if the stream can be written\n   */\n  writable: boolean = true\n  /**\n   * true if the stream can be read\n   */\n  readable: boolean = true\n\n  /**\n   * If `RType` is Buffer, then options do not need to be provided.\n   * Otherwise, an options object must be provided to specify either\n   * {@link Minipass.SharedOptions.objectMode} or\n   * {@link Minipass.SharedOptions.encoding}, as appropriate.\n   */\n  constructor(\n    ...args:\n      | [Minipass.ObjectModeOptions]\n      | (RType extends Buffer\n          ? [] | [Minipass.Options<RType>]\n          : [Minipass.Options<RType>])\n  ) {\n    const options: Minipass.Options<RType> = (args[0] ||\n      {}) as Minipass.Options<RType>\n    super()\n    if (options.objectMode && typeof options.encoding === 'string') {\n      throw new TypeError(\n        'Encoding and objectMode may not be used together'\n      )\n    }\n    if (isObjectModeOptions(options)) {\n      this[OBJECTMODE] = true\n      this[ENCODING] = null\n    } else if (isEncodingOptions(options)) {\n      this[ENCODING] = options.encoding\n      this[OBJECTMODE] = false\n    } else {\n      this[OBJECTMODE] = false\n      this[ENCODING] = null\n    }\n    this[ASYNC] = !!options.async\n    this[DECODER] = this[ENCODING]\n      ? (new StringDecoder(this[ENCODING]) as SD)\n      : null\n\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposeBuffer === true) {\n      Object.defineProperty(this, 'buffer', { get: () => this[BUFFER] })\n    }\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposePipes === true) {\n      Object.defineProperty(this, 'pipes', { get: () => this[PIPES] })\n    }\n\n    const { signal } = options\n    if (signal) {\n      this[SIGNAL] = signal\n      if (signal.aborted) {\n        this[ABORT]()\n      } else {\n        signal.addEventListener('abort', () => this[ABORT]())\n      }\n    }\n  }\n\n  /**\n   * The amount of data stored in the buffer waiting to be read.\n   *\n   * For Buffer strings, this will be the total byte length.\n   * For string encoding streams, this will be the string character length,\n   * according to JavaScript's `string.length` logic.\n   * For objectMode streams, this is a count of the items waiting to be\n   * emitted.\n   */\n  get bufferLength() {\n    return this[BUFFERLENGTH]\n  }\n\n  /**\n   * The `BufferEncoding` currently in use, or `null`\n   */\n  get encoding() {\n    return this[ENCODING]\n  }\n\n  /**\n   * @deprecated - This is a read only property\n   */\n  set encoding(_enc) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * @deprecated - Encoding may only be set at instantiation time\n   */\n  setEncoding(_enc: Minipass.Encoding) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * True if this is an objectMode stream\n   */\n  get objectMode() {\n    return this[OBJECTMODE]\n  }\n\n  /**\n   * @deprecated - This is a read-only property\n   */\n  set objectMode(_om) {\n    throw new Error('objectMode must be set at instantiation time')\n  }\n\n  /**\n   * true if this is an async stream\n   */\n  get ['async'](): boolean {\n    return this[ASYNC]\n  }\n  /**\n   * Set to true to make this stream async.\n   *\n   * Once set, it cannot be unset, as this would potentially cause incorrect\n   * behavior.  Ie, a sync stream can be made async, but an async stream\n   * cannot be safely made sync.\n   */\n  set ['async'](a: boolean) {\n    this[ASYNC] = this[ASYNC] || !!a\n  }\n\n  // drop everything and get out of the flow completely\n  [ABORT]() {\n    this[ABORTED] = true\n    this.emit('abort', this[SIGNAL]?.reason)\n    this.destroy(this[SIGNAL]?.reason)\n  }\n\n  /**\n   * True if the stream has been aborted.\n   */\n  get aborted() {\n    return this[ABORTED]\n  }\n  /**\n   * No-op setter. Stream aborted status is set via the AbortSignal provided\n   * in the constructor options.\n   */\n  set aborted(_) {}\n\n  /**\n   * Write data into the stream\n   *\n   * If the chunk written is a string, and encoding is not specified, then\n   * `utf8` will be assumed. If the stream encoding matches the encoding of\n   * a written string, and the state of the string decoder allows it, then\n   * the string will be passed through to either the output or the internal\n   * buffer without any processing. Otherwise, it will be turned into a\n   * Buffer object for processing into the desired encoding.\n   *\n   * If provided, `cb` function is called immediately before return for\n   * sync streams, or on next tick for async streams, because for this\n   * base class, a chunk is considered \"processed\" once it is accepted\n   * and either emitted or buffered. That is, the callback does not indicate\n   * that the chunk has been eventually emitted, though of course child\n   * classes can override this function to do whatever processing is required\n   * and call `super.write(...)` only once processing is completed.\n   */\n  write(chunk: WType, cb?: () => void): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding,\n    cb?: () => void\n  ): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): boolean {\n    if (this[ABORTED]) return false\n    if (this[EOF]) throw new Error('write after end')\n\n    if (this[DESTROYED]) {\n      this.emit(\n        'error',\n        Object.assign(\n          new Error('Cannot call write after a stream was destroyed'),\n          { code: 'ERR_STREAM_DESTROYED' }\n        )\n      )\n      return true\n    }\n\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    const fn = this[ASYNC] ? defer : nodefer\n\n    // convert array buffers and typed array views into buffers\n    // at some point in the future, we may want to do the opposite!\n    // leave strings and buffers as-is\n    // anything is only allowed if in object mode, so throw\n    if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n      if (isArrayBufferView(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(\n          chunk.buffer,\n          chunk.byteOffset,\n          chunk.byteLength\n        )\n      } else if (isArrayBufferLike(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(chunk)\n      } else if (typeof chunk !== 'string') {\n        throw new Error(\n          'Non-contiguous data written to non-objectMode stream'\n        )\n      }\n    }\n\n    // handle object mode up front, since it's simpler\n    // this yields better performance, fewer checks later.\n    if (this[OBJECTMODE]) {\n      // maybe impossible?\n      /* c8 ignore start */\n      if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n      /* c8 ignore stop */\n\n      if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n      else this[BUFFERPUSH](chunk as unknown as RType)\n\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n      if (cb) fn(cb)\n\n      return this[FLOWING]\n    }\n\n    // at this point the chunk is a buffer or string\n    // don't buffer it up or send it to the decoder\n    if (!(chunk as Minipass.BufferOrString).length) {\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n      if (cb) fn(cb)\n      return this[FLOWING]\n    }\n\n    // fast-path writing strings of same encoding to a stream with\n    // an empty buffer, skipping the buffer/decoder dance\n    if (\n      typeof chunk === 'string' &&\n      // unless it is a string already ready for us to use\n      !(encoding === this[ENCODING] && !this[DECODER]?.lastNeed)\n    ) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = Buffer.from(chunk, encoding)\n    }\n\n    if (Buffer.isBuffer(chunk) && this[ENCODING]) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = this[DECODER].write(chunk)\n    }\n\n    // Note: flushing CAN potentially switch us into not-flowing mode\n    if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n\n    if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n    else this[BUFFERPUSH](chunk as unknown as RType)\n\n    if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n    if (cb) fn(cb)\n\n    return this[FLOWING]\n  }\n\n  /**\n   * Low-level explicit read method.\n   *\n   * In objectMode, the argument is ignored, and one item is returned if\n   * available.\n   *\n   * `n` is the number of bytes (or in the case of encoding streams,\n   * characters) to consume. If `n` is not provided, then the entire buffer\n   * is returned, or `null` is returned if no data is available.\n   *\n   * If `n` is greater that the amount of data in the internal buffer,\n   * then `null` is returned.\n   */\n  read(n?: number | null): RType | null {\n    if (this[DESTROYED]) return null\n    this[DISCARDED] = false\n\n    if (\n      this[BUFFERLENGTH] === 0 ||\n      n === 0 ||\n      (n && n > this[BUFFERLENGTH])\n    ) {\n      this[MAYBE_EMIT_END]()\n      return null\n    }\n\n    if (this[OBJECTMODE]) n = null\n\n    if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {\n      // not object mode, so if we have an encoding, then RType is string\n      // otherwise, must be Buffer\n      this[BUFFER] = [\n        (this[ENCODING]\n          ? this[BUFFER].join('')\n          : Buffer.concat(\n              this[BUFFER] as Buffer[],\n              this[BUFFERLENGTH]\n            )) as RType,\n      ]\n    }\n\n    const ret = this[READ](n || null, this[BUFFER][0] as RType)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [READ](n: number | null, chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERSHIFT]()\n    else {\n      const c = chunk as Minipass.BufferOrString\n      if (n === c.length || n === null) this[BUFFERSHIFT]()\n      else if (typeof c === 'string') {\n        this[BUFFER][0] = c.slice(n) as RType\n        chunk = c.slice(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      } else {\n        this[BUFFER][0] = c.subarray(n) as RType\n        chunk = c.subarray(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      }\n    }\n\n    this.emit('data', chunk)\n\n    if (!this[BUFFER].length && !this[EOF]) this.emit('drain')\n\n    return chunk\n  }\n\n  /**\n   * End the stream, optionally providing a final write.\n   *\n   * See {@link Minipass#write} for argument descriptions\n   */\n  end(cb?: () => void): this\n  end(chunk: WType, cb?: () => void): this\n  end(chunk: WType, encoding?: Minipass.Encoding, cb?: () => void): this\n  end(\n    chunk?: WType | (() => void),\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): this {\n    if (typeof chunk === 'function') {\n      cb = chunk as () => void\n      chunk = undefined\n    }\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n    if (chunk !== undefined) this.write(chunk, encoding)\n    if (cb) this.once('end', cb)\n    this[EOF] = true\n    this.writable = false\n\n    // if we haven't written anything, then go ahead and emit,\n    // even if we're not reading.\n    // we'll re-emit if a new 'end' listener is added anyway.\n    // This makes MP more suitable to write-only use cases.\n    if (this[FLOWING] || !this[PAUSED]) this[MAYBE_EMIT_END]()\n    return this\n  }\n\n  // don't let the internal resume be overwritten\n  [RESUME]() {\n    if (this[DESTROYED]) return\n\n    if (!this[DATALISTENERS] && !this[PIPES].length) {\n      this[DISCARDED] = true\n    }\n    this[PAUSED] = false\n    this[FLOWING] = true\n    this.emit('resume')\n    if (this[BUFFER].length) this[FLUSH]()\n    else if (this[EOF]) this[MAYBE_EMIT_END]()\n    else this.emit('drain')\n  }\n\n  /**\n   * Resume the stream if it is currently in a paused state\n   *\n   * If called when there are no pipe destinations or `data` event listeners,\n   * this will place the stream in a \"discarded\" state, where all data will\n   * be thrown away. The discarded state is removed if a pipe destination or\n   * data handler is added, if pause() is called, or if any synchronous or\n   * asynchronous iteration is started.\n   */\n  resume() {\n    return this[RESUME]()\n  }\n\n  /**\n   * Pause the stream\n   */\n  pause() {\n    this[FLOWING] = false\n    this[PAUSED] = true\n    this[DISCARDED] = false\n  }\n\n  /**\n   * true if the stream has been forcibly destroyed\n   */\n  get destroyed() {\n    return this[DESTROYED]\n  }\n\n  /**\n   * true if the stream is currently in a flowing state, meaning that\n   * any writes will be immediately emitted.\n   */\n  get flowing() {\n    return this[FLOWING]\n  }\n\n  /**\n   * true if the stream is currently in a paused state\n   */\n  get paused() {\n    return this[PAUSED]\n  }\n\n  [BUFFERPUSH](chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] += 1\n    else this[BUFFERLENGTH] += (chunk as Minipass.BufferOrString).length\n    this[BUFFER].push(chunk)\n  }\n\n  [BUFFERSHIFT](): RType {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] -= 1\n    else\n      this[BUFFERLENGTH] -= (\n        this[BUFFER][0] as Minipass.BufferOrString\n      ).length\n    return this[BUFFER].shift() as RType\n  }\n\n  [FLUSH](noDrain: boolean = false) {\n    do {} while (\n      this[FLUSHCHUNK](this[BUFFERSHIFT]()) &&\n      this[BUFFER].length\n    )\n\n    if (!noDrain && !this[BUFFER].length && !this[EOF]) this.emit('drain')\n  }\n\n  [FLUSHCHUNK](chunk: RType) {\n    this.emit('data', chunk)\n    return this[FLOWING]\n  }\n\n  /**\n   * Pipe all data emitted by this stream into the destination provided.\n   *\n   * Triggers the flow of data.\n   */\n  pipe<W extends Minipass.Writable>(dest: W, opts?: PipeOptions): W {\n    if (this[DESTROYED]) return dest\n    this[DISCARDED] = false\n\n    const ended = this[EMITTED_END]\n    opts = opts || {}\n    if (dest === proc.stdout || dest === proc.stderr) opts.end = false\n    else opts.end = opts.end !== false\n    opts.proxyErrors = !!opts.proxyErrors\n\n    // piping an ended stream ends immediately\n    if (ended) {\n      if (opts.end) dest.end()\n    } else {\n      // \"as\" here just ignores the WType, which pipes don't care about,\n      // since they're only consuming from us, and writing to the dest\n      this[PIPES].push(\n        !opts.proxyErrors\n          ? new Pipe<RType>(this as Minipass<RType>, dest, opts)\n          : new PipeProxyErrors<RType>(this as Minipass<RType>, dest, opts)\n      )\n      if (this[ASYNC]) defer(() => this[RESUME]())\n      else this[RESUME]()\n    }\n\n    return dest\n  }\n\n  /**\n   * Fully unhook a piped destination stream.\n   *\n   * If the destination stream was the only consumer of this stream (ie,\n   * there are no other piped destinations or `'data'` event listeners)\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  unpipe<W extends Minipass.Writable>(dest: W) {\n    const p = this[PIPES].find(p => p.dest === dest)\n    if (p) {\n      if (this[PIPES].length === 1) {\n        if (this[FLOWING] && this[DATALISTENERS] === 0) {\n          this[FLOWING] = false\n        }\n        this[PIPES] = []\n      } else this[PIPES].splice(this[PIPES].indexOf(p), 1)\n      p.unpipe()\n    }\n  }\n\n  /**\n   * Alias for {@link Minipass#on}\n   */\n  addListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    return this.on(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.on`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * - Adding a 'data' event handler will trigger the flow of data\n   *\n   * - Adding a 'readable' event handler when there is data waiting to be read\n   *   will cause 'readable' to be emitted immediately.\n   *\n   * - Adding an 'endish' event handler ('end', 'finish', etc.) which has\n   *   already passed will cause the event to be emitted immediately and all\n   *   handlers removed.\n   *\n   * - Adding an 'error' event handler after an error has been emitted will\n   *   cause the event to be re-emitted immediately with the error previously\n   *   raised.\n   */\n  on<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    const ret = super.on(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    if (ev === 'data') {\n      this[DISCARDED] = false\n      this[DATALISTENERS]++\n      if (!this[PIPES].length && !this[FLOWING]) {\n        this[RESUME]()\n      }\n    } else if (ev === 'readable' && this[BUFFERLENGTH] !== 0) {\n      super.emit('readable')\n    } else if (isEndish(ev) && this[EMITTED_END]) {\n      super.emit(ev)\n      this.removeAllListeners(ev)\n    } else if (ev === 'error' && this[EMITTED_ERROR]) {\n      const h = handler as (...a: Events['error']) => any\n      if (this[ASYNC]) defer(() => h.call(this, this[EMITTED_ERROR]))\n      else h.call(this, this[EMITTED_ERROR])\n    }\n    return ret\n  }\n\n  /**\n   * Alias for {@link Minipass#off}\n   */\n  removeListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    return this.off(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.off`\n   *\n   * If a 'data' event handler is removed, and it was the last consumer\n   * (ie, there are no pipe destinations or other 'data' event listeners),\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  off<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    const ret = super.off(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    // if we previously had listeners, and now we don't, and we don't\n    // have any pipes, then stop the flow, unless it's been explicitly\n    // put in a discarded flowing state via stream.resume().\n    if (ev === 'data') {\n      this[DATALISTENERS] = this.listeners('data').length\n      if (\n        this[DATALISTENERS] === 0 &&\n        !this[DISCARDED] &&\n        !this[PIPES].length\n      ) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.removeAllListeners`\n   *\n   * If all 'data' event handlers are removed, and they were the last consumer\n   * (ie, there are no pipe destinations), then the flow of data will stop\n   * until there is another consumer or {@link Minipass#resume} is explicitly\n   * called.\n   */\n  removeAllListeners<Event extends keyof Events>(ev?: Event) {\n    const ret = super.removeAllListeners(ev as string | symbol | undefined)\n    if (ev === 'data' || ev === undefined) {\n      this[DATALISTENERS] = 0\n      if (!this[DISCARDED] && !this[PIPES].length) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * true if the 'end' event has been emitted\n   */\n  get emittedEnd() {\n    return this[EMITTED_END]\n  }\n\n  [MAYBE_EMIT_END]() {\n    if (\n      !this[EMITTING_END] &&\n      !this[EMITTED_END] &&\n      !this[DESTROYED] &&\n      this[BUFFER].length === 0 &&\n      this[EOF]\n    ) {\n      this[EMITTING_END] = true\n      this.emit('end')\n      this.emit('prefinish')\n      this.emit('finish')\n      if (this[CLOSED]) this.emit('close')\n      this[EMITTING_END] = false\n    }\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.emit`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * If the stream has been destroyed, and the event is something other\n   * than 'close' or 'error', then `false` is returned and no handlers\n   * are called.\n   *\n   * If the event is 'end', and has already been emitted, then the event\n   * is ignored. If the stream is in a paused or non-flowing state, then\n   * the event will be deferred until data flow resumes. If the stream is\n   * async, then handlers will be called on the next tick rather than\n   * immediately.\n   *\n   * If the event is 'close', and 'end' has not yet been emitted, then\n   * the event will be deferred until after 'end' is emitted.\n   *\n   * If the event is 'error', and an AbortSignal was provided for the stream,\n   * and there are no listeners, then the event is ignored, matching the\n   * behavior of node core streams in the presense of an AbortSignal.\n   *\n   * If the event is 'finish' or 'prefinish', then all listeners will be\n   * removed after emitting the event, to prevent double-firing.\n   */\n  emit<Event extends keyof Events>(\n    ev: Event,\n    ...args: Events[Event]\n  ): boolean {\n    const data = args[0]\n    // error and close are only events allowed after calling destroy()\n    if (\n      ev !== 'error' &&\n      ev !== 'close' &&\n      ev !== DESTROYED &&\n      this[DESTROYED]\n    ) {\n      return false\n    } else if (ev === 'data') {\n      return !this[OBJECTMODE] && !data\n        ? false\n        : this[ASYNC]\n        ? (defer(() => this[EMITDATA](data as RType)), true)\n        : this[EMITDATA](data as RType)\n    } else if (ev === 'end') {\n      return this[EMITEND]()\n    } else if (ev === 'close') {\n      this[CLOSED] = true\n      // don't emit close before 'end' and 'finish'\n      if (!this[EMITTED_END] && !this[DESTROYED]) return false\n      const ret = super.emit('close')\n      this.removeAllListeners('close')\n      return ret\n    } else if (ev === 'error') {\n      this[EMITTED_ERROR] = data\n      super.emit(ERROR, data)\n      const ret =\n        !this[SIGNAL] || this.listeners('error').length\n          ? super.emit('error', data)\n          : false\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'resume') {\n      const ret = super.emit('resume')\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'finish' || ev === 'prefinish') {\n      const ret = super.emit(ev)\n      this.removeAllListeners(ev)\n      return ret\n    }\n\n    // Some other unknown event\n    const ret = super.emit(ev as string, ...args)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITDATA](data: RType) {\n    for (const p of this[PIPES]) {\n      if (p.dest.write(data as RType) === false) this.pause()\n    }\n    const ret = this[DISCARDED] ? false : super.emit('data', data)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITEND]() {\n    if (this[EMITTED_END]) return false\n\n    this[EMITTED_END] = true\n    this.readable = false\n    return this[ASYNC]\n      ? (defer(() => this[EMITEND2]()), true)\n      : this[EMITEND2]()\n  }\n\n  [EMITEND2]() {\n    if (this[DECODER]) {\n      const data = this[DECODER].end()\n      if (data) {\n        for (const p of this[PIPES]) {\n          p.dest.write(data as RType)\n        }\n        if (!this[DISCARDED]) super.emit('data', data)\n      }\n    }\n\n    for (const p of this[PIPES]) {\n      p.end()\n    }\n    const ret = super.emit('end')\n    this.removeAllListeners('end')\n    return ret\n  }\n\n  /**\n   * Return a Promise that resolves to an array of all emitted data once\n   * the stream ends.\n   */\n  async collect(): Promise<RType[] & { dataLength: number }> {\n    const buf: RType[] & { dataLength: number } = Object.assign([], {\n      dataLength: 0,\n    })\n    if (!this[OBJECTMODE]) buf.dataLength = 0\n    // set the promise first, in case an error is raised\n    // by triggering the flow here.\n    const p = this.promise()\n    this.on('data', c => {\n      buf.push(c)\n      if (!this[OBJECTMODE])\n        buf.dataLength += (c as Minipass.BufferOrString).length\n    })\n    await p\n    return buf\n  }\n\n  /**\n   * Return a Promise that resolves to the concatenation of all emitted data\n   * once the stream ends.\n   *\n   * Not allowed on objectMode streams.\n   */\n  async concat(): Promise<RType> {\n    if (this[OBJECTMODE]) {\n      throw new Error('cannot concat in objectMode')\n    }\n    const buf = await this.collect()\n    return (\n      this[ENCODING]\n        ? buf.join('')\n        : Buffer.concat(buf as Buffer[], buf.dataLength)\n    ) as RType\n  }\n\n  /**\n   * Return a void Promise that resolves once the stream ends.\n   */\n  async promise(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.on(DESTROYED, () => reject(new Error('stream destroyed')))\n      this.on('error', er => reject(er))\n      this.on('end', () => resolve())\n    })\n  }\n\n  /**\n   * Asynchronous `for await of` iteration.\n   *\n   * This will continue emitting all chunks until the stream terminates.\n   */\n  [Symbol.asyncIterator](): AsyncGenerator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = async (): Promise<IteratorReturnResult<void>> => {\n      this.pause()\n      stopped = true\n      return { value: undefined, done: true }\n    }\n    const next = (): Promise<IteratorResult<RType, void>> => {\n      if (stopped) return stop()\n      const res = this.read()\n      if (res !== null) return Promise.resolve({ done: false, value: res })\n\n      if (this[EOF]) return stop()\n\n      let resolve!: (res: IteratorResult<RType>) => void\n      let reject!: (er: unknown) => void\n      const onerr = (er: unknown) => {\n        this.off('data', ondata)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        reject(er)\n      }\n      const ondata = (value: RType) => {\n        this.off('error', onerr)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        this.pause()\n        resolve({ value, done: !!this[EOF] })\n      }\n      const onend = () => {\n        this.off('error', onerr)\n        this.off('data', ondata)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        resolve({ done: true, value: undefined })\n      }\n      const ondestroy = () => onerr(new Error('stream destroyed'))\n      return new Promise<IteratorResult<RType>>((res, rej) => {\n        reject = rej\n        resolve = res\n        this.once(DESTROYED, ondestroy)\n        this.once('error', onerr)\n        this.once('end', onend)\n        this.once('data', ondata)\n      })\n    }\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.asyncIterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Synchronous `for of` iteration.\n   *\n   * The iteration will terminate when the internal buffer runs out, even\n   * if the stream has not yet terminated.\n   */\n  [Symbol.iterator](): Generator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = (): IteratorReturnResult<void> => {\n      this.pause()\n      this.off(ERROR, stop)\n      this.off(DESTROYED, stop)\n      this.off('end', stop)\n      stopped = true\n      return { done: true, value: undefined }\n    }\n\n    const next = (): IteratorResult<RType, void> => {\n      if (stopped) return stop()\n      const value = this.read()\n      return value === null ? stop() : { done: false, value }\n    }\n\n    this.once('end', stop)\n    this.once(ERROR, stop)\n    this.once(DESTROYED, stop)\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.iterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Destroy a stream, preventing it from being used for any further purpose.\n   *\n   * If the stream has a `close()` method, then it will be called on\n   * destruction.\n   *\n   * After destruction, any attempt to write data, read data, or emit most\n   * events will be ignored.\n   *\n   * If an error argument is provided, then it will be emitted in an\n   * 'error' event.\n   */\n  destroy(er?: unknown) {\n    if (this[DESTROYED]) {\n      if (er) this.emit('error', er)\n      else this.emit(DESTROYED)\n      return this\n    }\n\n    this[DESTROYED] = true\n    this[DISCARDED] = true\n\n    // throw away all buffered data, it's never coming out\n    this[BUFFER].length = 0\n    this[BUFFERLENGTH] = 0\n\n    const wc = this as Minipass<RType, WType, Events> & {\n      close?: () => void\n    }\n    if (typeof wc.close === 'function' && !this[CLOSED]) wc.close()\n\n    if (er) this.emit('error', er)\n    // if no error to emit, still reject pending promises\n    else this.emit(DESTROYED)\n\n    return this\n  }\n\n  /**\n   * Alias for {@link isStream}\n   *\n   * Former export location, maintained for backwards compatibility.\n   *\n   * @deprecated\n   */\n  static get isStream() {\n    return isStream\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/lru-cache@10.4.3/node_modules/lru-cache/dist/esm/index.js":{"lineLengths":[3,19,3,47,18,41,17,11,25,21,74,21,46,45,50,53,2,36,32,21,32,16,28,16,22,15,24,33,35,9,6,16,32,23,29,9,26,23,36,23,24,40,24,39,24,52,27,13,42,9,6,82,34,36,19,39,78,67,71,75,81,81,133,6,1,20,47,28,73,21,40,70,71,71,72,55,27,56,44,10,27,20,32,25,36,29,48,31,27,20,31,23,20,21,5,1,13,9,11,26,33,24,42,21,22,35,42,36,17,5,31,29,35,75,9,28,37,24,5,13,37,5,11,40,5,1,3,61,2,74,72,38,2,57,2,71,76,78,2,77,3,23,54,9,13,13,18,17,16,7,39,7,8,7,49,7,18,7,48,7,17,7,50,7,19,7,50,7,19,7,46,7,15,7,50,7,19,7,47,7,16,7,48,7,17,7,51,7,20,7,60,7,29,7,54,7,23,7,58,7,27,7,62,7,31,7,52,7,21,26,10,20,12,13,13,10,10,10,10,10,14,11,12,10,16,20,21,7,61,65,65,6,45,6,16,7,37,16,25,30,26,28,30,32,32,26,26,24,31,14,24,31,14,26,22,62,108,56,54,56,50,10,5,34,7,51,7,15,25,5,7,55,7,19,29,5,7,64,7,26,36,5,7,58,7,16,26,5,7,59,7,23,33,5,22,32,5,7,55,7,19,29,5,7,60,7,24,34,5,26,360,42,76,9,58,25,57,9,24,32,58,47,35,55,106,13,61,75,13,9,39,47,76,9,38,40,48,79,9,40,45,33,55,55,40,40,23,23,39,23,33,44,36,9,49,46,32,9,14,43,39,9,43,53,47,41,67,71,63,51,57,38,38,47,91,17,13,47,92,13,43,9,39,55,47,47,28,58,31,20,43,28,23,38,83,13,42,9,51,71,84,9,65,47,35,33,86,62,74,13,9,5,7,79,81,7,26,52,5,30,46,48,26,30,64,50,30,49,44,47,69,21,28,57,37,30,30,17,36,13,10,40,63,10,46,30,40,44,36,35,27,33,37,51,47,48,13,10,66,39,26,30,33,41,30,80,49,37,30,30,17,36,13,21,10,39,48,38,25,13,36,40,33,32,13,56,29,10,34,36,34,65,10,5,55,31,27,28,24,27,31,47,33,28,41,49,29,10,62,55,66,45,25,13,34,38,64,82,21,49,42,104,21,17,22,91,82,48,17,13,24,10,54,32,32,61,56,38,17,13,49,25,40,66,13,10,5,32,40,55,38,100,9,17,6,54,25,45,45,26,17,54,28,17,39,26,17,22,38,17,13,9,5,55,25,45,45,26,17,54,28,17,39,26,17,22,38,17,13,9,5,26,38,62,5,7,56,63,7,16,42,49,49,61,59,13,9,5,7,56,6,56,63,7,17,43,49,49,61,59,13,9,5,7,57,63,7,13,42,39,34,61,24,13,9,5,7,53,6,57,63,7,14,43,39,34,61,24,13,9,5,7,59,63,7,15,42,39,34,61,39,13,9,5,7,55,6,59,63,7,16,43,39,34,61,39,13,9,5,7,65,31,7,25,30,5,7,72,62,35,7,38,7,76,74,7,31,42,39,52,40,20,36,25,52,62,13,9,5,7,79,44,6,49,6,79,74,6,75,7,31,42,39,52,40,20,36,25,58,9,5,7,74,78,7,32,43,39,52,40,20,36,25,58,9,5,7,70,23,7,18,28,63,35,57,31,13,9,23,5,7,77,78,6,81,80,74,6,78,80,19,7,15,40,28,29,35,48,36,16,32,29,32,41,38,42,31,58,35,41,13,9,26,40,9,21,5,7,75,40,6,76,59,6,63,56,6,77,28,7,12,23,62,41,39,52,40,20,57,25,36,45,42,73,76,57,59,13,30,44,13,38,9,19,5,7,76,6,80,31,6,77,72,7,15,21,41,30,75,77,77,31,18,76,53,47,13,46,9,5,7,32,6,73,30,6,76,74,40,6,69,70,72,27,6,65,72,69,63,18,6,71,70,26,6,44,6,61,69,7,32,30,27,24,9,140,60,84,53,53,60,25,36,51,13,66,35,24,9,71,34,23,37,28,41,38,46,44,38,37,37,39,43,43,31,25,51,23,35,32,9,14,21,36,48,31,78,74,63,61,47,57,25,52,64,25,21,17,43,43,58,21,48,65,21,17,44,55,41,29,43,78,53,33,47,51,17,13,30,38,13,9,39,42,9,25,31,52,13,23,47,9,73,38,21,42,46,13,9,20,5,7,65,37,7,11,13,32,54,34,51,51,56,21,17,45,31,17,13,9,17,58,42,25,46,50,17,13,9,5,18,32,38,38,65,60,9,61,35,47,13,40,54,13,9,35,67,19,44,44,34,9,31,40,34,9,14,42,9,31,21,20,5,7,75,76,20,6,70,80,58,6,81,77,57,6,38,58,7,29,76,42,34,43,45,55,29,13,40,37,47,17,29,39,51,17,28,13,30,37,47,13,9,26,32,9,21,5,7,75,13,6,55,54,7,31,61,42,34,52,19,9,39,76,71,5,50,73,41,21,9,28,35,65,74,30,11,27,30,20,20,10,48,42,76,33,46,55,65,36,64,17,22,56,17,13,58,51,13,81,25,45,38,50,71,21,26,49,21,17,22,39,59,54,17,13,21,10,28,33,52,47,13,33,10,35,42,80,87,76,25,45,85,86,79,26,45,17,46,72,72,71,73,67,17,13,29,78,56,17,47,13,44,25,13,10,37,61,48,73,13,58,58,43,55,48,53,35,69,57,47,21,17,15,10,27,50,50,37,34,36,34,11,34,45,73,40,9,14,38,9,18,5,27,34,25,20,22,35,55,47,5,39,16,22,122,22,144,34,288,36,23,37,32,27,31,35,23,15,9,25,23,27,31,16,27,17,28,24,37,39,35,29,19,19,10,40,34,23,38,72,38,9,14,47,43,45,81,29,46,30,52,17,75,13,79,76,49,44,27,41,40,37,47,17,27,51,25,13,77,33,72,66,52,25,61,40,48,13,74,9,5,44,52,28,58,17,5,31,44,26,69,9,66,39,45,21,37,20,20,11,33,18,5,7,74,19,6,62,7,29,153,42,34,47,60,23,47,39,27,41,67,32,46,50,21,45,52,58,17,22,33,37,67,52,21,79,17,13,18,27,39,80,81,82,84,53,31,54,17,40,37,47,17,29,13,9,26,32,9,5,20,26,26,5,24,41,44,15,69,50,29,29,23,35,39,47,13,18,68,13,45,31,9,5,7,38,6,60,7,15,41,5,24,28,31,46,38,31,39,40,17,22,48,51,53,72,21,73,47,58,25,52,65,25,21,43,53,53,47,55,21,52,55,21,26,53,59,53,59,21,33,43,17,13,9,62,38,21,42,46,13,9,23,5,7,58,7,13,37,5,20,67,43,45,64,13,18,47,39,50,17,44,57,17,13,9,29,38,38,41,31,33,9,26,32,9,23,23,30,33,23,54,38,21,42,46,13,9,5,1,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/lru-cache@10.4.3/node_modules/lru-cache/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @module LRUCache\n */\n\n// module-private names and types\ntype Perf = { now: () => number }\nconst perf: Perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst warned = new Set<string>()\n\n// either a function or a class\ntype ForC = ((...a: any[]) => any) | { new (...a: any[]): any }\n\n/* c8 ignore start */\nconst PROCESS = (\n  typeof process === 'object' && !!process ? process : {}\n) as { [k: string]: any }\n/* c8 ignore start */\n\nconst emitWarning = (\n  msg: string,\n  type: string,\n  code: string,\n  fn: ForC\n) => {\n  typeof PROCESS.emitWarning === 'function'\n    ? PROCESS.emitWarning(msg, type, code, fn)\n    : console.error(`[${code}] ${type}: ${msg}`)\n}\n\nlet AC = globalThis.AbortController\nlet AS = globalThis.AbortSignal\n\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n  //@ts-ignore\n  AS = class AbortSignal {\n    onabort?: (...a: any[]) => any\n    _onabort: ((...a: any[]) => any)[] = []\n    reason?: any\n    aborted: boolean = false\n    addEventListener(_: string, fn: (...a: any[]) => any) {\n      this._onabort.push(fn)\n    }\n  }\n  //@ts-ignore\n  AC = class AbortController {\n    constructor() {\n      warnACPolyfill()\n    }\n    signal = new AS()\n    abort(reason: any) {\n      if (this.signal.aborted) return\n      //@ts-ignore\n      this.signal.reason = reason\n      //@ts-ignore\n      this.signal.aborted = true\n      //@ts-ignore\n      for (const fn of this.signal._onabort) {\n        fn(reason)\n      }\n      this.signal.onabort?.(reason)\n    }\n  }\n  let printACPolyfillWarning =\n    PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1'\n  const warnACPolyfill = () => {\n    if (!printACPolyfillWarning) return\n    printACPolyfillWarning = false\n    emitWarning(\n      'AbortController is not defined. If using lru-cache in ' +\n        'node 14, load an AbortController polyfill from the ' +\n        '`node-abort-controller` package. A minimal polyfill is ' +\n        'provided for use by LRUCache.fetch(), but it should not be ' +\n        'relied upon in other contexts (eg, passing it to other APIs that ' +\n        'use AbortController/AbortSignal might have undesirable effects). ' +\n        'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.',\n      'NO_ABORT_CONTROLLER',\n      'ENOTSUP',\n      warnACPolyfill\n    )\n  }\n}\n/* c8 ignore stop */\n\nconst shouldWarn = (code: string) => !warned.has(code)\n\nconst TYPE = Symbol('type')\nexport type PosInt = number & { [TYPE]: 'Positive Integer' }\nexport type Index = number & { [TYPE]: 'LRUCache Index' }\n\nconst isPosInt = (n: any): n is PosInt =>\n  n && n === Math.floor(n) && n > 0 && isFinite(n)\n\nexport type UintArray = Uint8Array | Uint16Array | Uint32Array\nexport type NumberArray = UintArray | number[]\n\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max: number) =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n/* c8 ignore stop */\n\nclass ZeroArray extends Array<number> {\n  constructor(size: number) {\n    super(size)\n    this.fill(0)\n  }\n}\nexport type { ZeroArray }\nexport type { Stack }\n\nexport type StackLike = Stack | Index[]\nclass Stack {\n  heap: NumberArray\n  length: number\n  // private constructor\n  static #constructing: boolean = false\n  static create(max: number): StackLike {\n    const HeapCls = getUintArray(max)\n    if (!HeapCls) return []\n    Stack.#constructing = true\n    const s = new Stack(max, HeapCls)\n    Stack.#constructing = false\n    return s\n  }\n  constructor(\n    max: number,\n    HeapCls: { new (n: number): NumberArray }\n  ) {\n    /* c8 ignore start */\n    if (!Stack.#constructing) {\n      throw new TypeError('instantiate Stack using Stack.create(n)')\n    }\n    /* c8 ignore stop */\n    this.heap = new HeapCls(max)\n    this.length = 0\n  }\n  push(n: Index) {\n    this.heap[this.length++] = n\n  }\n  pop(): Index {\n    return this.heap[--this.length] as Index\n  }\n}\n\n/**\n * Promise representing an in-progress {@link LRUCache#fetch} call\n */\nexport type BackgroundFetch<V> = Promise<V | undefined> & {\n  __returned: BackgroundFetch<V> | undefined\n  __abortController: AbortController\n  __staleWhileFetching: V | undefined\n}\n\nexport type DisposeTask<K, V> = [\n  value: V,\n  key: K,\n  reason: LRUCache.DisposeReason\n]\n\nexport namespace LRUCache {\n  /**\n   * An integer greater than 0, reflecting the calculated size of items\n   */\n  export type Size = number\n\n  /**\n   * Integer greater than 0, representing some number of milliseconds, or the\n   * time at which a TTL started counting from.\n   */\n  export type Milliseconds = number\n\n  /**\n   * An integer greater than 0, reflecting a number of items\n   */\n  export type Count = number\n\n  /**\n   * The reason why an item was removed from the cache, passed\n   * to the {@link Disposer} methods.\n   *\n   * - `evict`: The item was evicted because it is the least recently used,\n   *   and the cache is full.\n   * - `set`: A new value was set, overwriting the old value being disposed.\n   * - `delete`: The item was explicitly deleted, either by calling\n   *   {@link LRUCache#delete}, {@link LRUCache#clear}, or\n   *   {@link LRUCache#set} with an undefined value.\n   * - `expire`: The item was removed due to exceeding its TTL.\n   * - `fetch`: A {@link OptionsBase#fetchMethod} operation returned\n   *   `undefined` or was aborted, causing the item to be deleted.\n   */\n  export type DisposeReason =\n    | 'evict'\n    | 'set'\n    | 'delete'\n    | 'expire'\n    | 'fetch'\n  /**\n   * A method called upon item removal, passed as the\n   * {@link OptionsBase.dispose} and/or\n   * {@link OptionsBase.disposeAfter} options.\n   */\n  export type Disposer<K, V> = (\n    value: V,\n    key: K,\n    reason: DisposeReason\n  ) => void\n\n  /**\n   * A function that returns the effective calculated size\n   * of an entry in the cache.\n   */\n  export type SizeCalculator<K, V> = (value: V, key: K) => Size\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.fetchMethod} function.\n   */\n  export interface FetcherOptions<K, V, FC = unknown> {\n    signal: AbortSignal\n    options: FetcherFetchOptions<K, V, FC>\n    /**\n     * Object provided in the {@link FetchOptions.context} option to\n     * {@link LRUCache#fetch}\n     */\n    context: FC\n  }\n\n  /**\n   * Occasionally, it may be useful to track the internal behavior of the\n   * cache, particularly for logging, debugging, or for behavior within the\n   * `fetchMethod`. To do this, you can pass a `status` object to the\n   * {@link LRUCache#fetch}, {@link LRUCache#get}, {@link LRUCache#set},\n   * {@link LRUCache#memo}, and {@link LRUCache#has} methods.\n   *\n   * The `status` option should be a plain JavaScript object. The following\n   * fields will be set on it appropriately, depending on the situation.\n   */\n  export interface Status<V> {\n    /**\n     * The status of a set() operation.\n     *\n     * - add: the item was not found in the cache, and was added\n     * - update: the item was in the cache, with the same value provided\n     * - replace: the item was in the cache, and replaced\n     * - miss: the item was not added to the cache for some reason\n     */\n    set?: 'add' | 'update' | 'replace' | 'miss'\n\n    /**\n     * the ttl stored for the item, or undefined if ttls are not used.\n     */\n    ttl?: Milliseconds\n\n    /**\n     * the start time for the item, or undefined if ttls are not used.\n     */\n    start?: Milliseconds\n\n    /**\n     * The timestamp used for TTL calculation\n     */\n    now?: Milliseconds\n\n    /**\n     * the remaining ttl for the item, or undefined if ttls are not used.\n     */\n    remainingTTL?: Milliseconds\n\n    /**\n     * The calculated size for the item, if sizes are used.\n     */\n    entrySize?: Size\n\n    /**\n     * The total calculated size of the cache, if sizes are used.\n     */\n    totalCalculatedSize?: Size\n\n    /**\n     * A flag indicating that the item was not stored, due to exceeding the\n     * {@link OptionsBase.maxEntrySize}\n     */\n    maxEntrySizeExceeded?: true\n\n    /**\n     * The old value, specified in the case of `set:'update'` or\n     * `set:'replace'`\n     */\n    oldValue?: V\n\n    /**\n     * The results of a {@link LRUCache#has} operation\n     *\n     * - hit: the item was found in the cache\n     * - stale: the item was found in the cache, but is stale\n     * - miss: the item was not found in the cache\n     */\n    has?: 'hit' | 'stale' | 'miss'\n\n    /**\n     * The status of a {@link LRUCache#fetch} operation.\n     * Note that this can change as the underlying fetch() moves through\n     * various states.\n     *\n     * - inflight: there is another fetch() for this key which is in process\n     * - get: there is no {@link OptionsBase.fetchMethod}, so\n     *   {@link LRUCache#get} was called.\n     * - miss: the item is not in cache, and will be fetched.\n     * - hit: the item is in the cache, and was resolved immediately.\n     * - stale: the item is in the cache, but stale.\n     * - refresh: the item is in the cache, and not stale, but\n     *   {@link FetchOptions.forceRefresh} was specified.\n     */\n    fetch?: 'get' | 'inflight' | 'miss' | 'hit' | 'stale' | 'refresh'\n\n    /**\n     * The {@link OptionsBase.fetchMethod} was called\n     */\n    fetchDispatched?: true\n\n    /**\n     * The cached value was updated after a successful call to\n     * {@link OptionsBase.fetchMethod}\n     */\n    fetchUpdated?: true\n\n    /**\n     * The reason for a fetch() rejection.  Either the error raised by the\n     * {@link OptionsBase.fetchMethod}, or the reason for an\n     * AbortSignal.\n     */\n    fetchError?: Error\n\n    /**\n     * The fetch received an abort signal\n     */\n    fetchAborted?: true\n\n    /**\n     * The abort signal received was ignored, and the fetch was allowed to\n     * continue.\n     */\n    fetchAbortIgnored?: true\n\n    /**\n     * The fetchMethod promise resolved successfully\n     */\n    fetchResolved?: true\n\n    /**\n     * The fetchMethod promise was rejected\n     */\n    fetchRejected?: true\n\n    /**\n     * The status of a {@link LRUCache#get} operation.\n     *\n     * - fetching: The item is currently being fetched.  If a previous value\n     *   is present and allowed, that will be returned.\n     * - stale: The item is in the cache, and is stale.\n     * - hit: the item is in the cache\n     * - miss: the item is not in the cache\n     */\n    get?: 'stale' | 'hit' | 'miss'\n\n    /**\n     * A fetch or get operation returned a stale value.\n     */\n    returnedStale?: true\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#fetch}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link OptionsBase.noDeleteOnFetchRejection},\n   * {@link OptionsBase.allowStaleOnFetchRejection},\n   * {@link FetchOptions.forceRefresh}, and\n   * {@link FetcherOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.fetchMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the fetchMethod is called.\n   */\n  export interface FetcherFetchOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    status?: Status<V>\n    size?: Size\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#fetch} method.\n   */\n  export interface FetchOptions<K, V, FC>\n    extends FetcherFetchOptions<K, V, FC> {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.fetchMethod} as\n     * the {@link FetcherOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    signal?: AbortSignal\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface FetchOptionsWithContext<K, V, FC>\n    extends FetchOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface FetchOptionsNoContext<K, V>\n    extends FetchOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  export interface MemoOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.memoMethod} as\n     * the {@link MemoizerOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#memo} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface MemoOptionsWithContext<K, V, FC>\n    extends MemoOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#memo} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface MemoOptionsNoContext<K, V>\n    extends MemoOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.memoMethod} function.\n   */\n  export interface MemoizerOptions<K, V, FC = unknown> {\n    options: MemoizerMemoOptions<K, V, FC>\n    /**\n     * Object provided in the {@link MemoOptions.context} option to\n     * {@link LRUCache#memo}\n     */\n    context: FC\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#memo}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link MemoOptions.forceRefresh}, and\n   * {@link MemoerOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.memoMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the memoMethod is called.\n   */\n  export interface MemoizerMemoOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n    > {\n    status?: Status<V>\n    size?: Size\n    start?: Milliseconds\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#has} method.\n   */\n  export interface HasOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'updateAgeOnHas'> {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#get} method.\n   */\n  export interface GetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'allowStale' | 'updateAgeOnGet' | 'noDeleteOnStaleGet'\n    > {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#peek} method.\n   */\n  export interface PeekOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'allowStale'> {}\n\n  /**\n   * Options that may be passed to the {@link LRUCache#set} method.\n   */\n  export interface SetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'sizeCalculation' | 'ttl' | 'noDisposeOnSet' | 'noUpdateTTL'\n    > {\n    /**\n     * If size tracking is enabled, then setting an explicit size\n     * in the {@link LRUCache#set} call will prevent calling the\n     * {@link OptionsBase.sizeCalculation} function.\n     */\n    size?: Size\n    /**\n     * If TTL tracking is enabled, then setting an explicit start\n     * time in the {@link LRUCache#set} call will override the\n     * default time from `performance.now()` or `Date.now()`.\n     *\n     * Note that it must be a valid value for whichever time-tracking\n     * method is in use.\n     */\n    start?: Milliseconds\n    status?: Status<V>\n  }\n\n  /**\n   * The type signature for the {@link OptionsBase.fetchMethod} option.\n   */\n  export type Fetcher<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: FetcherOptions<K, V, FC>\n  ) => Promise<V | undefined | void> | V | undefined | void\n\n  /**\n   * the type signature for the {@link OptionsBase.memoMethod} option.\n   */\n  export type Memoizer<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: MemoizerOptions<K, V, FC>\n  ) => V\n\n  /**\n   * Options which may be passed to the {@link LRUCache} constructor.\n   *\n   * Most of these may be overridden in the various options that use\n   * them.\n   *\n   * Despite all being technically optional, the constructor requires that\n   * a cache is at minimum limited by one or more of {@link OptionsBase.max},\n   * {@link OptionsBase.ttl}, or {@link OptionsBase.maxSize}.\n   *\n   * If {@link OptionsBase.ttl} is used alone, then it is strongly advised\n   * (and in fact required by the type definitions here) that the cache\n   * also set {@link OptionsBase.ttlAutopurge}, to prevent potentially\n   * unbounded storage.\n   *\n   * All options are also available on the {@link LRUCache} instance, making\n   * it safe to pass an LRUCache instance as the options argumemnt to\n   * make another empty cache of the same type.\n   *\n   * Some options are marked as read-only, because changing them after\n   * instantiation is not safe. Changing any of the other options will of\n   * course only have an effect on subsequent method calls.\n   */\n  export interface OptionsBase<K, V, FC> {\n    /**\n     * The maximum number of items to store in the cache before evicting\n     * old entries. This is read-only on the {@link LRUCache} instance,\n     * and may not be overridden.\n     *\n     * If set, then storage space will be pre-allocated at construction\n     * time, and the cache will perform significantly faster.\n     *\n     * Note that significantly fewer items may be stored, if\n     * {@link OptionsBase.maxSize} and/or {@link OptionsBase.ttl} are also\n     * set.\n     *\n     * **It is strongly recommended to set a `max` to prevent unbounded growth\n     * of the cache.**\n     */\n    max?: Count\n\n    /**\n     * Max time in milliseconds for items to live in cache before they are\n     * considered stale.  Note that stale items are NOT preemptively removed by\n     * default, and MAY live in the cache, contributing to its LRU max, long\n     * after they have expired, unless {@link OptionsBase.ttlAutopurge} is\n     * set.\n     *\n     * If set to `0` (the default value), then that means \"do not track\n     * TTL\", not \"expire immediately\".\n     *\n     * Also, as this cache is optimized for LRU/MRU operations, some of\n     * the staleness/TTL checks will reduce performance, as they will incur\n     * overhead by deleting items.\n     *\n     * This is not primarily a TTL cache, and does not make strong TTL\n     * guarantees. There is no pre-emptive pruning of expired items, but you\n     * _may_ set a TTL on the cache, and it will treat expired items as missing\n     * when they are fetched, and delete them.\n     *\n     * Optional, but must be a non-negative integer in ms if specified.\n     *\n     * This may be overridden by passing an options object to `cache.set()`.\n     *\n     * At least one of `max`, `maxSize`, or `TTL` is required. This must be a\n     * positive integer if set.\n     *\n     * Even if ttl tracking is enabled, **it is strongly recommended to set a\n     * `max` to prevent unbounded growth of the cache.**\n     *\n     * If ttl tracking is enabled, and `max` and `maxSize` are not set,\n     * and `ttlAutopurge` is not set, then a warning will be emitted\n     * cautioning about the potential for unbounded memory consumption.\n     * (The TypeScript definitions will also discourage this.)\n     */\n    ttl?: Milliseconds\n\n    /**\n     * Minimum amount of time in ms in which to check for staleness.\n     * Defaults to 1, which means that the current time is checked\n     * at most once per millisecond.\n     *\n     * Set to 0 to check the current time every time staleness is tested.\n     * (This reduces performance, and is theoretically unnecessary.)\n     *\n     * Setting this to a higher value will improve performance somewhat\n     * while using ttl tracking, albeit at the expense of keeping stale\n     * items around a bit longer than their TTLs would indicate.\n     *\n     * @default 1\n     */\n    ttlResolution?: Milliseconds\n\n    /**\n     * Preemptively remove stale items from the cache.\n     *\n     * Note that this may *significantly* degrade performance, especially if\n     * the cache is storing a large number of items. It is almost always best\n     * to just leave the stale items in the cache, and let them fall out as new\n     * items are added.\n     *\n     * Note that this means that {@link OptionsBase.allowStale} is a bit\n     * pointless, as stale items will be deleted almost as soon as they\n     * expire.\n     *\n     * Use with caution!\n     */\n    ttlAutopurge?: boolean\n\n    /**\n     * When using time-expiring entries with `ttl`, setting this to `true` will\n     * make each item's age reset to 0 whenever it is retrieved from cache with\n     * {@link LRUCache#get}, causing it to not expire. (It can still fall out\n     * of cache based on recency of use, of course.)\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     */\n    updateAgeOnGet?: boolean\n\n    /**\n     * When using time-expiring entries with `ttl`, setting this to `true` will\n     * make each item's age reset to 0 whenever its presence in the cache is\n     * checked with {@link LRUCache#has}, causing it to not expire. (It can\n     * still fall out of cache based on recency of use, of course.)\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     */\n    updateAgeOnHas?: boolean\n\n    /**\n     * Allow {@link LRUCache#get} and {@link LRUCache#fetch} calls to return\n     * stale data, if available.\n     *\n     * By default, if you set `ttl`, stale items will only be deleted from the\n     * cache when you `get(key)`. That is, it's not preemptively pruning items,\n     * unless {@link OptionsBase.ttlAutopurge} is set.\n     *\n     * If you set `allowStale:true`, it'll return the stale value *as well as*\n     * deleting it. If you don't set this, then it'll return `undefined` when\n     * you try to get a stale entry.\n     *\n     * Note that when a stale entry is fetched, _even if it is returned due to\n     * `allowStale` being set_, it is removed from the cache immediately. You\n     * can suppress this behavior by setting\n     * {@link OptionsBase.noDeleteOnStaleGet}, either in the constructor, or in\n     * the options provided to {@link LRUCache#get}.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     * The `cache.has()` method will always return `false` for stale items.\n     *\n     * Only relevant if a ttl is set.\n     */\n    allowStale?: boolean\n\n    /**\n     * Function that is called on items when they are dropped from the\n     * cache, as `dispose(value, key, reason)`.\n     *\n     * This can be handy if you want to close file descriptors or do\n     * other cleanup tasks when items are no longer stored in the cache.\n     *\n     * **NOTE**: It is called _before_ the item has been fully removed\n     * from the cache, so if you want to put it right back in, you need\n     * to wait until the next tick. If you try to add it back in during\n     * the `dispose()` function call, it will break things in subtle and\n     * weird ways.\n     *\n     * Unlike several other options, this may _not_ be overridden by\n     * passing an option to `set()`, for performance reasons.\n     *\n     * The `reason` will be one of the following strings, corresponding\n     * to the reason for the item's deletion:\n     *\n     * - `evict` Item was evicted to make space for a new addition\n     * - `set` Item was overwritten by a new value\n     * - `expire` Item expired its TTL\n     * - `fetch` Item was deleted due to a failed or aborted fetch, or a\n     *   fetchMethod returning `undefined.\n     * - `delete` Item was removed by explicit `cache.delete(key)`,\n     *   `cache.clear()`, or `cache.set(key, undefined)`.\n     */\n    dispose?: Disposer<K, V>\n\n    /**\n     * The same as {@link OptionsBase.dispose}, but called *after* the entry\n     * is completely removed and the cache is once again in a clean state.\n     *\n     * It is safe to add an item right back into the cache at this point.\n     * However, note that it is *very* easy to inadvertently create infinite\n     * recursion this way.\n     */\n    disposeAfter?: Disposer<K, V>\n\n    /**\n     * Set to true to suppress calling the\n     * {@link OptionsBase.dispose} function if the entry key is\n     * still accessible within the cache.\n     *\n     * This may be overridden by passing an options object to\n     * {@link LRUCache#set}.\n     *\n     * Only relevant if `dispose` or `disposeAfter` are set.\n     */\n    noDisposeOnSet?: boolean\n\n    /**\n     * Boolean flag to tell the cache to not update the TTL when setting a new\n     * value for an existing key (ie, when updating a value rather than\n     * inserting a new value).  Note that the TTL value is _always_ set (if\n     * provided) when adding a new entry into the cache.\n     *\n     * Has no effect if a {@link OptionsBase.ttl} is not set.\n     *\n     * May be passed as an option to {@link LRUCache#set}.\n     */\n    noUpdateTTL?: boolean\n\n    /**\n     * Set to a positive integer to track the sizes of items added to the\n     * cache, and automatically evict items in order to stay below this size.\n     * Note that this may result in fewer than `max` items being stored.\n     *\n     * Attempting to add an item to the cache whose calculated size is greater\n     * that this amount will be a no-op. The item will not be cached, and no\n     * other items will be evicted.\n     *\n     * Optional, must be a positive integer if provided.\n     *\n     * Sets `maxEntrySize` to the same value, unless a different value is\n     * provided for `maxEntrySize`.\n     *\n     * At least one of `max`, `maxSize`, or `TTL` is required. This must be a\n     * positive integer if set.\n     *\n     * Even if size tracking is enabled, **it is strongly recommended to set a\n     * `max` to prevent unbounded growth of the cache.**\n     *\n     * Note also that size tracking can negatively impact performance,\n     * though for most cases, only minimally.\n     */\n    maxSize?: Size\n\n    /**\n     * The maximum allowed size for any single item in the cache.\n     *\n     * If a larger item is passed to {@link LRUCache#set} or returned by a\n     * {@link OptionsBase.fetchMethod} or {@link OptionsBase.memoMethod}, then\n     * it will not be stored in the cache.\n     *\n     * Attempting to add an item whose calculated size is greater than\n     * this amount will not cache the item or evict any old items, but\n     * WILL delete an existing value if one is already present.\n     *\n     * Optional, must be a positive integer if provided. Defaults to\n     * the value of `maxSize` if provided.\n     */\n    maxEntrySize?: Size\n\n    /**\n     * A function that returns a number indicating the item's size.\n     *\n     * Requires {@link OptionsBase.maxSize} to be set.\n     *\n     * If not provided, and {@link OptionsBase.maxSize} or\n     * {@link OptionsBase.maxEntrySize} are set, then all\n     * {@link LRUCache#set} calls **must** provide an explicit\n     * {@link SetOptions.size} or sizeCalculation param.\n     */\n    sizeCalculation?: SizeCalculator<K, V>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#fetch}\n     *\n     * ```ts\n     * fetchMethod(key, staleValue, { signal, options, context })\n     * ```\n     *\n     * If `fetchMethod` is not provided, then `cache.fetch(key)` is equivalent\n     * to `Promise.resolve(cache.get(key))`.\n     *\n     * If at any time, `signal.aborted` is set to `true`, or if the\n     * `signal.onabort` method is called, or if it emits an `'abort'` event\n     * which you can listen to with `addEventListener`, then that means that\n     * the fetch should be abandoned. This may be passed along to async\n     * functions aware of AbortController/AbortSignal behavior.\n     *\n     * The `fetchMethod` should **only** return `undefined` or a Promise\n     * resolving to `undefined` if the AbortController signaled an `abort`\n     * event. In all other cases, it should return or resolve to a value\n     * suitable for adding to the cache.\n     *\n     * The `options` object is a union of the options that may be provided to\n     * `set()` and `get()`. If they are modified, then that will result in\n     * modifying the settings to `cache.set()` when the value is resolved, and\n     * in the case of\n     * {@link OptionsBase.noDeleteOnFetchRejection} and\n     * {@link OptionsBase.allowStaleOnFetchRejection}, the handling of\n     * `fetchMethod` failures.\n     *\n     * For example, a DNS cache may update the TTL based on the value returned\n     * from a remote DNS server by changing `options.ttl` in the `fetchMethod`.\n     */\n    fetchMethod?: Fetcher<K, V, FC>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#memo}\n     */\n    memoMethod?: Memoizer<K, V, FC>\n\n    /**\n     * Set to true to suppress the deletion of stale data when a\n     * {@link OptionsBase.fetchMethod} returns a rejected promise.\n     */\n    noDeleteOnFetchRejection?: boolean\n\n    /**\n     * Do not delete stale items when they are retrieved with\n     * {@link LRUCache#get}.\n     *\n     * Note that the `get` return value will still be `undefined`\n     * unless {@link OptionsBase.allowStale} is true.\n     *\n     * When using time-expiring entries with `ttl`, by default stale\n     * items will be removed from the cache when the key is accessed\n     * with `cache.get()`.\n     *\n     * Setting this option will cause stale items to remain in the cache, until\n     * they are explicitly deleted with `cache.delete(key)`, or retrieved with\n     * `noDeleteOnStaleGet` set to `false`.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     *\n     * Only relevant if a ttl is used.\n     */\n    noDeleteOnStaleGet?: boolean\n\n    /**\n     * Set to true to allow returning stale data when a\n     * {@link OptionsBase.fetchMethod} throws an error or returns a rejected\n     * promise.\n     *\n     * This differs from using {@link OptionsBase.allowStale} in that stale\n     * data will ONLY be returned in the case that the {@link LRUCache#fetch}\n     * fails, not any other times.\n     *\n     * If a `fetchMethod` fails, and there is no stale value available, the\n     * `fetch()` will resolve to `undefined`. Ie, all `fetchMethod` errors are\n     * suppressed.\n     *\n     * Implies `noDeleteOnFetchRejection`.\n     *\n     * This may be set in calls to `fetch()`, or defaulted on the constructor,\n     * or overridden by modifying the options object in the `fetchMethod`.\n     */\n    allowStaleOnFetchRejection?: boolean\n\n    /**\n     * Set to true to return a stale value from the cache when the\n     * `AbortSignal` passed to the {@link OptionsBase.fetchMethod} dispatches\n     * an `'abort'` event, whether user-triggered, or due to internal cache\n     * behavior.\n     *\n     * Unless {@link OptionsBase.ignoreFetchAbort} is also set, the underlying\n     * {@link OptionsBase.fetchMethod} will still be considered canceled, and\n     * any value it returns will be ignored and not cached.\n     *\n     * Caveat: since fetches are aborted when a new value is explicitly\n     * set in the cache, this can lead to fetch returning a stale value,\n     * since that was the fallback value _at the moment the `fetch()` was\n     * initiated_, even though the new updated value is now present in\n     * the cache.\n     *\n     * For example:\n     *\n     * ```ts\n     * const cache = new LRUCache<string, any>({\n     *   ttl: 100,\n     *   fetchMethod: async (url, oldValue, { signal }) =>  {\n     *     const res = await fetch(url, { signal })\n     *     return await res.json()\n     *   }\n     * })\n     * cache.set('https://example.com/', { some: 'data' })\n     * // 100ms go by...\n     * const result = cache.fetch('https://example.com/')\n     * cache.set('https://example.com/', { other: 'thing' })\n     * console.log(await result) // { some: 'data' }\n     * console.log(cache.get('https://example.com/')) // { other: 'thing' }\n     * ```\n     */\n    allowStaleOnFetchAbort?: boolean\n\n    /**\n     * Set to true to ignore the `abort` event emitted by the `AbortSignal`\n     * object passed to {@link OptionsBase.fetchMethod}, and still cache the\n     * resulting resolution value, as long as it is not `undefined`.\n     *\n     * When used on its own, this means aborted {@link LRUCache#fetch} calls\n     * are not immediately resolved or rejected when they are aborted, and\n     * instead take the full time to await.\n     *\n     * When used with {@link OptionsBase.allowStaleOnFetchAbort}, aborted\n     * {@link LRUCache#fetch} calls will resolve immediately to their stale\n     * cached value or `undefined`, and will continue to process and eventually\n     * update the cache when they resolve, as long as the resulting value is\n     * not `undefined`, thus supporting a \"return stale on timeout while\n     * refreshing\" mechanism by passing `AbortSignal.timeout(n)` as the signal.\n     *\n     * For example:\n     *\n     * ```ts\n     * const c = new LRUCache({\n     *   ttl: 100,\n     *   ignoreFetchAbort: true,\n     *   allowStaleOnFetchAbort: true,\n     *   fetchMethod: async (key, oldValue, { signal }) => {\n     *     // note: do NOT pass the signal to fetch()!\n     *     // let's say this fetch can take a long time.\n     *     const res = await fetch(`https://slow-backend-server/${key}`)\n     *     return await res.json()\n     *   },\n     * })\n     *\n     * // this will return the stale value after 100ms, while still\n     * // updating in the background for next time.\n     * const val = await c.fetch('key', { signal: AbortSignal.timeout(100) })\n     * ```\n     *\n     * **Note**: regardless of this setting, an `abort` event _is still\n     * emitted on the `AbortSignal` object_, so may result in invalid results\n     * when passed to other underlying APIs that use AbortSignals.\n     *\n     * This may be overridden in the {@link OptionsBase.fetchMethod} or the\n     * call to {@link LRUCache#fetch}.\n     */\n    ignoreFetchAbort?: boolean\n  }\n\n  export interface OptionsMaxLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    max: Count\n  }\n  export interface OptionsTTLLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    ttl: Milliseconds\n    ttlAutopurge: boolean\n  }\n  export interface OptionsSizeLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    maxSize: Size\n  }\n\n  /**\n   * The valid safe options for the {@link LRUCache} constructor\n   */\n  export type Options<K, V, FC> =\n    | OptionsMaxLimit<K, V, FC>\n    | OptionsSizeLimit<K, V, FC>\n    | OptionsTTLLimit<K, V, FC>\n\n  /**\n   * Entry objects used by {@link LRUCache#load} and {@link LRUCache#dump},\n   * and returned by {@link LRUCache#info}.\n   */\n  export interface Entry<V> {\n    value: V\n    ttl?: Milliseconds\n    size?: Size\n    start?: Milliseconds\n  }\n}\n\n/**\n * Default export, the thing you're using this module to get.\n *\n * The `K` and `V` types define the key and value types, respectively. The\n * optional `FC` type defines the type of the `context` object passed to\n * `cache.fetch()` and `cache.memo()`.\n *\n * Keys and values **must not** be `null` or `undefined`.\n *\n * All properties from the options object (with the exception of `max`,\n * `maxSize`, `fetchMethod`, `memoMethod`, `dispose` and `disposeAfter`) are\n * added as normal public members. (The listed options are read-only getters.)\n *\n * Changing any of these will alter the defaults for subsequent method calls.\n */\nexport class LRUCache<K extends {}, V extends {}, FC = unknown>\n  implements Map<K, V>\n{\n  // options that cannot be changed without disaster\n  readonly #max: LRUCache.Count\n  readonly #maxSize: LRUCache.Size\n  readonly #dispose?: LRUCache.Disposer<K, V>\n  readonly #disposeAfter?: LRUCache.Disposer<K, V>\n  readonly #fetchMethod?: LRUCache.Fetcher<K, V, FC>\n  readonly #memoMethod?: LRUCache.Memoizer<K, V, FC>\n\n  /**\n   * {@link LRUCache.OptionsBase.ttl}\n   */\n  ttl: LRUCache.Milliseconds\n\n  /**\n   * {@link LRUCache.OptionsBase.ttlResolution}\n   */\n  ttlResolution: LRUCache.Milliseconds\n  /**\n   * {@link LRUCache.OptionsBase.ttlAutopurge}\n   */\n  ttlAutopurge: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnGet}\n   */\n  updateAgeOnGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnHas}\n   */\n  updateAgeOnHas: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStale}\n   */\n  allowStale: boolean\n\n  /**\n   * {@link LRUCache.OptionsBase.noDisposeOnSet}\n   */\n  noDisposeOnSet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noUpdateTTL}\n   */\n  noUpdateTTL: boolean\n  /**\n   * {@link LRUCache.OptionsBase.maxEntrySize}\n   */\n  maxEntrySize: LRUCache.Size\n  /**\n   * {@link LRUCache.OptionsBase.sizeCalculation}\n   */\n  sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n   */\n  noDeleteOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n   */\n  noDeleteOnStaleGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n   */\n  allowStaleOnFetchAbort: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n   */\n  allowStaleOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n   */\n  ignoreFetchAbort: boolean\n\n  // computed properties\n  #size: LRUCache.Count\n  #calculatedSize: LRUCache.Size\n  #keyMap: Map<K, Index>\n  #keyList: (K | undefined)[]\n  #valList: (V | BackgroundFetch<V> | undefined)[]\n  #next: NumberArray\n  #prev: NumberArray\n  #head: Index\n  #tail: Index\n  #free: StackLike\n  #disposed?: DisposeTask<K, V>[]\n  #sizes?: ZeroArray\n  #starts?: ZeroArray\n  #ttls?: ZeroArray\n\n  #hasDispose: boolean\n  #hasFetchMethod: boolean\n  #hasDisposeAfter: boolean\n\n  /**\n   * Do not call this method unless you need to inspect the\n   * inner workings of the cache.  If anything returned by this\n   * object is modified in any way, strange breakage may occur.\n   *\n   * These fields are private for a reason!\n   *\n   * @internal\n   */\n  static unsafeExposeInternals<\n    K extends {},\n    V extends {},\n    FC extends unknown = unknown\n  >(c: LRUCache<K, V, FC>) {\n    return {\n      // properties\n      starts: c.#starts,\n      ttls: c.#ttls,\n      sizes: c.#sizes,\n      keyMap: c.#keyMap as Map<K, number>,\n      keyList: c.#keyList,\n      valList: c.#valList,\n      next: c.#next,\n      prev: c.#prev,\n      get head() {\n        return c.#head\n      },\n      get tail() {\n        return c.#tail\n      },\n      free: c.#free,\n      // methods\n      isBackgroundFetch: (p: any) => c.#isBackgroundFetch(p),\n      backgroundFetch: (\n        k: K,\n        index: number | undefined,\n        options: LRUCache.FetchOptions<K, V, FC>,\n        context: any\n      ): BackgroundFetch<V> =>\n        c.#backgroundFetch(\n          k,\n          index as Index | undefined,\n          options,\n          context\n        ),\n      moveToTail: (index: number): void =>\n        c.#moveToTail(index as Index),\n      indexes: (options?: { allowStale: boolean }) =>\n        c.#indexes(options),\n      rindexes: (options?: { allowStale: boolean }) =>\n        c.#rindexes(options),\n      isStale: (index: number | undefined) =>\n        c.#isStale(index as Index),\n    }\n  }\n\n  // Protected read-only members\n\n  /**\n   * {@link LRUCache.OptionsBase.max} (read-only)\n   */\n  get max(): LRUCache.Count {\n    return this.#max\n  }\n  /**\n   * {@link LRUCache.OptionsBase.maxSize} (read-only)\n   */\n  get maxSize(): LRUCache.Count {\n    return this.#maxSize\n  }\n  /**\n   * The total computed size of items in the cache (read-only)\n   */\n  get calculatedSize(): LRUCache.Size {\n    return this.#calculatedSize\n  }\n  /**\n   * The number of items stored in the cache (read-only)\n   */\n  get size(): LRUCache.Count {\n    return this.#size\n  }\n  /**\n   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n   */\n  get fetchMethod(): LRUCache.Fetcher<K, V, FC> | undefined {\n    return this.#fetchMethod\n  }\n  get memoMethod(): LRUCache.Memoizer<K, V, FC> | undefined {\n    return this.#memoMethod\n  }\n  /**\n   * {@link LRUCache.OptionsBase.dispose} (read-only)\n   */\n  get dispose() {\n    return this.#dispose\n  }\n  /**\n   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n   */\n  get disposeAfter() {\n    return this.#disposeAfter\n  }\n\n  constructor(\n    options: LRUCache.Options<K, V, FC> | LRUCache<K, V, FC>\n  ) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      maxEntrySize = 0,\n      sizeCalculation,\n      fetchMethod,\n      memoMethod,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n    } = options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.#max = max\n    this.#maxSize = maxSize\n    this.maxEntrySize = maxEntrySize || this.#maxSize\n    this.sizeCalculation = sizeCalculation\n    if (this.sizeCalculation) {\n      if (!this.#maxSize && !this.maxEntrySize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    if (\n      memoMethod !== undefined &&\n      typeof memoMethod !== 'function'\n    ) {\n      throw new TypeError('memoMethod must be a function if defined')\n    }\n    this.#memoMethod = memoMethod\n\n    if (\n      fetchMethod !== undefined &&\n      typeof fetchMethod !== 'function'\n    ) {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n    this.#fetchMethod = fetchMethod\n    this.#hasFetchMethod = !!fetchMethod\n\n    this.#keyMap = new Map()\n    this.#keyList = new Array(max).fill(undefined)\n    this.#valList = new Array(max).fill(undefined)\n    this.#next = new UintArray(max)\n    this.#prev = new UintArray(max)\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free = Stack.create(max)\n    this.#size = 0\n    this.#calculatedSize = 0\n\n    if (typeof dispose === 'function') {\n      this.#dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.#disposeAfter = disposeAfter\n      this.#disposed = []\n    } else {\n      this.#disposeAfter = undefined\n      this.#disposed = undefined\n    }\n    this.#hasDispose = !!this.#dispose\n    this.#hasDisposeAfter = !!this.#disposeAfter\n\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\n    this.ignoreFetchAbort = !!ignoreFetchAbort\n\n    // NB: maxEntrySize is set to maxSize if it's set\n    if (this.maxEntrySize !== 0) {\n      if (this.#maxSize !== 0) {\n        if (!isPosInt(this.#maxSize)) {\n          throw new TypeError(\n            'maxSize must be a positive integer if specified'\n          )\n        }\n      }\n      if (!isPosInt(this.maxEntrySize)) {\n        throw new TypeError(\n          'maxEntrySize must be a positive integer if specified'\n        )\n      }\n      this.#initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.#initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n  }\n\n  /**\n   * Return the number of ms left in the item's TTL. If item is not in cache,\n   * returns `0`. Returns `Infinity` if item is in cache without a defined TTL.\n   */\n  getRemainingTTL(key: K) {\n    return this.#keyMap.has(key) ? Infinity : 0\n  }\n\n  #initializeTTLTracking() {\n    const ttls = new ZeroArray(this.#max)\n    const starts = new ZeroArray(this.#max)\n    this.#ttls = ttls\n    this.#starts = starts\n\n    this.#setItemTTL = (index, ttl, start = perf.now()) => {\n      starts[index] = ttl !== 0 ? start : 0\n      ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.#isStale(index)) {\n            this.#delete(this.#keyList[index] as K, 'expire')\n          }\n        }, ttl + 1)\n        // unref() not supported on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n    }\n\n    this.#updateItemAge = index => {\n      starts[index] = ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    this.#statusTTL = (status, index) => {\n      if (ttls[index]) {\n        const ttl = ttls[index]\n        const start = starts[index]\n        /* c8 ignore next */\n        if (!ttl || !start) return\n        status.ttl = ttl\n        status.start = start\n        status.now = cachedNow || getNow()\n        const age = status.now - start\n        status.remainingTTL = ttl - age\n      }\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        // not available on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.#keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      const ttl = ttls[index]\n      const start = starts[index]\n      if (!ttl || !start) {\n        return Infinity\n      }\n      const age = (cachedNow || getNow()) - start\n      return ttl - age\n    }\n\n    this.#isStale = index => {\n      const s = starts[index]\n      const t = ttls[index]\n      return !!t && !!s && (cachedNow || getNow()) - s > t\n    }\n  }\n\n  // conditionally set private methods related to TTL\n  #updateItemAge: (index: Index) => void = () => {}\n  #statusTTL: (status: LRUCache.Status<V>, index: Index) => void =\n    () => {}\n  #setItemTTL: (\n    index: Index,\n    ttl: LRUCache.Milliseconds,\n    start?: LRUCache.Milliseconds\n    // ignore because we never call this if we're not already in TTL mode\n    /* c8 ignore start */\n  ) => void = () => {}\n  /* c8 ignore stop */\n\n  #isStale: (index: Index) => boolean = () => false\n\n  #initializeSizeTracking() {\n    const sizes = new ZeroArray(this.#max)\n    this.#calculatedSize = 0\n    this.#sizes = sizes\n    this.#removeItemSize = index => {\n      this.#calculatedSize -= sizes[index] as number\n      sizes[index] = 0\n    }\n    this.#requireSize = (k, v, size, sizeCalculation) => {\n      // provisionally accept background fetches.\n      // actual value size will be checked when they return.\n      if (this.#isBackgroundFetch(v)) {\n        return 0\n      }\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer). ' +\n              'When maxSize or maxEntrySize is used, sizeCalculation ' +\n              'or size must be set.'\n          )\n        }\n      }\n      return size\n    }\n    this.#addItemSize = (\n      index: Index,\n      size: LRUCache.Size,\n      status?: LRUCache.Status<V>\n    ) => {\n      sizes[index] = size\n      if (this.#maxSize) {\n        const maxSize = this.#maxSize - (sizes[index] as number)\n        while (this.#calculatedSize > maxSize) {\n          this.#evict(true)\n        }\n      }\n      this.#calculatedSize += sizes[index] as number\n      if (status) {\n        status.entrySize = size\n        status.totalCalculatedSize = this.#calculatedSize\n      }\n    }\n  }\n\n  #removeItemSize: (index: Index) => void = _i => {}\n  #addItemSize: (\n    index: Index,\n    size: LRUCache.Size,\n    status?: LRUCache.Status<V>\n  ) => void = (_i, _s, _st) => {}\n  #requireSize: (\n    k: K,\n    v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => LRUCache.Size = (\n    _k: K,\n    _v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize or maxEntrySize on cache'\n      )\n    }\n    return 0\n  };\n\n  *#indexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#tail; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#head) {\n          break\n        } else {\n          i = this.#prev[i] as Index\n        }\n      }\n    }\n  }\n\n  *#rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#head; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#tail) {\n          break\n        } else {\n          i = this.#next[i] as Index\n        }\n      }\n    }\n  }\n\n  #isValidIndex(index: Index) {\n    return (\n      index !== undefined &&\n      this.#keyMap.get(this.#keyList[index] as K) === index\n    )\n  }\n\n  /**\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from most recently used to least recently used.\n   */\n  *entries() {\n    for (const i of this.#indexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]] as [K, V]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.entries}\n   *\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from least recently used to most recently used.\n   */\n  *rentries() {\n    for (const i of this.#rindexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the keys in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *keys() {\n    for (const i of this.#indexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.keys}\n   *\n   * Return a generator yielding the keys in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rkeys() {\n    for (const i of this.#rindexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the values in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *values() {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i] as V\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.values}\n   *\n   * Return a generator yielding the values in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rvalues() {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Iterating over the cache itself yields the same results as\n   * {@link LRUCache.entries}\n   */\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  /**\n   * A String value that is used in the creation of the default string\n   * description of an object. Called by the built-in method\n   * `Object.prototype.toString`.\n   */\n  [Symbol.toStringTag] = 'LRUCache'\n\n  /**\n   * Find a value for which the supplied fn method returns a truthy value,\n   * similar to `Array.find()`. fn is called as `fn(value, key, cache)`.\n   */\n  find(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => boolean,\n    getOptions: LRUCache.GetOptions<K, V, FC> = {}\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      if (fn(value, this.#keyList[i] as K, this)) {\n        return this.get(this.#keyList[i] as K, getOptions)\n      }\n    }\n  }\n\n  /**\n   * Call the supplied function on each item in the cache, in order from most\n   * recently used to least recently used.\n   *\n   * `fn` is called as `fn(value, key, cache)`.\n   *\n   * If `thisp` is provided, function will be called in the `this`-context of\n   * the provided object, or the cache if no `thisp` object is provided.\n   *\n   * Does not update age or recenty of use, or iterate over stale values.\n   */\n  forEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * The same as {@link LRUCache.forEach} but items are iterated over in\n   * reverse order.  (ie, less recently used items are iterated over first.)\n   */\n  rforEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * Delete any stale entries. Returns true if anything was removed,\n   * false otherwise.\n   */\n  purgeStale() {\n    let deleted = false\n    for (const i of this.#rindexes({ allowStale: true })) {\n      if (this.#isStale(i)) {\n        this.#delete(this.#keyList[i] as K, 'expire')\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Get the extended info about a given entry, to get its value, size, and\n   * TTL info simultaneously. Returns `undefined` if the key is not present.\n   *\n   * Unlike {@link LRUCache#dump}, which is designed to be portable and survive\n   * serialization, the `start` value is always the current timestamp, and the\n   * `ttl` is a calculated remaining time to live (negative if expired).\n   *\n   * Always returns stale values, if their info is found in the cache, so be\n   * sure to check for expirations (ie, a negative {@link LRUCache.Entry#ttl})\n   * if relevant.\n   */\n  info(key: K): LRUCache.Entry<V> | undefined {\n    const i = this.#keyMap.get(key)\n    if (i === undefined) return undefined\n    const v = this.#valList[i]\n    const value: V | undefined = this.#isBackgroundFetch(v)\n      ? v.__staleWhileFetching\n      : v\n    if (value === undefined) return undefined\n    const entry: LRUCache.Entry<V> = { value }\n    if (this.#ttls && this.#starts) {\n      const ttl = this.#ttls[i]\n      const start = this.#starts[i]\n      if (ttl && start) {\n        const remain = ttl - (perf.now() - start)\n        entry.ttl = remain\n        entry.start = Date.now()\n      }\n    }\n    if (this.#sizes) {\n      entry.size = this.#sizes[i]\n    }\n    return entry\n  }\n\n  /**\n   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n   * passed to {@link LRLUCache#load}.\n   *\n   * The `start` fields are calculated relative to a portable `Date.now()`\n   * timestamp, even if `performance.now()` is available.\n   *\n   * Stale entries are always included in the `dump`, even if\n   * {@link LRUCache.OptionsBase.allowStale} is false.\n   *\n   * Note: this returns an actual array, not a generator, so it can be more\n   * easily passed around.\n   */\n  dump() {\n    const arr: [K, LRUCache.Entry<V>][] = []\n    for (const i of this.#indexes({ allowStale: true })) {\n      const key = this.#keyList[i]\n      const v = this.#valList[i]\n      const value: V | undefined = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined || key === undefined) continue\n      const entry: LRUCache.Entry<V> = { value }\n      if (this.#ttls && this.#starts) {\n        entry.ttl = this.#ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - (this.#starts[i] as number)\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.#sizes) {\n        entry.size = this.#sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  /**\n   * Reset the cache and load in the items in entries in the order listed.\n   *\n   * The shape of the resulting cache may be different if the same options are\n   * not used in both caches.\n   *\n   * The `start` fields are assumed to be calculated relative to a portable\n   * `Date.now()` timestamp, even if `performance.now()` is available.\n   */\n  load(arr: [K, LRUCache.Entry<V>][]) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset, so that\n        // we get the intended remaining TTL, no matter how long it's\n        // been on ice.\n        //\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  /**\n   * Add a value to the cache.\n   *\n   * Note: if `undefined` is specified as a value, this is an alias for\n   * {@link LRUCache#delete}\n   *\n   * Fields on the {@link LRUCache.SetOptions} options param will override\n   * their corresponding values in the constructor options for the scope\n   * of this single `set()` operation.\n   *\n   * If `start` is provided, then that will set the effective start\n   * time for the TTL calculation. Note that this must be a previous\n   * value of `performance.now()` if supported, or a previous value of\n   * `Date.now()` if not.\n   *\n   * Options object may also include `size`, which will prevent\n   * calling the `sizeCalculation` function and just use the specified\n   * number if it is a positive integer, and `noDisposeOnSet` which\n   * will prevent calling a `dispose` function in the case of\n   * overwrites.\n   *\n   * If the `size` (or return value of `sizeCalculation`) for a given\n   * entry is greater than `maxEntrySize`, then the item will not be\n   * added to the cache.\n   *\n   * Will update the recency of the entry.\n   *\n   * If the value is `undefined`, then this is an alias for\n   * `cache.delete(key)`. `undefined` is never stored in the cache.\n   */\n  set(\n    k: K,\n    v: V | BackgroundFetch<V> | undefined,\n    setOptions: LRUCache.SetOptions<K, V, FC> = {}\n  ) {\n    if (v === undefined) {\n      this.delete(k)\n      return this\n    }\n    const {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      sizeCalculation = this.sizeCalculation,\n      status,\n    } = setOptions\n    let { noUpdateTTL = this.noUpdateTTL } = setOptions\n\n    const size = this.#requireSize(\n      k,\n      v,\n      setOptions.size || 0,\n      sizeCalculation\n    )\n    // if the item doesn't fit, don't do anything\n    // NB: maxEntrySize set to maxSize by default\n    if (this.maxEntrySize && size > this.maxEntrySize) {\n      if (status) {\n        status.set = 'miss'\n        status.maxEntrySizeExceeded = true\n      }\n      // have to delete, in case something is there already.\n      this.#delete(k, 'set')\n      return this\n    }\n    let index = this.#size === 0 ? undefined : this.#keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = (\n        this.#size === 0\n          ? this.#tail\n          : this.#free.length !== 0\n          ? this.#free.pop()\n          : this.#size === this.#max\n          ? this.#evict(false)\n          : this.#size\n      ) as Index\n      this.#keyList[index] = k\n      this.#valList[index] = v\n      this.#keyMap.set(k, index)\n      this.#next[this.#tail] = index\n      this.#prev[index] = this.#tail\n      this.#tail = index\n      this.#size++\n      this.#addItemSize(index, size, status)\n      if (status) status.set = 'add'\n      noUpdateTTL = false\n    } else {\n      // update\n      this.#moveToTail(index)\n      const oldVal = this.#valList[index] as V | BackgroundFetch<V>\n      if (v !== oldVal) {\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort(new Error('replaced'))\n          const { __staleWhileFetching: s } = oldVal\n          if (s !== undefined && !noDisposeOnSet) {\n            if (this.#hasDispose) {\n              this.#dispose?.(s as V, k, 'set')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([s as V, k, 'set'])\n            }\n          }\n        } else if (!noDisposeOnSet) {\n          if (this.#hasDispose) {\n            this.#dispose?.(oldVal as V, k, 'set')\n          }\n          if (this.#hasDisposeAfter) {\n            this.#disposed?.push([oldVal as V, k, 'set'])\n          }\n        }\n        this.#removeItemSize(index)\n        this.#addItemSize(index, size, status)\n        this.#valList[index] = v\n        if (status) {\n          status.set = 'replace'\n          const oldValue =\n            oldVal && this.#isBackgroundFetch(oldVal)\n              ? oldVal.__staleWhileFetching\n              : oldVal\n          if (oldValue !== undefined) status.oldValue = oldValue\n        }\n      } else if (status) {\n        status.set = 'update'\n      }\n    }\n    if (ttl !== 0 && !this.#ttls) {\n      this.#initializeTTLTracking()\n    }\n    if (this.#ttls) {\n      if (!noUpdateTTL) {\n        this.#setItemTTL(index, ttl, start)\n      }\n      if (status) this.#statusTTL(status, index)\n    }\n    if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Evict the least recently used item, returning its value or\n   * `undefined` if cache is empty.\n   */\n  pop(): V | undefined {\n    try {\n      while (this.#size) {\n        const val = this.#valList[this.#head]\n        this.#evict(true)\n        if (this.#isBackgroundFetch(val)) {\n          if (val.__staleWhileFetching) {\n            return val.__staleWhileFetching\n          }\n        } else if (val !== undefined) {\n          return val\n        }\n      }\n    } finally {\n      if (this.#hasDisposeAfter && this.#disposed) {\n        const dt = this.#disposed\n        let task: DisposeTask<K, V> | undefined\n        while ((task = dt?.shift())) {\n          this.#disposeAfter?.(...task)\n        }\n      }\n    }\n  }\n\n  #evict(free: boolean) {\n    const head = this.#head\n    const k = this.#keyList[head] as K\n    const v = this.#valList[head] as V\n    if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n      v.__abortController.abort(new Error('evicted'))\n    } else if (this.#hasDispose || this.#hasDisposeAfter) {\n      if (this.#hasDispose) {\n        this.#dispose?.(v, k, 'evict')\n      }\n      if (this.#hasDisposeAfter) {\n        this.#disposed?.push([v, k, 'evict'])\n      }\n    }\n    this.#removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.#keyList[head] = undefined\n      this.#valList[head] = undefined\n      this.#free.push(head)\n    }\n    if (this.#size === 1) {\n      this.#head = this.#tail = 0 as Index\n      this.#free.length = 0\n    } else {\n      this.#head = this.#next[head] as Index\n    }\n    this.#keyMap.delete(k)\n    this.#size--\n    return head\n  }\n\n  /**\n   * Check if a key is in the cache, without updating the recency of use.\n   * Will return false if the item is stale, even though it is technically\n   * in the cache.\n   *\n   * Check if a key is in the cache, without updating the recency of\n   * use. Age is updated if {@link LRUCache.OptionsBase.updateAgeOnHas} is set\n   * to `true` in either the options or the constructor.\n   *\n   * Will return `false` if the item is stale, even though it is technically in\n   * the cache. The difference can be determined (if it matters) by using a\n   * `status` argument, and inspecting the `has` field.\n   *\n   * Will not update item age unless\n   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n   */\n  has(k: K, hasOptions: LRUCache.HasOptions<K, V, FC> = {}) {\n    const { updateAgeOnHas = this.updateAgeOnHas, status } =\n      hasOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const v = this.#valList[index]\n      if (\n        this.#isBackgroundFetch(v) &&\n        v.__staleWhileFetching === undefined\n      ) {\n        return false\n      }\n      if (!this.#isStale(index)) {\n        if (updateAgeOnHas) {\n          this.#updateItemAge(index)\n        }\n        if (status) {\n          status.has = 'hit'\n          this.#statusTTL(status, index)\n        }\n        return true\n      } else if (status) {\n        status.has = 'stale'\n        this.#statusTTL(status, index)\n      }\n    } else if (status) {\n      status.has = 'miss'\n    }\n    return false\n  }\n\n  /**\n   * Like {@link LRUCache#get} but doesn't update recency or delete stale\n   * items.\n   *\n   * Returns `undefined` if the item is stale, unless\n   * {@link LRUCache.OptionsBase.allowStale} is set.\n   */\n  peek(k: K, peekOptions: LRUCache.PeekOptions<K, V, FC> = {}) {\n    const { allowStale = this.allowStale } = peekOptions\n    const index = this.#keyMap.get(k)\n    if (\n      index === undefined ||\n      (!allowStale && this.#isStale(index))\n    ) {\n      return\n    }\n    const v = this.#valList[index]\n    // either stale and allowed, or forcing a refresh of non-stale value\n    return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v\n  }\n\n  #backgroundFetch(\n    k: K,\n    index: Index | undefined,\n    options: LRUCache.FetchOptions<K, V, FC>,\n    context: any\n  ): BackgroundFetch<V> {\n    const v = index === undefined ? undefined : this.#valList[index]\n    if (this.#isBackgroundFetch(v)) {\n      return v\n    }\n\n    const ac = new AC()\n    const { signal } = options\n    // when/if our AC signals, then stop listening to theirs.\n    signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n      signal: ac.signal,\n    })\n\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n\n    const cb = (\n      v: V | undefined,\n      updateCache = false\n    ): V | undefined => {\n      const { aborted } = ac.signal\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\n      if (options.status) {\n        if (aborted && !updateCache) {\n          options.status.fetchAborted = true\n          options.status.fetchError = ac.signal.reason\n          if (ignoreAbort) options.status.fetchAbortIgnored = true\n        } else {\n          options.status.fetchResolved = true\n        }\n      }\n      if (aborted && !ignoreAbort && !updateCache) {\n        return fetchFail(ac.signal.reason)\n      }\n      // either we didn't abort, and are still here, or we did, and ignored\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        if (v === undefined) {\n          if (bf.__staleWhileFetching) {\n            this.#valList[index as Index] = bf.__staleWhileFetching\n          } else {\n            this.#delete(k, 'fetch')\n          }\n        } else {\n          if (options.status) options.status.fetchUpdated = true\n          this.set(k, v, fetchOpts.options)\n        }\n      }\n      return v\n    }\n\n    const eb = (er: any) => {\n      if (options.status) {\n        options.status.fetchRejected = true\n        options.status.fetchError = er\n      }\n      return fetchFail(er)\n    }\n\n    const fetchFail = (er: any): V | undefined => {\n      const { aborted } = ac.signal\n      const allowStaleAborted =\n        aborted && options.allowStaleOnFetchAbort\n      const allowStale =\n        allowStaleAborted || options.allowStaleOnFetchRejection\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        // if we allow stale on fetch rejections, then we need to ensure that\n        // the stale value is not removed from the cache when the fetch fails.\n        const del = !noDelete || bf.__staleWhileFetching === undefined\n        if (del) {\n          this.#delete(k, 'fetch')\n        } else if (!allowStaleAborted) {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          // leave it untouched if we're still waiting for an\n          // aborted background fetch that hasn't yet returned.\n          this.#valList[index as Index] = bf.__staleWhileFetching\n        }\n      }\n      if (allowStale) {\n        if (options.status && bf.__staleWhileFetching !== undefined) {\n          options.status.returnedStale = true\n        }\n        return bf.__staleWhileFetching\n      } else if (bf.__returned === bf) {\n        throw er\n      }\n    }\n\n    const pcall = (\n      res: (v: V | undefined) => void,\n      rej: (e: any) => void\n    ) => {\n      const fmp = this.#fetchMethod?.(k, v, fetchOpts)\n      if (fmp && fmp instanceof Promise) {\n        fmp.then(v => res(v === undefined ? undefined : v), rej)\n      }\n      // ignored, we go until we finish, regardless.\n      // defer check until we are actually aborting,\n      // so fetchMethod can override.\n      ac.signal.addEventListener('abort', () => {\n        if (\n          !options.ignoreFetchAbort ||\n          options.allowStaleOnFetchAbort\n        ) {\n          res(undefined)\n          // when it eventually resolves, update the cache.\n          if (options.allowStaleOnFetchAbort) {\n            res = v => cb(v, true)\n          }\n        }\n      })\n    }\n\n    if (options.status) options.status.fetchDispatched = true\n    const p = new Promise(pcall).then(cb, eb)\n    const bf: BackgroundFetch<V> = Object.assign(p, {\n      __abortController: ac,\n      __staleWhileFetching: v,\n      __returned: undefined,\n    })\n\n    if (index === undefined) {\n      // internal, don't expose status.\n      this.set(k, bf, { ...fetchOpts.options, status: undefined })\n      index = this.#keyMap.get(k)\n    } else {\n      this.#valList[index] = bf\n    }\n    return bf\n  }\n\n  #isBackgroundFetch(p: any): p is BackgroundFetch<V> {\n    if (!this.#hasFetchMethod) return false\n    const b = p as BackgroundFetch<V>\n    return (\n      !!b &&\n      b instanceof Promise &&\n      b.hasOwnProperty('__staleWhileFetching') &&\n      b.__abortController instanceof AC\n    )\n  }\n\n  /**\n   * Make an asynchronous cached fetch using the\n   * {@link LRUCache.OptionsBase.fetchMethod} function.\n   *\n   * If the value is in the cache and not stale, then the returned\n   * Promise resolves to the value.\n   *\n   * If not in the cache, or beyond its TTL staleness, then\n   * `fetchMethod(key, staleValue, { options, signal, context })` is\n   * called, and the value returned will be added to the cache once\n   * resolved.\n   *\n   * If called with `allowStale`, and an asynchronous fetch is\n   * currently in progress to reload a stale value, then the former\n   * stale value will be returned.\n   *\n   * If called with `forceRefresh`, then the cached item will be\n   * re-fetched, even if it is not stale. However, if `allowStale` is also\n   * set, then the old value will still be returned. This is useful\n   * in cases where you want to force a reload of a cached value. If\n   * a background fetch is already in progress, then `forceRefresh`\n   * has no effect.\n   *\n   * If multiple fetches for the same key are issued, then they will all be\n   * coalesced into a single call to fetchMethod.\n   *\n   * Note that this means that handling options such as\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort},\n   * {@link LRUCache.FetchOptions.signal},\n   * and {@link LRUCache.OptionsBase.allowStaleOnFetchRejection} will be\n   * determined by the FIRST fetch() call for a given key.\n   *\n   * This is a known (fixable) shortcoming which will be addresed on when\n   * someone complains about it, as the fix would involve added complexity and\n   * may not be worth the costs for this edge case.\n   *\n   * If {@link LRUCache.OptionsBase.fetchMethod} is not specified, then this is\n   * effectively an alias for `Promise.resolve(cache.get(key))`.\n   *\n   * When the fetch method resolves to a value, if the fetch has not\n   * been aborted due to deletion, eviction, or being overwritten,\n   * then it is added to the cache using the options provided.\n   *\n   * If the key is evicted or deleted before the `fetchMethod`\n   * resolves, then the AbortSignal passed to the `fetchMethod` will\n   * receive an `abort` event, and the promise returned by `fetch()`\n   * will reject with the reason for the abort.\n   *\n   * If a `signal` is passed to the `fetch()` call, then aborting the\n   * signal will abort the fetch and cause the `fetch()` promise to\n   * reject with the reason provided.\n   *\n   * **Setting `context`**\n   *\n   * If an `FC` type is set to a type other than `unknown`, `void`, or\n   * `undefined` in the {@link LRUCache} constructor, then all\n   * calls to `cache.fetch()` _must_ provide a `context` option. If\n   * set to `undefined` or `void`, then calls to fetch _must not_\n   * provide a `context` option.\n   *\n   * The `context` param allows you to provide arbitrary data that\n   * might be relevant in the course of fetching the data. It is only\n   * relevant for the course of a single `fetch()` operation, and\n   * discarded afterwards.\n   *\n   * **Note: `fetch()` calls are inflight-unique**\n   *\n   * If you call `fetch()` multiple times with the same key value,\n   * then every call after the first will resolve on the same\n   * promise<sup>1</sup>,\n   * _even if they have different settings that would otherwise change\n   * the behavior of the fetch_, such as `noDeleteOnFetchRejection`\n   * or `ignoreFetchAbort`.\n   *\n   * In most cases, this is not a problem (in fact, only fetching\n   * something once is what you probably want, if you're caching in\n   * the first place). If you are changing the fetch() options\n   * dramatically between runs, there's a good chance that you might\n   * be trying to fit divergent semantics into a single object, and\n   * would be better off with multiple cache instances.\n   *\n   * **1**: Ie, they're not the \"same Promise\", but they resolve at\n   * the same time, because they're both waiting on the same\n   * underlying fetchMethod response.\n   */\n\n  fetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<undefined | V>\n\n  // this overload not allowed if context is required\n  fetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<undefined | V>\n\n  async fetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<undefined | V> {\n    const {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      context,\n      forceRefresh = false,\n      status,\n      signal,\n    } = fetchOptions\n\n    if (!this.#hasFetchMethod) {\n      if (status) status.fetch = 'get'\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        status,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n      status,\n      signal,\n    }\n\n    let index = this.#keyMap.get(k)\n    if (index === undefined) {\n      if (status) status.fetch = 'miss'\n      const p = this.#backgroundFetch(k, index, options, context)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        const stale =\n          allowStale && v.__staleWhileFetching !== undefined\n        if (status) {\n          status.fetch = 'inflight'\n          if (stale) status.returnedStale = true\n        }\n        return stale ? v.__staleWhileFetching : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      const isStale = this.#isStale(index)\n      if (!forceRefresh && !isStale) {\n        if (status) status.fetch = 'hit'\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        if (status) this.#statusTTL(status, index)\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.#backgroundFetch(k, index, options, context)\n      const hasStale = p.__staleWhileFetching !== undefined\n      const staleVal = hasStale && allowStale\n      if (status) {\n        status.fetch = isStale ? 'stale' : 'refresh'\n        if (staleVal && isStale) status.returnedStale = true\n      }\n      return staleVal ? p.__staleWhileFetching : (p.__returned = p)\n    }\n  }\n\n  /**\n   * In some cases, `cache.fetch()` may resolve to `undefined`, either because\n   * a {@link LRUCache.OptionsBase#fetchMethod} was not provided (turning\n   * `cache.fetch(k)` into just an async wrapper around `cache.get(k)`) or\n   * because `ignoreFetchAbort` was specified (either to the constructor or\n   * in the {@link LRUCache.FetchOptions}). Also, the\n   * {@link OptionsBase.fetchMethod} may return `undefined` or `void`, making\n   * the test even more complicated.\n   *\n   * Because inferring the cases where `undefined` might be returned are so\n   * cumbersome, but testing for `undefined` can also be annoying, this method\n   * can be used, which will reject if `this.fetch()` resolves to undefined.\n   */\n  forceFetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<V>\n  // this overload not allowed if context is required\n  forceFetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<V>\n  async forceFetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<V> {\n    const v = await this.fetch(\n      k,\n      fetchOptions as unknown extends FC\n        ? LRUCache.FetchOptions<K, V, FC>\n        : FC extends undefined | void\n        ? LRUCache.FetchOptionsNoContext<K, V>\n        : LRUCache.FetchOptionsWithContext<K, V, FC>\n    )\n    if (v === undefined) throw new Error('fetch() returned undefined')\n    return v\n  }\n\n  /**\n   * If the key is found in the cache, then this is equivalent to\n   * {@link LRUCache#get}. If not, in the cache, then calculate the value using\n   * the {@link LRUCache.OptionsBase.memoMethod}, and add it to the cache.\n   *\n   * If an `FC` type is set to a type other than `unknown`, `void`, or\n   * `undefined` in the LRUCache constructor, then all calls to `cache.memo()`\n   * _must_ provide a `context` option. If set to `undefined` or `void`, then\n   * calls to memo _must not_ provide a `context` option.\n   *\n   * The `context` param allows you to provide arbitrary data that might be\n   * relevant in the course of fetching the data. It is only relevant for the\n   * course of a single `memo()` operation, and discarded afterwards.\n   */\n  memo(\n    k: K,\n    memoOptions: unknown extends FC\n      ? LRUCache.MemoOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.MemoOptionsNoContext<K, V>\n      : LRUCache.MemoOptionsWithContext<K, V, FC>\n  ): V\n  // this overload not allowed if context is required\n  memo(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    memoOptions?: unknown extends FC\n      ? LRUCache.MemoOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.MemoOptionsNoContext<K, V>\n      : never\n  ): V\n  memo(k: K, memoOptions: LRUCache.MemoOptions<K, V, FC> = {}) {\n    const memoMethod = this.#memoMethod\n    if (!memoMethod) {\n      throw new Error('no memoMethod provided to constructor')\n    }\n    const { context, forceRefresh, ...options } = memoOptions\n    const v = this.get(k, options)\n    if (!forceRefresh && v !== undefined) return v\n    const vv = memoMethod(k, v, {\n      options,\n      context,\n    } as LRUCache.MemoizerOptions<K, V, FC>)\n    this.set(k, vv, options)\n    return vv\n  }\n\n  /**\n   * Return a value from the cache. Will update the recency of the cache\n   * entry found.\n   *\n   * If the key is not found, get() will return `undefined`.\n   */\n  get(k: K, getOptions: LRUCache.GetOptions<K, V, FC> = {}) {\n    const {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status,\n    } = getOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.#valList[index]\n      const fetching = this.#isBackgroundFetch(value)\n      if (status) this.#statusTTL(status, index)\n      if (this.#isStale(index)) {\n        if (status) status.get = 'stale'\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.#delete(k, 'expire')\n          }\n          if (status && allowStale) status.returnedStale = true\n          return allowStale ? value : undefined\n        } else {\n          if (\n            status &&\n            allowStale &&\n            value.__staleWhileFetching !== undefined\n          ) {\n            status.returnedStale = true\n          }\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        if (status) status.get = 'hit'\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching.\n        // If it's not stale, and fetching, AND has a __staleWhileFetching\n        // value, then that means the user fetched with {forceRefresh:true},\n        // so it's safe to return that value.\n        if (fetching) {\n          return value.__staleWhileFetching\n        }\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        return value\n      }\n    } else if (status) {\n      status.get = 'miss'\n    }\n  }\n\n  #connect(p: Index, n: Index) {\n    this.#prev[n] = p\n    this.#next[p] = n\n  }\n\n  #moveToTail(index: Index): void {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.#tail) {\n      if (index === this.#head) {\n        this.#head = this.#next[index] as Index\n      } else {\n        this.#connect(\n          this.#prev[index] as Index,\n          this.#next[index] as Index\n        )\n      }\n      this.#connect(this.#tail, index)\n      this.#tail = index\n    }\n  }\n\n  /**\n   * Deletes a key out of the cache.\n   *\n   * Returns true if the key was deleted, false otherwise.\n   */\n  delete(k: K) {\n    return this.#delete(k, 'delete')\n  }\n\n  #delete(k: K, reason: LRUCache.DisposeReason) {\n    let deleted = false\n    if (this.#size !== 0) {\n      const index = this.#keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.#size === 1) {\n          this.#clear(reason)\n        } else {\n          this.#removeItemSize(index)\n          const v = this.#valList[index]\n          if (this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('deleted'))\n          } else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n              this.#dispose?.(v as V, k, reason)\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([v as V, k, reason])\n            }\n          }\n          this.#keyMap.delete(k)\n          this.#keyList[index] = undefined\n          this.#valList[index] = undefined\n          if (index === this.#tail) {\n            this.#tail = this.#prev[index] as Index\n          } else if (index === this.#head) {\n            this.#head = this.#next[index] as Index\n          } else {\n            const pi = this.#prev[index] as number\n            this.#next[pi] = this.#next[index] as number\n            const ni = this.#next[index] as number\n            this.#prev[ni] = this.#prev[index] as number\n          }\n          this.#size--\n          this.#free.push(index)\n        }\n      }\n    }\n    if (this.#hasDisposeAfter && this.#disposed?.length) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Clear the cache entirely, throwing away all values.\n   */\n  clear() {\n    return this.#clear('delete')\n  }\n  #clear(reason: LRUCache.DisposeReason) {\n    for (const index of this.#rindexes({ allowStale: true })) {\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error('deleted'))\n      } else {\n        const k = this.#keyList[index]\n        if (this.#hasDispose) {\n          this.#dispose?.(v as V, k as K, reason)\n        }\n        if (this.#hasDisposeAfter) {\n          this.#disposed?.push([v as V, k as K, reason])\n        }\n      }\n    }\n\n    this.#keyMap.clear()\n    this.#valList.fill(undefined)\n    this.#keyList.fill(undefined)\n    if (this.#ttls && this.#starts) {\n      this.#ttls.fill(0)\n      this.#starts.fill(0)\n    }\n    if (this.#sizes) {\n      this.#sizes.fill(0)\n    }\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free.length = 0\n    this.#calculatedSize = 0\n    this.#size = 0\n    if (this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/dist/esm/processor.js":{"lineLengths":[69,37,3,65,3,29,10,36,27,5,12,55,5,32,76,5,34,43,48,19,45,12,70,5,1,3,66,72,66,3,26,22,34,55,47,72,5,29,15,61,17,22,22,11,5,1,3,71,20,3,23,22,26,35,19,9,44,19,75,35,13,9,12,46,5,17,44,29,20,63,9,28,20,5,15,60,5,12,66,5,1,3,54,2,66,35,3,24,19,32,30,13,11,8,9,39,25,36,30,29,74,5,39,33,61,72,47,49,56,40,82,46,23,76,34,28,44,28,53,29,17,22,35,17,13,29,25,18,21,32,65,42,39,22,31,31,13,34,34,26,62,29,60,13,67,49,62,40,67,43,66,64,25,13,38,56,60,72,76,80,42,34,52,50,17,43,43,69,69,65,75,17,22,38,80,80,45,49,44,35,65,77,57,25,21,17,13,43,46,13,9,20,5,22,36,5,13,61,5,62,45,49,31,36,51,65,37,34,45,54,44,44,37,69,17,47,61,17,22,61,17,13,9,23,5,46,50,37,53,13,33,75,80,79,81,71,57,50,17,46,64,51,21,60,54,21,17,13,9,62,20,19,38,41,54,30,28,29,62,13,35,37,41,36,44,13,44,62,13,9,5,38,28,19,20,49,9,14,39,9,5,38,31,26,19,20,49,9,14,39,9,5,1,37],"data":{"version":3,"file":"processor.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/glob@10.4.5/node_modules/glob/src/processor.ts"],"names":[],"mappings":"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","sourcesContent":["// synchronous utility for filtering entries and calculating subwalks\n\nimport { GLOBSTAR, MMRegExp } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { MMPattern, Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\n/**\n * A cache of which patterns have been processed for a given Path\n */\nexport class HasWalkedCache {\n  store: Map<string, Set<string>>\n  constructor(store: Map<string, Set<string>> = new Map()) {\n    this.store = store\n  }\n  copy() {\n    return new HasWalkedCache(new Map(this.store))\n  }\n  hasWalked(target: Path, pattern: Pattern) {\n    return this.store.get(target.fullpath())?.has(pattern.globString())\n  }\n  storeWalked(target: Path, pattern: Pattern) {\n    const fullpath = target.fullpath()\n    const cached = this.store.get(fullpath)\n    if (cached) cached.add(pattern.globString())\n    else this.store.set(fullpath, new Set([pattern.globString()]))\n  }\n}\n\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nexport class MatchRecord {\n  store: Map<Path, number> = new Map()\n  add(target: Path, absolute: boolean, ifDir: boolean) {\n    const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0)\n    const current = this.store.get(target)\n    this.store.set(target, current === undefined ? n : n & current)\n  }\n  // match, absolute, ifdir\n  entries(): [Path, boolean, boolean][] {\n    return [...this.store.entries()].map(([path, n]) => [\n      path,\n      !!(n & 2),\n      !!(n & 1),\n    ])\n  }\n}\n\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nexport class SubWalks {\n  store: Map<Path, Pattern[]> = new Map()\n  add(target: Path, pattern: Pattern) {\n    if (!target.canReaddir()) {\n      return\n    }\n    const subs = this.store.get(target)\n    if (subs) {\n      if (!subs.find(p => p.globString() === pattern.globString())) {\n        subs.push(pattern)\n      }\n    } else this.store.set(target, [pattern])\n  }\n  get(target: Path): Pattern[] {\n    const subs = this.store.get(target)\n    /* c8 ignore start */\n    if (!subs) {\n      throw new Error('attempting to walk unknown path')\n    }\n    /* c8 ignore stop */\n    return subs\n  }\n  entries(): [Path, Pattern[]][] {\n    return this.keys().map(k => [k, this.store.get(k) as Pattern[]])\n  }\n  keys(): Path[] {\n    return [...this.store.keys()].filter(t => t.canReaddir())\n  }\n}\n\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nexport class Processor {\n  hasWalkedCache: HasWalkedCache\n  matches = new MatchRecord()\n  subwalks = new SubWalks()\n  patterns?: Pattern[]\n  follow: boolean\n  dot: boolean\n  opts: GlobWalkerOpts\n\n  constructor(opts: GlobWalkerOpts, hasWalkedCache?: HasWalkedCache) {\n    this.opts = opts\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.hasWalkedCache =\n      hasWalkedCache ? hasWalkedCache.copy() : new HasWalkedCache()\n  }\n\n  processPatterns(target: Path, patterns: Pattern[]) {\n    this.patterns = patterns\n    const processingSet: [Path, Pattern][] = patterns.map(p => [target, p])\n\n    // map of paths to the magic-starting subwalks they need to walk\n    // first item in patterns is the filter\n\n    for (let [t, pattern] of processingSet) {\n      this.hasWalkedCache.storeWalked(t, pattern)\n\n      const root = pattern.root()\n      const absolute = pattern.isAbsolute() && this.opts.absolute !== false\n\n      // start absolute patterns at root\n      if (root) {\n        t = t.resolve(\n          root === '/' && this.opts.root !== undefined ?\n            this.opts.root\n          : root,\n        )\n        const rest = pattern.rest()\n        if (!rest) {\n          this.matches.add(t, true, false)\n          continue\n        } else {\n          pattern = rest\n        }\n      }\n\n      if (t.isENOENT()) continue\n\n      let p: MMPattern\n      let rest: Pattern | null\n      let changed = false\n      while (\n        typeof (p = pattern.pattern()) === 'string' &&\n        (rest = pattern.rest())\n      ) {\n        const c = t.resolve(p)\n        t = c\n        pattern = rest\n        changed = true\n      }\n      p = pattern.pattern()\n      rest = pattern.rest()\n      if (changed) {\n        if (this.hasWalkedCache.hasWalked(t, pattern)) continue\n        this.hasWalkedCache.storeWalked(t, pattern)\n      }\n\n      // now we have either a final string for a known entry,\n      // more strings for an unknown entry,\n      // or a pattern starting with magic, mounted on t.\n      if (typeof p === 'string') {\n        // must not be final entry, otherwise we would have\n        // concatenated it earlier.\n        const ifDir = p === '..' || p === '' || p === '.'\n        this.matches.add(t.resolve(p), absolute, ifDir)\n        continue\n      } else if (p === GLOBSTAR) {\n        // if no rest, match and subwalk pattern\n        // if rest, process rest and subwalk pattern\n        // if it's a symlink, but we didn't get here by way of a\n        // globstar match (meaning it's the first time THIS globstar\n        // has traversed a symlink), then we follow it. Otherwise, stop.\n        if (\n          !t.isSymbolicLink() ||\n          this.follow ||\n          pattern.checkFollowGlobstar()\n        ) {\n          this.subwalks.add(t, pattern)\n        }\n        const rp = rest?.pattern()\n        const rrest = rest?.rest()\n        if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n          // only HAS to be a dir if it ends in **/ or **/.\n          // but ending in ** will match files as well.\n          this.matches.add(t, absolute, rp === '' || rp === '.')\n        } else {\n          if (rp === '..') {\n            // this would mean you're matching **/.. at the fs root,\n            // and no thanks, I'm not gonna test that specific case.\n            /* c8 ignore start */\n            const tp = t.parent || t\n            /* c8 ignore stop */\n            if (!rrest) this.matches.add(tp, absolute, true)\n            else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n              this.subwalks.add(tp, rrest)\n            }\n          }\n        }\n      } else if (p instanceof RegExp) {\n        this.subwalks.add(t, pattern)\n      }\n    }\n\n    return this\n  }\n\n  subwalkTargets(): Path[] {\n    return this.subwalks.keys()\n  }\n\n  child() {\n    return new Processor(this.opts, this.hasWalkedCache)\n  }\n\n  // return a new Processor containing the subwalks for each\n  // child entry, and a set of matches, and\n  // a hasWalkedCache that's a copy of this one\n  // then we're going to call\n  filterEntries(parent: Path, entries: Path[]): Processor {\n    const patterns = this.subwalks.get(parent)\n    // put matches and entry walks into the results processor\n    const results = this.child()\n    for (const e of entries) {\n      for (const pattern of patterns) {\n        const absolute = pattern.isAbsolute()\n        const p = pattern.pattern()\n        const rest = pattern.rest()\n        if (p === GLOBSTAR) {\n          results.testGlobstar(e, pattern, rest, absolute)\n        } else if (p instanceof RegExp) {\n          results.testRegExp(e, p, rest, absolute)\n        } else {\n          results.testString(e, p, rest, absolute)\n        }\n      }\n    }\n    return results\n  }\n\n  testGlobstar(\n    e: Path,\n    pattern: Pattern,\n    rest: Pattern | null,\n    absolute: boolean,\n  ) {\n    if (this.dot || !e.name.startsWith('.')) {\n      if (!pattern.hasMore()) {\n        this.matches.add(e, absolute, false)\n      }\n      if (e.canReaddir()) {\n        // if we're in follow mode or it's not a symlink, just keep\n        // testing the same pattern. If there's more after the globstar,\n        // then this symlink consumes the globstar. If not, then we can\n        // follow at most ONE symlink along the way, so we mark it, which\n        // also checks to ensure that it wasn't already marked.\n        if (this.follow || !e.isSymbolicLink()) {\n          this.subwalks.add(e, pattern)\n        } else if (e.isSymbolicLink()) {\n          if (rest && pattern.checkFollowGlobstar()) {\n            this.subwalks.add(e, rest)\n          } else if (pattern.markFollowGlobstar()) {\n            this.subwalks.add(e, pattern)\n          }\n        }\n      }\n    }\n    // if the NEXT thing matches this entry, then also add\n    // the rest.\n    if (rest) {\n      const rp = rest.pattern()\n      if (\n        typeof rp === 'string' &&\n        // dots and empty were handled already\n        rp !== '..' &&\n        rp !== '' &&\n        rp !== '.'\n      ) {\n        this.testString(e, rp, rest.rest(), absolute)\n      } else if (rp === '..') {\n        /* c8 ignore start */\n        const ep = e.parent || e\n        /* c8 ignore stop */\n        this.subwalks.add(ep, rest)\n      } else if (rp instanceof RegExp) {\n        this.testRegExp(e, rp, rest.rest(), absolute)\n      }\n    }\n  }\n\n  testRegExp(\n    e: Path,\n    p: MMRegExp,\n    rest: Pattern | null,\n    absolute: boolean,\n  ) {\n    if (!p.test(e.name)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n\n  testString(e: Path, p: string, rest: Pattern | null, absolute: boolean) {\n    // should never happen?\n    if (!e.isNamed(p)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n}\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.29/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js":{"lineLengths":[32,160,136,229,73,13,29,38,55,51,41,51,52,101,2,33,23,66,2,47,71,44,56,123,3,12,2,113,72,67,72,71,114,5,3,91,0,34,42,55,45,3,3,0,30,38,51,41,3,3,0,23,31,33,27,31,51,45,27,59,31,41,33,31,41,51,29,49,49,43,34,3,53,64,0,17,56,0,24,30,23,38,34,1,0,17,39,37,52,84,1,0,27,15,22,20,22,20,27,29,0,14,37,61,57,42,98,51,3,18,1,51,49,41,3,25,1,25,41,48,19,5,3,14,1,36,34,35,1,31,31,1,0,23,18,52,23,40,47,20,19,17,5,18,20,12,21,5,3,16,17,1,46,61,46,3,15,1,46,48,46,3,15,1,26,10,16,19,17,4,1,61,51,14,33,24,32,73,23,5,31,45,12,23,5,3,22,28,69,1,0,19,41,44,44,28,43,26,37,46,42,46,51,91,39,29,21,21,74,8,31,66,5,3,17,1,38,46,28,3,23,1,27,29,1,0,15,21,57,1,0,21,40,28,32,40,3,22,21,28,19,24,10,11,11,13,12,19,10,15,6,6,13,12,4,18,15,22,10,12,19,13,14,4,37,2,135,29,45,40,22,24,34,48,60,28,68,33,46,7,5,15,10,13,15,14,21,12,17,31,35,9,8,6,3,1,138,30,57,43,39,35,39,81,35,27,49,82,100,44,33,33,41,47,28,43,26,43,61,29,27,17,7,62,42,46,15,158,8,5,3,1,29,60,1,30,56,20,1,0,23,76,96,27,29,22,28,45,50,30,81,27,21,29,33,27,41,80,49,48,32,39,31,29,41,29,52,33,100,12,71,5,40,29,33,3,2,20,13,1,31,13,126,1,31,9,109,1,42,39,42,33,37,13,27,9,11,24,4,47,1,43,38,9,47,51,39,70,33,37,13,27,9,11,32,4,60,34,68,41,18,44,29,27,61,4,1,44,48,91,1,48,48,87,1,31,39,41,44,28,43,26,34,37,24,30,32,22,29,41,34,32,7,49,10,22,24,15,21,23,12,9,5,3,1,35,43,38,60,15,1,40,33,42,41,53,1,33,29,39,41,59,1,43,54,39,16,1,26,42,1,26,42,1,31,10,25,19,21,31,25,39,13,57,4,1,47,40,1,33,26,1,67,65,14,92,49,59,15,1,70,85,50,55,63,61,55,20,29,34,90,3,16,1,66,9,9,47,51,43,45,74,66,83,25,57,5,49,63,54,78,73,48,34,82,1,4,45,0],"data":{"version":3,"sources":["umd:@jridgewell/sourcemap-codec","umd:@jridgewell/resolve-uri","file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.29/node_modules/@jridgewell/trace-mapping/src/trace-mapping.ts","file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.29/node_modules/@jridgewell/trace-mapping/src/resolve.ts","file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.29/node_modules/@jridgewell/trace-mapping/src/strip-filename.ts","file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.29/node_modules/@jridgewell/trace-mapping/src/sourcemap-segment.ts","file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.29/node_modules/@jridgewell/trace-mapping/src/sort.ts","file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.29/node_modules/@jridgewell/trace-mapping/src/binary-search.ts","file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.29/node_modules/@jridgewell/trace-mapping/src/by-source.ts","file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.29/node_modules/@jridgewell/trace-mapping/src/types.ts","file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+trace-mapping@0.3.29/node_modules/@jridgewell/trace-mapping/src/flatten-map.ts"],"mappings":"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","names":["module","module","resolveUri","sourceIndex","sourceIndex"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+resolve-uri@3.1.2/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js":{"lineLengths":[29,95,66,110,37,0,48,41,7,34,44,49,27,40,40,41,40,7,96,7,101,102,6,25,50,41,40,7,88,35,39,5,41,38,5,36,37,5,31,41,5,32,36,5,38,43,124,5,34,44,30,130,5,67,16,19,17,17,17,17,18,17,35,10,5,30,41,58,28,46,23,9,36,67,28,26,44,23,9,29,39,33,43,64,24,22,24,35,31,39,34,42,28,19,5,38,100,56,33,24,44,40,5,36,39,105,17,31,33,9,14,86,63,9,5,7,96,66,7,39,49,43,101,40,24,104,100,25,105,101,93,37,49,36,96,25,40,25,13,86,37,61,30,25,104,74,33,31,44,31,30,17,31,112,101,46,17,25,13,108,49,38,23,9,22,43,36,9,67,24,9,24,5,7,63,7,35,28,22,36,33,53,43,42,32,35,44,31,34,46,31,35,42,45,31,42,98,44,44,44,31,44,103,48,13,37,37,9,38,47,28,92,34,30,31,33,40,81,47,26,44,69,108,104,87,51,17,40,13,38,44,20,97,9,5,0,19,0,4,43,0],"data":{"version":3,"file":"resolve-uri.umd.js","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+resolve-uri@3.1.2/node_modules/@jridgewell/resolve-uri/src/resolve-uri.ts"],"sourcesContent":["// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n * 6. Query, including \"?\", optional.\n * 7. Hash, including \"#\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\n\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may include \"/\", guaranteed.\n * 3. Query, including \"?\", optional.\n * 4. Hash, including \"#\", optional.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\n\ntype Url = {\n  scheme: string;\n  user: string;\n  host: string;\n  port: string;\n  path: string;\n  query: string;\n  hash: string;\n  type: UrlType;\n};\n\nconst enum UrlType {\n  Empty = 1,\n  Hash = 2,\n  Query = 3,\n  RelativePath = 4,\n  AbsolutePath = 5,\n  SchemeRelative = 6,\n  Absolute = 7,\n}\n\nfunction isAbsoluteUrl(input: string): boolean {\n  return schemeRegex.test(input);\n}\n\nfunction isSchemeRelativeUrl(input: string): boolean {\n  return input.startsWith('//');\n}\n\nfunction isAbsolutePath(input: string): boolean {\n  return input.startsWith('/');\n}\n\nfunction isFileUrl(input: string): boolean {\n  return input.startsWith('file:');\n}\n\nfunction isRelative(input: string): boolean {\n  return /^[.?#]/.test(input);\n}\n\nfunction parseAbsoluteUrl(input: string): Url {\n  const match = urlRegex.exec(input)!;\n  return makeUrl(\n    match[1],\n    match[2] || '',\n    match[3],\n    match[4] || '',\n    match[5] || '/',\n    match[6] || '',\n    match[7] || '',\n  );\n}\n\nfunction parseFileUrl(input: string): Url {\n  const match = fileRegex.exec(input)!;\n  const path = match[2];\n  return makeUrl(\n    'file:',\n    '',\n    match[1] || '',\n    '',\n    isAbsolutePath(path) ? path : '/' + path,\n    match[3] || '',\n    match[4] || '',\n  );\n}\n\nfunction makeUrl(\n  scheme: string,\n  user: string,\n  host: string,\n  port: string,\n  path: string,\n  query: string,\n  hash: string,\n): Url {\n  return {\n    scheme,\n    user,\n    host,\n    port,\n    path,\n    query,\n    hash,\n    type: UrlType.Absolute,\n  };\n}\n\nfunction parseUrl(input: string): Url {\n  if (isSchemeRelativeUrl(input)) {\n    const url = parseAbsoluteUrl('http:' + input);\n    url.scheme = '';\n    url.type = UrlType.SchemeRelative;\n    return url;\n  }\n\n  if (isAbsolutePath(input)) {\n    const url = parseAbsoluteUrl('http://foo.com' + input);\n    url.scheme = '';\n    url.host = '';\n    url.type = UrlType.AbsolutePath;\n    return url;\n  }\n\n  if (isFileUrl(input)) return parseFileUrl(input);\n\n  if (isAbsoluteUrl(input)) return parseAbsoluteUrl(input);\n\n  const url = parseAbsoluteUrl('http://foo.com/' + input);\n  url.scheme = '';\n  url.host = '';\n  url.type = input\n    ? input.startsWith('?')\n      ? UrlType.Query\n      : input.startsWith('#')\n      ? UrlType.Hash\n      : UrlType.RelativePath\n    : UrlType.Empty;\n  return url;\n}\n\nfunction stripPathFilename(path: string): string {\n  // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n  // paths. It's not a file, so we can't strip it.\n  if (path.endsWith('/..')) return path;\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n\nfunction mergePaths(url: Url, base: Url) {\n  normalizePath(base, base.type);\n\n  // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n  // path).\n  if (url.path === '/') {\n    url.path = base.path;\n  } else {\n    // Resolution happens relative to the base path's directory, not the file.\n    url.path = stripPathFilename(base.path) + url.path;\n  }\n}\n\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath(url: Url, type: UrlType) {\n  const rel = type <= UrlType.RelativePath;\n  const pieces = url.path.split('/');\n\n  // We need to preserve the first piece always, so that we output a leading slash. The item at\n  // pieces[0] is an empty string.\n  let pointer = 1;\n\n  // Positive is the number of real directories we've output, used for popping a parent directory.\n  // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n  let positive = 0;\n\n  // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n  // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n  // real directory, we won't need to append, unless the other conditions happen again.\n  let addTrailingSlash = false;\n\n  for (let i = 1; i < pieces.length; i++) {\n    const piece = pieces[i];\n\n    // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n    if (!piece) {\n      addTrailingSlash = true;\n      continue;\n    }\n\n    // If we encounter a real directory, then we don't need to append anymore.\n    addTrailingSlash = false;\n\n    // A current directory, which we can always drop.\n    if (piece === '.') continue;\n\n    // A parent directory, we need to see if there are any real directories we can pop. Else, we\n    // have an excess of parents, and we'll need to keep the \"..\".\n    if (piece === '..') {\n      if (positive) {\n        addTrailingSlash = true;\n        positive--;\n        pointer--;\n      } else if (rel) {\n        // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n        // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n        pieces[pointer++] = piece;\n      }\n      continue;\n    }\n\n    // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n    // any popped or dropped directories.\n    pieces[pointer++] = piece;\n    positive++;\n  }\n\n  let path = '';\n  for (let i = 1; i < pointer; i++) {\n    path += '/' + pieces[i];\n  }\n  if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n    path += '/';\n  }\n  url.path = path;\n}\n\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nexport default function resolve(input: string, base: string | undefined): string {\n  if (!input && !base) return '';\n\n  const url = parseUrl(input);\n  let inputType = url.type;\n\n  if (base && inputType !== UrlType.Absolute) {\n    const baseUrl = parseUrl(base);\n    const baseType = baseUrl.type;\n\n    switch (inputType) {\n      case UrlType.Empty:\n        url.hash = baseUrl.hash;\n      // fall through\n\n      case UrlType.Hash:\n        url.query = baseUrl.query;\n      // fall through\n\n      case UrlType.Query:\n      case UrlType.RelativePath:\n        mergePaths(url, baseUrl);\n      // fall through\n\n      case UrlType.AbsolutePath:\n        // The host, user, and port are joined, you can't copy one without the others.\n        url.user = baseUrl.user;\n        url.host = baseUrl.host;\n        url.port = baseUrl.port;\n      // fall through\n\n      case UrlType.SchemeRelative:\n        // The input doesn't have a schema at least, so we need to copy at least that over.\n        url.scheme = baseUrl.scheme;\n    }\n    if (baseType > inputType) inputType = baseType;\n  }\n\n  normalizePath(url, inputType);\n\n  const queryHash = url.query + url.hash;\n  switch (inputType) {\n    // This is impossible, because of the empty checks at the start of the function.\n    // case UrlType.Empty:\n\n    case UrlType.Hash:\n    case UrlType.Query:\n      return queryHash;\n\n    case UrlType.RelativePath: {\n      // The first char is always a \"/\", and we need it to be relative.\n      const path = url.path.slice(1);\n\n      if (!path) return queryHash || '.';\n\n      if (isRelative(base || input) && !isRelative(path)) {\n        // If base started with a leading \".\", or there is no base and input started with a \".\",\n        // then we need to ensure that the relative path starts with a \".\". We don't know if\n        // relative starts with a \"..\", though, so check before prepending.\n        return './' + path + queryHash;\n      }\n\n      return path + queryHash;\n    }\n\n    case UrlType.AbsolutePath:\n      return url.path + queryHash;\n\n    default:\n      return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\n  }\n}\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+sourcemap-codec@1.5.4/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js":{"lineLengths":[32,84,78,189,29,13,38,55,51,51,33,23,66,2,47,71,44,56,123,3,12,2,91,0,25,33,35,23,53,51,23,53,50,3,55,0,13,30,34,79,35,36,40,32,19,19,1,42,16,16,18,6,28,27,37,15,25,33,15,21,33,3,26,1,48,29,51,6,29,17,33,38,22,13,1,34,38,33,1,0,17,26,115,15,72,26,3,5,15,17,42,41,5,15,3,2,26,17,17,18,44,3,12,28,27,33,36,19,5,3,11,38,68,3,2,26,23,17,25,3,10,46,3,10,44,3,17,33,42,44,3,2,0,16,15,38,27,41,20,19,15,45,39,44,38,31,21,23,15,5,42,44,31,110,21,37,16,10,51,29,43,5,22,23,22,3,16,1,39,36,40,54,3,24,1,62,30,90,37,56,40,33,44,35,61,25,32,3,42,31,32,57,12,5,64,3,22,54,38,15,1,39,27,41,20,19,18,33,31,31,23,25,22,24,6,37,22,45,51,38,33,26,28,17,7,46,39,37,34,26,27,16,26,78,45,17,79,10,49,82,14,43,7,33,24,45,38,75,60,76,39,17,70,10,72,7,32,37,22,12,32,36,60,31,38,60,57,41,63,96,58,78,13,18,52,11,42,43,7,32,25,24,5,14,26,32,16,1,40,37,36,40,73,3,24,1,63,30,9,17,19,15,17,12,13,12,12,29,45,25,17,25,24,3,55,87,35,27,54,36,19,5,61,60,3,17,75,36,19,19,39,19,5,61,57,59,3,17,37,72,39,43,39,43,48,36,80,84,46,7,5,3,42,31,32,57,12,5,65,3,27,43,23,17,10,24,3,56,15,1,46,6,28,30,1,0,25,27,30,44,21,20,23,21,23,21,6,37,20,22,20,18,31,14,51,46,26,37,59,55,59,39,57,80,16,68,9,14,26,7,21,19,5,28,23,26,33,17,1,21,28,1,31,21,1,26,36,23,21,23,21,44,28,39,36,22,43,30,37,63,41,69,65,69,41,65,5,3,24,1,4,47,0],"data":{"version":3,"sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+sourcemap-codec@1.5.4/node_modules/@jridgewell/sourcemap-codec/src/sourcemap-codec.ts","file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+sourcemap-codec@1.5.4/node_modules/@jridgewell/sourcemap-codec/src/vlq.ts","file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+sourcemap-codec@1.5.4/node_modules/@jridgewell/sourcemap-codec/src/strings.ts","file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/@jridgewell+sourcemap-codec@1.5.4/node_modules/@jridgewell/sourcemap-codec/src/scopes.ts"],"mappings":"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","names":[],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/http-proxy-agent@7.0.2/node_modules/http-proxy-agent/dist/index.js":{"lineLengths":[13,97,33,53,88,68,5,39,29,33,17,4,96,72,21,21,3,66,42,20,141,36,18,2,72,62,2,62,32,41,41,50,35,43,29,55,3,71,72,3,49,30,20,78,48,75,52,86,36,43,46,21,21,28,53,17,17,10,5,27,27,40,73,36,5,32,31,66,62,48,50,31,41,9,66,66,31,64,63,33,39,47,103,93,9,43,56,30,26,9,50,40,24,43,13,9,5,30,27,40,44,9,75,75,74,18,25,68,30,58,83,43,57,36,60,63,9,58,19,47,65,51,9,14,65,51,9,75,75,77,61,52,22,5,1,45,40,29,19,12,22,34,32,9,5,15,1,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/http-proxy-agent@7.0.2/node_modules/http-proxy-agent/src/index.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/agent-base@7.1.4/node_modules/agent-base/dist/index.js":{"lineLengths":[13,97,33,53,88,68,5,39,29,33,17,4,96,72,21,21,3,66,42,20,141,36,18,2,72,126,2,62,23,41,43,33,44,50,32,23,20,28,5,7,62,7,31,22,79,81,74,62,46,13,80,79,65,55,53,13,9,72,73,37,38,38,25,20,24,58,45,5,76,79,77,81,70,26,28,83,81,33,80,24,9,73,80,45,34,70,36,9,63,44,77,32,26,5,36,53,19,9,43,46,27,37,82,36,39,74,42,13,9,5,82,56,22,62,29,74,71,9,70,38,5,36,29,23,59,10,47,55,25,55,31,52,47,21,85,63,17,29,35,17,13,50,79,49,21,52,20,11,5,24,52,49,22,82,9,22,5,23,45,53,5,24,29,43,9,5,20,42,60,5,21,29,40,9,5,1,22,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/agent-base@7.1.4/node_modules/agent-base/src/index.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/agent-base@7.1.4/node_modules/agent-base/dist/helpers.js":{"lineLengths":[13,97,33,53,88,68,5,39,29,33,17,4,96,72,21,21,3,66,42,20,141,36,18,2,62,55,43,45,33,19,22,39,31,27,5,41,1,28,62,29,39,37,9,31,5,18,25,42,18,5,1,20,30,58,78,54,11,38,34,19,7,42,15,1,18,35],"data":{"version":3,"file":"helpers.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/agent-base@7.1.4/node_modules/agent-base/src/helpers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2CAA6B;AAC7B,6CAA+B;AAOxB,KAAK,UAAU,QAAQ,CAAC,MAAgB;IAC9C,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,MAAM,MAAM,GAAa,EAAE,CAAC;IAC5B,IAAI,KAAK,EAAE,MAAM,KAAK,IAAI,MAAM,EAAE;QACjC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC;QACvB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACnB;IACD,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACtC,CAAC;AARD,4BAQC;AAED,8DAA8D;AACvD,KAAK,UAAU,IAAI,CAAC,MAAgB;IAC1C,MAAM,GAAG,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC,CAAC;IACnC,MAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACjC,IAAI;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KACvB;IAAC,OAAO,IAAa,EAAE;QACvB,MAAM,GAAG,GAAG,IAAa,CAAC;QAC1B,GAAG,CAAC,OAAO,IAAI,YAAY,GAAG,GAAG,CAAC;QAClC,MAAM,GAAG,CAAC;KACV;AACF,CAAC;AAVD,oBAUC;AAED,SAAgB,GAAG,CAClB,GAAiB,EACjB,OAA6B,EAAE;IAE/B,MAAM,IAAI,GAAG,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;IACtD,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAC7D,GAAG,EACH,IAAI,CACe,CAAC;IACrB,MAAM,OAAO,GAAG,IAAI,OAAO,CAAuB,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrE,GAAG;aACD,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC;aACzB,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;aACrB,GAAG,EAAqB,CAAC;IAC5B,CAAC,CAAC,CAAC;IACH,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtC,OAAO,GAAG,CAAC;AACZ,CAAC;AAjBD,kBAiBC"},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/https-proxy-agent@7.0.6/node_modules/https-proxy-agent/dist/index.js":{"lineLengths":[13,97,33,53,88,68,5,39,29,33,17,4,96,72,21,21,3,66,42,20,141,36,18,2,72,62,2,62,33,41,41,52,50,43,29,65,56,49,43,23,34,16,23,37,10,5,19,2,3,75,73,2,79,79,78,38,2,70,59,3,50,30,20,43,78,48,76,52,86,36,43,46,21,21,28,82,40,53,17,17,10,5,7,66,24,7,30,31,25,54,9,58,19,42,65,79,9,14,65,51,9,63,33,39,74,66,64,47,103,93,9,46,43,56,30,26,9,50,55,9,92,39,65,42,48,41,39,38,70,62,60,36,86,27,19,13,26,9,76,74,73,29,73,66,76,27,10,52,25,63,35,76,35,63,63,76,74,24,29,25,11,26,5,1,46,42,25,20,1,29,19,12,22,34,32,9,5,15,1,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/https-proxy-agent@7.0.6/node_modules/https-proxy-agent/src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAA2B;AAC3B,yCAA2B;AAE3B,oDAA4B;AAC5B,kDAAgC;AAChC,2CAAqD;AACrD,6BAA0B;AAC1B,iEAA4D;AAG5D,MAAM,KAAK,GAAG,IAAA,eAAW,EAAC,mBAAmB,CAAC,CAAC;AAE/C,MAAM,0BAA0B,GAAG,CAGlC,OAAU,EACT,EAAE;IACH,IACC,OAAO,CAAC,UAAU,KAAK,SAAS;QAChC,OAAO,CAAC,IAAI;QACZ,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EACtB;QACD,OAAO;YACN,GAAG,OAAO;YACV,UAAU,EAAE,OAAO,CAAC,IAAI;SACxB,CAAC;KACF;IACD,OAAO,OAAO,CAAC;AAChB,CAAC,CAAC;AAqBF;;;;;;;;;;;GAWG;AACH,MAAa,eAAoC,SAAQ,kBAAK;IAO7D,YAAY,KAAgB,EAAE,IAAkC;QAC/D,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,OAAO,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;QACnC,IAAI,CAAC,KAAK,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,SAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAChE,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,OAAO,IAAI,EAAE,CAAC;QACxC,KAAK,CAAC,2CAA2C,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAEpE,4CAA4C;QAC5C,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAC5D,UAAU,EACV,EAAE,CACF,CAAC;QACF,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI;YAC3B,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC;YAC/B,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,QAAQ;gBAClC,CAAC,CAAC,GAAG;gBACL,CAAC,CAAC,EAAE,CAAC;QACN,IAAI,CAAC,WAAW,GAAG;YAClB,sEAAsE;YACtE,aAAa,EAAE,CAAC,UAAU,CAAC;YAC3B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACxC,IAAI;YACJ,IAAI;SACJ,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,OAAO,CACZ,GAAuB,EACvB,IAAsB;QAEtB,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QAEvB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACf,MAAM,IAAI,SAAS,CAAC,oBAAoB,CAAC,CAAC;SAC1C;QAED,kDAAkD;QAClD,IAAI,MAAkB,CAAC;QACvB,IAAI,KAAK,CAAC,QAAQ,KAAK,QAAQ,EAAE;YAChC,KAAK,CAAC,2BAA2B,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACrD,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,0BAA0B,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;SACnE;aAAM;YACN,KAAK,CAAC,2BAA2B,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACrD,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACvC;QAED,MAAM,OAAO,GACZ,OAAO,IAAI,CAAC,YAAY,KAAK,UAAU;YACtC,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE;YACrB,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAC7B,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;QAClE,IAAI,OAAO,GAAG,WAAW,IAAI,IAAI,IAAI,CAAC,IAAI,eAAe,CAAC;QAE1D,wDAAwD;QACxD,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,EAAE;YACrC,MAAM,IAAI,GAAG,GAAG,kBAAkB,CACjC,KAAK,CAAC,QAAQ,CACd,IAAI,kBAAkB,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC1C,OAAO,CAAC,qBAAqB,CAAC,GAAG,SAAS,MAAM,CAAC,IAAI,CACpD,IAAI,CACJ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;SACvB;QAED,OAAO,CAAC,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;QAEtC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,EAAE;YACjC,OAAO,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,SAAS;gBAC3C,CAAC,CAAC,YAAY;gBACd,CAAC,CAAC,OAAO,CAAC;SACX;QACD,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACxC,OAAO,IAAI,GAAG,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;SAC3C;QAED,MAAM,oBAAoB,GAAG,IAAA,yCAAkB,EAAC,MAAM,CAAC,CAAC;QAExD,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,MAAM,CAAC,CAAC;QAE/B,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,MAAM,oBAAoB,CAAC;QACzD,GAAG,CAAC,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;QAExC,IAAI,OAAO,CAAC,UAAU,KAAK,GAAG,EAAE;YAC/B,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAE3B,IAAI,IAAI,CAAC,cAAc,EAAE;gBACxB,sDAAsD;gBACtD,8CAA8C;gBAC9C,KAAK,CAAC,oCAAoC,CAAC,CAAC;gBAC5C,OAAO,GAAG,CAAC,OAAO,CAAC;oBAClB,GAAG,IAAI,CACN,0BAA0B,CAAC,IAAI,CAAC,EAChC,MAAM,EACN,MAAM,EACN,MAAM,CACN;oBACD,MAAM;iBACN,CAAC,CAAC;aACH;YAED,OAAO,MAAM,CAAC;SACd;QAED,oEAAoE;QACpE,kEAAkE;QAClE,iEAAiE;QACjE,qBAAqB;QAErB,iEAAiE;QACjE,0DAA0D;QAC1D,oEAAoE;QACpE,mBAAmB;QACnB,EAAE;QACF,4CAA4C;QAC5C,MAAM,CAAC,OAAO,EAAE,CAAC;QAEjB,MAAM,UAAU,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QACvD,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;QAE3B,oEAAoE;QACpE,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAa,EAAE,EAAE;YACpC,KAAK,CAAC,2CAA2C,CAAC,CAAC;YACnD,IAAA,gBAAM,EAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;YAEpC,gEAAgE;YAChE,8DAA8D;YAC9D,YAAY;YACZ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,OAAO,UAAU,CAAC;IACnB,CAAC;;AA9IM,yBAAS,GAAG,CAAC,MAAM,EAAE,OAAO,CAAU,CAAC;AADlC,0CAAe;AAkJ5B,SAAS,MAAM,CAAC,MAAkC;IACjD,MAAM,CAAC,MAAM,EAAE,CAAC;AACjB,CAAC;AAED,SAAS,IAAI,CACZ,GAAM,EACN,GAAG,IAAO;IAIV,MAAM,GAAG,GAAG,EAEX,CAAC;IACF,IAAI,GAAqB,CAAC;IAC1B,KAAK,GAAG,IAAI,GAAG,EAAE;QAChB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACxB,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB;KACD;IACD,OAAO,GAAG,CAAC;AACZ,CAAC"},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/https-proxy-agent@7.0.6/node_modules/https-proxy-agent/dist/parse-proxy-response.js":{"lineLengths":[13,72,62,2,62,36,50,77,37,45,87,88,86,38,30,27,25,36,18,26,16,46,9,28,48,52,52,9,26,22,27,90,9,31,22,37,24,9,28,28,38,67,62,38,33,70,23,23,13,40,39,34,31,50,29,33,91,13,56,50,65,31,47,28,29,55,40,37,104,17,70,71,45,50,52,17,50,40,17,22,41,17,13,74,22,21,26,31,31,28,18,25,15,9,36,32,15,7,1,48,48],"data":{"version":3,"file":"parse-proxy-response.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/https-proxy-agent@7.0.6/node_modules/https-proxy-agent/src/parse-proxy-response.ts"],"names":[],"mappings":"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"},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/signal-exit@4.1.0/node_modules/signal-exit/dist/mjs/index.js":{"lineLengths":[65,63,53,60,39,19,43,34,51,41,47,46,41,38,37,55,26,64,27,15,15,25,20,6,17,22,17,6,14,23,19,35,40,9,52,24,28,30,32,11,5,16,36,5,28,40,35,29,23,19,9,28,43,28,9,14,30,9,5,28,31,25,9,32,24,46,51,9,28,62,9,19,5,1,22,1,37,12,26,44,10,16,34,10,18,36,10,6,2,49,14,25,5,14,16,1,41,52,40,25,65,24,29,13,25,31,23,20,26,16,32,43,32,36,45,70,71,69,35,63,46,83,84,82,82,81,27,37,34,68,74,61,17,36,49,34,70,41,68,29,53,40,17,14,9,61,49,5,22,29,40,29,9,28,37,24,9,59,33,22,49,63,68,30,13,10,5,12,27,19,9,28,65,68,68,35,33,36,17,51,23,46,13,25,9,44,47,10,46,49,10,5,14,28,19,9,29,32,53,33,28,75,13,32,17,60,37,13,25,32,11,55,67,33,5,30,29,40,21,9,43,28,65,91,5,31,45,56,46,49,37,13,33,60,33,69,32,23,9,14,55,9,5,1,35,65,25,15,3,67,39,2,68,29,2,61,3,8,3,66,66,45,2,12,3,6,3,68,66,45,2,12,3,100,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/signal-exit@4.1.0/node_modules/signal-exit/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nimport { signals } from './signals.js'\nexport { signals }\n\n// just a loosened process type so we can do some evil things\ntype ProcessRE = NodeJS.Process & {\n  reallyExit: (code?: number | undefined | null) => any\n  emit: (ev: string, ...a: any[]) => any\n}\n\nconst processOk = (process: any): process is ProcessRE =>\n  !!process &&\n  typeof process === 'object' &&\n  typeof process.removeListener === 'function' &&\n  typeof process.emit === 'function' &&\n  typeof process.reallyExit === 'function' &&\n  typeof process.listeners === 'function' &&\n  typeof process.kill === 'function' &&\n  typeof process.pid === 'number' &&\n  typeof process.on === 'function'\n\nconst kExitEmitter = Symbol.for('signal-exit emitter')\nconst global: typeof globalThis & { [kExitEmitter]?: Emitter } = globalThis\nconst ObjectDefineProperty = Object.defineProperty.bind(Object)\n\n/**\n * A function that takes an exit code and signal as arguments\n *\n * In the case of signal exits *only*, a return value of true\n * will indicate that the signal is being handled, and we should\n * not synthetically exit with the signal we received. Regardless\n * of the handler return value, the handler is unloaded when an\n * otherwise fatal signal is received, so you get exactly 1 shot\n * at it, unless you add another onExit handler at that point.\n *\n * In the case of numeric code exits, we may already have committed\n * to exiting the process, for example via a fatal exception or\n * unhandled promise rejection, so it is impossible to stop safely.\n */\nexport type Handler = (\n  code: number | null | undefined,\n  signal: NodeJS.Signals | null\n) => true | void\ntype ExitEvent = 'afterExit' | 'exit'\ntype Emitted = { [k in ExitEvent]: boolean }\ntype Listeners = { [k in ExitEvent]: Handler[] }\n\n// teeny special purpose ee\nclass Emitter {\n  emitted: Emitted = {\n    afterExit: false,\n    exit: false,\n  }\n\n  listeners: Listeners = {\n    afterExit: [],\n    exit: [],\n  }\n\n  count: number = 0\n  id: number = Math.random()\n\n  constructor() {\n    if (global[kExitEmitter]) {\n      return global[kExitEmitter]\n    }\n    ObjectDefineProperty(global, kExitEmitter, {\n      value: this,\n      writable: false,\n      enumerable: false,\n      configurable: false,\n    })\n  }\n\n  on(ev: ExitEvent, fn: Handler) {\n    this.listeners[ev].push(fn)\n  }\n\n  removeListener(ev: ExitEvent, fn: Handler) {\n    const list = this.listeners[ev]\n    const i = list.indexOf(fn)\n    /* c8 ignore start */\n    if (i === -1) {\n      return\n    }\n    /* c8 ignore stop */\n    if (i === 0 && list.length === 1) {\n      list.length = 0\n    } else {\n      list.splice(i, 1)\n    }\n  }\n\n  emit(\n    ev: ExitEvent,\n    code: number | null | undefined,\n    signal: NodeJS.Signals | null\n  ): boolean {\n    if (this.emitted[ev]) {\n      return false\n    }\n    this.emitted[ev] = true\n    let ret: boolean = false\n    for (const fn of this.listeners[ev]) {\n      ret = fn(code, signal) === true || ret\n    }\n    if (ev === 'exit') {\n      ret = this.emit('afterExit', code, signal) || ret\n    }\n    return ret\n  }\n}\n\nabstract class SignalExitBase {\n  abstract onExit(cb: Handler, opts?: { alwaysLast?: boolean }): () => void\n  abstract load(): void\n  abstract unload(): void\n}\n\nconst signalExitWrap = <T extends SignalExitBase>(handler: T) => {\n  return {\n    onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n      return handler.onExit(cb, opts)\n    },\n    load() {\n      return handler.load()\n    },\n    unload() {\n      return handler.unload()\n    },\n  }\n}\n\nclass SignalExitFallback extends SignalExitBase {\n  onExit() {\n    return () => {}\n  }\n  load() {}\n  unload() {}\n}\n\nclass SignalExit extends SignalExitBase {\n  // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n  // so use a supported signal instead\n  /* c8 ignore start */\n  #hupSig = process.platform === 'win32' ? 'SIGINT' : 'SIGHUP'\n  /* c8 ignore stop */\n  #emitter = new Emitter()\n  #process: ProcessRE\n  #originalProcessEmit: ProcessRE['emit']\n  #originalProcessReallyExit: ProcessRE['reallyExit']\n\n  #sigListeners: { [k in NodeJS.Signals]?: () => void } = {}\n  #loaded: boolean = false\n\n  constructor(process: ProcessRE) {\n    super()\n    this.#process = process\n    // { <signal>: <listener fn>, ... }\n    this.#sigListeners = {}\n    for (const sig of signals) {\n      this.#sigListeners[sig] = () => {\n        // If there are no other listeners, an exit is coming!\n        // Simplest way: remove us and then re-send the signal.\n        // We know that this will kill the process, so we can\n        // safely emit now.\n        const listeners = this.#process.listeners(sig)\n        let { count } = this.#emitter\n        // This is a workaround for the fact that signal-exit v3 and signal\n        // exit v4 are not aware of each other, and each will attempt to let\n        // the other handle it, so neither of them do. To correct this, we\n        // detect if we're the only handler *except* for previous versions\n        // of signal-exit, and increment by the count of listeners it has\n        // created.\n        /* c8 ignore start */\n        const p = process as unknown as {\n          __signal_exit_emitter__?: { count: number }\n        }\n        if (\n          typeof p.__signal_exit_emitter__ === 'object' &&\n          typeof p.__signal_exit_emitter__.count === 'number'\n        ) {\n          count += p.__signal_exit_emitter__.count\n        }\n        /* c8 ignore stop */\n        if (listeners.length === count) {\n          this.unload()\n          const ret = this.#emitter.emit('exit', null, sig)\n          /* c8 ignore start */\n          const s = sig === 'SIGHUP' ? this.#hupSig : sig\n          if (!ret) process.kill(process.pid, s)\n          /* c8 ignore stop */\n        }\n      }\n    }\n\n    this.#originalProcessReallyExit = process.reallyExit\n    this.#originalProcessEmit = process.emit\n  }\n\n  onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return () => {}\n    }\n    /* c8 ignore stop */\n\n    if (this.#loaded === false) {\n      this.load()\n    }\n\n    const ev = opts?.alwaysLast ? 'afterExit' : 'exit'\n    this.#emitter.on(ev, cb)\n    return () => {\n      this.#emitter.removeListener(ev, cb)\n      if (\n        this.#emitter.listeners['exit'].length === 0 &&\n        this.#emitter.listeners['afterExit'].length === 0\n      ) {\n        this.unload()\n      }\n    }\n  }\n\n  load() {\n    if (this.#loaded) {\n      return\n    }\n    this.#loaded = true\n\n    // This is the number of onSignalExit's that are in play.\n    // It's important so that we can count the correct number of\n    // listeners on signals, and don't wait for the other one to\n    // handle it instead of us.\n    this.#emitter.count += 1\n\n    for (const sig of signals) {\n      try {\n        const fn = this.#sigListeners[sig]\n        if (fn) this.#process.on(sig, fn)\n      } catch (_) {}\n    }\n\n    this.#process.emit = (ev: string, ...a: any[]) => {\n      return this.#processEmit(ev, ...a)\n    }\n    this.#process.reallyExit = (code?: number | null | undefined) => {\n      return this.#processReallyExit(code)\n    }\n  }\n\n  unload() {\n    if (!this.#loaded) {\n      return\n    }\n    this.#loaded = false\n\n    signals.forEach(sig => {\n      const listener = this.#sigListeners[sig]\n      /* c8 ignore start */\n      if (!listener) {\n        throw new Error('Listener not defined for signal: ' + sig)\n      }\n      /* c8 ignore stop */\n      try {\n        this.#process.removeListener(sig, listener)\n        /* c8 ignore start */\n      } catch (_) {}\n      /* c8 ignore stop */\n    })\n    this.#process.emit = this.#originalProcessEmit\n    this.#process.reallyExit = this.#originalProcessReallyExit\n    this.#emitter.count -= 1\n  }\n\n  #processReallyExit(code?: number | null | undefined) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return 0\n    }\n    this.#process.exitCode = code || 0\n    /* c8 ignore stop */\n\n    this.#emitter.emit('exit', this.#process.exitCode, null)\n    return this.#originalProcessReallyExit.call(\n      this.#process,\n      this.#process.exitCode\n    )\n  }\n\n  #processEmit(ev: string, ...args: any[]): any {\n    const og = this.#originalProcessEmit\n    if (ev === 'exit' && processOk(this.#process)) {\n      if (typeof args[0] === 'number') {\n        this.#process.exitCode = args[0]\n        /* c8 ignore start */\n      }\n      /* c8 ignore start */\n      const ret = og.call(this.#process, ev, ...args)\n      /* c8 ignore start */\n      this.#emitter.emit('exit', this.#process.exitCode, null)\n      /* c8 ignore stop */\n      return ret\n    } else {\n      return og.call(this.#process, ev, ...args)\n    }\n  }\n}\n\nconst process = globalThis.process\n// wrap so that we call the method on the actual handler, without\n// exporting it directly.\nexport const {\n  /**\n   * Called when the process is exiting, whether via signal, explicit\n   * exit, or running out of stuff to do.\n   *\n   * If the global process object is not suitable for instrumentation,\n   * then this will be a no-op.\n   *\n   * Returns a function that may be used to unload signal-exit.\n   */\n  onExit,\n\n  /**\n   * Load the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  load,\n\n  /**\n   * Unload the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  unload,\n} = signalExitWrap(\n  processOk(process) ? new SignalExit(process) : new SignalExitFallback()\n)\n"]},"url":null,"sourceURL":null},"file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/signal-exit@4.1.0/node_modules/signal-exit/dist/mjs/signals.js":{"lineLengths":[3,47,2,54,54,53,55,28,2,55,54,52,2,54,49,2,56,52,55,36,2,54,50,54,13,3,26,44,35,125,61,14,16,6,1,35,60,1,35],"data":{"version":3,"file":"signals.js","sourceRoot":"","sources":["file:///Users/dimaqiu/tools-workspace/ai-commit-generator/node_modules/.pnpm/signal-exit@4.1.0/node_modules/signal-exit/src/signals.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,MAAM,CAAC,MAAM,OAAO,GAAqB,EAAE,CAAA;AAC3C,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAA;AAE3C,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;IAChC,OAAO,CAAC,IAAI,CACV,SAAS,EACT,SAAS,EACT,WAAW,EACX,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,QAAQ,EACR,SAAS,EACT,QAAQ;IACR,yDAAyD;IACzD,UAAU;IACV,YAAY;KACb,CAAA;CACF;AAED,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;IAChC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAA;CACxD","sourcesContent":["/**\n * This is not the set of all possible signals.\n *\n * It IS, however, the set of all signals that trigger\n * an exit on either Linux or BSD systems.  Linux is a\n * superset of the signal names supported on BSD, and\n * the unknown signals just fail to register, so we can\n * catch that easily enough.\n *\n * Windows signals are a different set, since there are\n * signals that terminate Windows processes, but don't\n * terminate (or don't even exist) on Posix systems.\n *\n * Don't bother with SIGKILL.  It's uncatchable, which\n * means that we can't fire any callbacks anyway.\n *\n * If a user does happen to register a handler on a non-\n * fatal signal like SIGWINCH or something, and then\n * exit, it'll end up firing `process.emit('exit')`, so\n * the handler will be fired anyway.\n *\n * SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n * artificially, inherently leave the process in a\n * state from which it is not safe to try and enter JS\n * listeners.\n */\nexport const signals: NodeJS.Signals[] = []\nsignals.push('SIGHUP', 'SIGINT', 'SIGTERM')\n\nif (process.platform !== 'win32') {\n  signals.push(\n    'SIGALRM',\n    'SIGABRT',\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  signals.push('SIGIO', 'SIGPOLL', 'SIGPWR', 'SIGSTKFLT')\n}\n"]},"url":null,"sourceURL":null}}}